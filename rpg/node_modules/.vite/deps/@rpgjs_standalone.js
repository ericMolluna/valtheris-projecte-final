import {
  clientEntryPoint_default
} from "./chunk-GHOBIREB.js";
import {
  entry_point_default,
  mock_socket_default
} from "./chunk-XB3CBZHP.js";
import {
  Utils_exports
} from "./chunk-34HTHRSF.js";
import "./chunk-JLYFZH6S.js";
import "./chunk-OHJ562UN.js";
import {
  __publicField
} from "./chunk-2GTGKKMZ.js";

// node_modules/@rpgjs/standalone/src/index.ts
var { serverIo, ClientIo } = mock_socket_default;
function entryPoint(modules, options = {}) {
  const io = new ClientIo();
  class Module {
  }
  class StandaloneGame {
    constructor() {
      __publicField(this, "server");
      __publicField(this, "client");
    }
    async start() {
      this.client = clientEntryPoint_default(modules, {
        standalone: true,
        io,
        globalConfig: options.globalConfigClient,
        ...options
      });
      this.server = await entry_point_default(modules, {
        io: serverIo,
        standalone: true,
        basePath: "",
        globalConfig: options.globalConfigServer,
        ...options
      });
      await this.server.start();
      await this.client.start();
      return this;
    }
    setHooks(hooks, side) {
      if (!Utils_exports.isArray(hooks))
        modules.push({
          [side]: hooks
        });
      else
        modules.concat(hooks.map((hook) => {
          return {
            [side]: hook
          };
        }));
    }
    logicHooks(serverHooks) {
      this.setHooks(serverHooks, "server");
    }
    renderHooks(clientHooks) {
      this.setHooks(clientHooks, "client");
    }
  }
  return new StandaloneGame();
}
export {
  entryPoint
};
//# sourceMappingURL=@rpgjs_standalone.js.map
