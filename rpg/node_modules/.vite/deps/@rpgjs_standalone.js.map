{
  "version": 3,
  "sources": ["../../@rpgjs/standalone/src/index.ts"],
  "sourcesContent": ["import { Utils } from '@rpgjs/common'\nimport { entryPoint as entryPointServer, RpgServerEngine } from '@rpgjs/server'\nimport { entryPoint as entryPointClient, RpgClientEngine } from '@rpgjs/client'\nimport { MockSocketIo } from 'simple-room'\n\nconst { serverIo, ClientIo } = MockSocketIo\n\nexport function entryPoint(modules: any[], options: any = {}) {\n    const io = new ClientIo()\n\n    class Module { }\n\n    class StandaloneGame {\n        server: RpgServerEngine\n        client: RpgClientEngine\n\n        async start() {\n            this.client = entryPointClient(modules, {\n                standalone: true,\n                io,\n                globalConfig: options.globalConfigClient,\n                ...options\n            })\n            this.server = await entryPointServer(modules, {\n                io: serverIo,\n                standalone: true,\n                basePath: '',\n                globalConfig: options.globalConfigServer,\n                ...options\n            })\n            await this.server.start()\n            await this.client.start()\n            return this\n        }\n\n        private setHooks(hooks, side: string) {\n            if (!Utils.isArray(hooks)) modules.push({\n                [side]: hooks\n            })\n            else modules.concat(hooks.map(hook => {\n                return {\n                    [side]: hook\n                }\n            }))\n        }\n\n        logicHooks(serverHooks) {\n            this.setHooks(serverHooks, 'server')\n        }\n\n        renderHooks(clientHooks) {\n            this.setHooks(clientHooks, 'client')\n        }\n    }\n    return new StandaloneGame()\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAKA,IAAM,EAAE,UAAU,SAAS,IAAI;AAExB,SAAS,WAAW,SAAgB,UAAe,CAAC,GAAG;AAC1D,QAAM,KAAK,IAAI,SAAS;AAAA,EAExB,MAAM,OAAO;AAAA,EAAE;AAAA,EAEf,MAAM,eAAe;AAAA,IAArB;AACI;AACA;AAAA;AAAA,IAEA,MAAM,QAAQ;AACV,WAAK,SAAS,yBAAiB,SAAS;AAAA,QACpC,YAAY;AAAA,QACZ;AAAA,QACA,cAAc,QAAQ;AAAA,QACtB,GAAG;AAAA,MACP,CAAC;AACD,WAAK,SAAS,MAAM,oBAAiB,SAAS;AAAA,QAC1C,IAAI;AAAA,QACJ,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,cAAc,QAAQ;AAAA,QACtB,GAAG;AAAA,MACP,CAAC;AACD,YAAM,KAAK,OAAO,MAAM;AACxB,YAAM,KAAK,OAAO,MAAM;AACxB,aAAO;AAAA,IACX;AAAA,IAEQ,SAAS,OAAO,MAAc;AAClC,UAAI,CAAC,cAAM,QAAQ,KAAK;AAAG,gBAAQ,KAAK;AAAA,UACpC,CAAC,IAAI,GAAG;AAAA,QACZ,CAAC;AAAA;AACI,gBAAQ,OAAO,MAAM,IAAI,UAAQ;AAClC,iBAAO;AAAA,YACH,CAAC,IAAI,GAAG;AAAA,UACZ;AAAA,QACJ,CAAC,CAAC;AAAA,IACN;AAAA,IAEA,WAAW,aAAa;AACpB,WAAK,SAAS,aAAa,QAAQ;AAAA,IACvC;AAAA,IAEA,YAAY,aAAa;AACrB,WAAK,SAAS,aAAa,QAAQ;AAAA,IACvC;AAAA,EACJ;AACA,SAAO,IAAI,eAAe;AAC9B;",
  "names": []
}
