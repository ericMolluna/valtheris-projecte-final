{
  "version": 3,
  "sources": ["../../sat/SAT.js", "../../rollup-plugin-node-polyfills/polyfills/events.js", "../../rollup-plugin-node-polyfills/polyfills/process-es6.js", "../../rollup-plugin-node-polyfills/polyfills/inherits.js", "../../rollup-plugin-node-polyfills/polyfills/util.js", "../../rollup-plugin-node-polyfills/polyfills/buffer-es6.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js", "../../rollup-plugin-node-polyfills/polyfills/string-decoder.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js", "../../rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js", "../../rollup-plugin-node-polyfills/polyfills/stream.js", "../../sax/lib/sax.js", "../../xml-js/lib/array-helper.js", "../../xml-js/lib/options-helper.js", "../../xml-js/lib/xml2js.js", "../../xml-js/lib/xml2json.js", "../../xml-js/lib/js2xml.js", "../../xml-js/lib/json2xml.js", "../../xml-js/lib/index.js", "browser-external:fs", "../../msgpack-lite/lib/buffer-global.js", "../../isarray/index.js", "../../msgpack-lite/lib/bufferish-array.js", "../../msgpack-lite/lib/bufferish-buffer.js", "../../msgpack-lite/lib/bufferish-uint8array.js", "../../msgpack-lite/lib/buffer-lite.js", "../../msgpack-lite/lib/bufferish-proto.js", "../../msgpack-lite/lib/bufferish.js", "../../msgpack-lite/lib/ext-buffer.js", "../../msgpack-lite/lib/ext-packer.js", "../../int64-buffer/int64-buffer.js", "../../ieee754/index.js", "../../msgpack-lite/lib/write-uint8.js", "../../msgpack-lite/lib/write-token.js", "../../msgpack-lite/lib/write-type.js", "../../msgpack-lite/lib/codec-base.js", "../../msgpack-lite/lib/write-core.js", "../../msgpack-lite/lib/flex-buffer.js", "../../msgpack-lite/lib/encode-buffer.js", "../../msgpack-lite/lib/encode.js", "../../msgpack-lite/lib/ext-unpacker.js", "../../msgpack-lite/lib/read-format.js", "../../msgpack-lite/lib/read-token.js", "../../msgpack-lite/lib/read-core.js", "../../msgpack-lite/lib/decode-buffer.js", "../../msgpack-lite/lib/decode.js", "../../event-lite/event-lite.js", "../../msgpack-lite/lib/encoder.js", "../../msgpack-lite/lib/decoder.js", "../../msgpack-lite/lib/ext.js", "../../msgpack-lite/lib/codec.js", "../../msgpack-lite/lib/browser.js", "../../@rpgjs/common/src/Utils.ts", "../../@rpgjs/types/src/Player.ts", "../../@rpgjs/types/src/Input.ts", "../../@rpgjs/types/src/Hitbox.ts", "../../@rpgjs/types/src/Socket.ts", "../../@rpgjs/common/src/Hit.ts", "../../@rpgjs/tiled/src/types/Layer.ts", "../../@rpgjs/tiled/src/utils.ts", "../../@rpgjs/tiled/src/parser/parser.ts", "../../rollup-plugin-node-polyfills/polyfills/path.js", "../../@rpgjs/tiled/src/classes/Properties.ts", "../../@rpgjs/tiled/src/classes/Gid.ts", "../../@rpgjs/tiled/src/classes/Tile.ts", "../../@rpgjs/tiled/src/classes/Object.ts", "../../@rpgjs/tiled/src/classes/Layer.ts", "../../@rpgjs/tiled/src/classes/Tileset.ts", "../../@rpgjs/tiled/src/parser/open-file.ts", "../../@rpgjs/tiled/src/classes/Map.ts", "../../@rpgjs/common/src/Vector2d.ts", "../../@rpgjs/common/src/Shape.ts", "../../tslib/tslib.es6.mjs", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/operators/tap.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/lastValueFrom.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/observable/forkJoin.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/finalize.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/timeInterval.ts", "../../@rpgjs/common/src/EventEmitter.ts", "../../@rpgjs/common/src/Plugin.ts", "../../@rpgjs/common/src/AbstractObject.ts", "../../@rpgjs/common/src/VirtualGrid.ts", "../../@rpgjs/common/src/Map.ts", "../../@rpgjs/common/src/Worker.ts", "../../@rpgjs/common/src/Game.ts", "../../@rpgjs/common/src/Player.ts", "../../@rpgjs/common/src/gui/PrebuiltGui.ts", "../../@rpgjs/common/src/Logger.ts", "../../@rpgjs/common/src/Module.ts", "../../@rpgjs/common/src/transports/io.ts", "../../@rpgjs/common/src/Scheduler.ts", "../../quickselect/index.js", "../../rbush/index.js", "../../@rpgjs/common/src/WorldMaps.ts", "../../@rpgjs/common/src/Color.ts", "../../@rpgjs/common/src/DefaultInput.ts", "../../@rpgjs/common/src/Inject.ts"],
  "sourcesContent": ["// Version 0.9.0 - Copyright 2012 - 2021 -  Jim Riecken <jimr@jimr.ca>\n//\n// Released under the MIT License - https://github.com/jriecken/sat-js\n//\n// A simple library for determining intersections of circles and\n// polygons using the Separating Axis Theorem.\n/** @preserve SAT.js - Version 0.9.0 - Copyright 2012 - 2021 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */\n\n/*global define: false, module: false*/\n/*jshint shadow:true, sub:true, forin:true, noarg:true, noempty:true,\n  eqeqeq:true, bitwise:true, strict:true, undef:true,\n  curly:true, browser:true */\n\n// Create a UMD wrapper for SAT. Works in:\n//\n//  - Plain browser via global SAT variable\n//  - AMD loader (like require.js)\n//  - Node.js\n//\n// The quoted properties all over the place are used so that the Closure Compiler\n// does not mangle the exposed API in advanced mode.\n/**\n * @param {*} root - The global scope\n * @param {Function} factory - Factory that creates SAT module\n */\n(function (root, factory) {\n  \"use strict\";\n  if (typeof define === 'function' && define['amd']) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module['exports'] = factory();\n  } else {\n    root['SAT'] = factory();\n  }\n}(this, function () {\n  \"use strict\";\n\n  var SAT = {};\n\n  //\n  // ## Vector\n  //\n  // Represents a vector in two dimensions with `x` and `y` properties.\n\n\n  // Create a new Vector, optionally passing in the `x` and `y` coordinates. If\n  // a coordinate is not specified, it will be set to `0`\n  /**\n   * @param {?number=} x The x position.\n   * @param {?number=} y The y position.\n   * @constructor\n   */\n  function Vector(x, y) {\n    this['x'] = x || 0;\n    this['y'] = y || 0;\n  }\n  SAT['Vector'] = Vector;\n  // Alias `Vector` as `V`\n  SAT['V'] = Vector;\n\n\n  // Copy the values of another Vector into this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['copy'] = Vector.prototype.copy = function (other) {\n    this['x'] = other['x'];\n    this['y'] = other['y'];\n    return this;\n  };\n\n  // Create a new vector with the same coordinates as this on.\n  /**\n   * @return {Vector} The new cloned vector\n   */\n  Vector.prototype['clone'] = Vector.prototype.clone = function () {\n    return new Vector(this['x'], this['y']);\n  };\n\n  // Change this vector to be perpendicular to what it was before. (Effectively\n  // roatates it 90 degrees in a clockwise direction)\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['perp'] = Vector.prototype.perp = function () {\n    var x = this['x'];\n    this['x'] = this['y'];\n    this['y'] = -x;\n    return this;\n  };\n\n  // Rotate this vector (counter-clockwise) by the specified angle (in radians).\n  /**\n   * @param {number} angle The angle to rotate (in radians)\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['rotate'] = Vector.prototype.rotate = function (angle) {\n    var x = this['x'];\n    var y = this['y'];\n    this['x'] = x * Math.cos(angle) - y * Math.sin(angle);\n    this['y'] = x * Math.sin(angle) + y * Math.cos(angle);\n    return this;\n  };\n\n  // Reverse this vector.\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reverse'] = Vector.prototype.reverse = function () {\n    this['x'] = -this['x'];\n    this['y'] = -this['y'];\n    return this;\n  };\n\n\n  // Normalize this vector.  (make it have length of `1`)\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['normalize'] = Vector.prototype.normalize = function () {\n    var d = this.len();\n    if (d > 0) {\n      this['x'] = this['x'] / d;\n      this['y'] = this['y'] / d;\n    }\n    return this;\n  };\n\n  // Add another vector to this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['add'] = Vector.prototype.add = function (other) {\n    this['x'] += other['x'];\n    this['y'] += other['y'];\n    return this;\n  };\n\n  // Subtract another vector from this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaiing.\n   */\n  Vector.prototype['sub'] = Vector.prototype.sub = function (other) {\n    this['x'] -= other['x'];\n    this['y'] -= other['y'];\n    return this;\n  };\n\n  // Scale this vector. An independent scaling factor can be provided\n  // for each axis, or a single scaling factor that will scale both `x` and `y`.\n  /**\n   * @param {number} x The scaling factor in the x direction.\n   * @param {?number=} y The scaling factor in the y direction.  If this\n   *   is not specified, the x scaling factor will be used.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['scale'] = Vector.prototype.scale = function (x, y) {\n    this['x'] *= x;\n    this['y'] *= typeof y != 'undefined' ? y : x;\n    return this;\n  };\n\n  // Project this vector on to another vector.\n  /**\n   * @param {Vector} other The vector to project onto.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['project'] = Vector.prototype.project = function (other) {\n    var amt = this.dot(other) / other.len2();\n    this['x'] = amt * other['x'];\n    this['y'] = amt * other['y'];\n    return this;\n  };\n\n  // Project this vector onto a vector of unit length. This is slightly more efficient\n  // than `project` when dealing with unit vectors.\n  /**\n   * @param {Vector} other The unit vector to project onto.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['projectN'] = Vector.prototype.projectN = function (other) {\n    var amt = this.dot(other);\n    this['x'] = amt * other['x'];\n    this['y'] = amt * other['y'];\n    return this;\n  };\n\n  // Reflect this vector on an arbitrary axis.\n  /**\n   * @param {Vector} axis The vector representing the axis.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reflect'] = Vector.prototype.reflect = function (axis) {\n    var x = this['x'];\n    var y = this['y'];\n    this.project(axis).scale(2);\n    this['x'] -= x;\n    this['y'] -= y;\n    return this;\n  };\n\n  // Reflect this vector on an arbitrary axis (represented by a unit vector). This is\n  // slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\n  /**\n   * @param {Vector} axis The unit vector representing the axis.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reflectN'] = Vector.prototype.reflectN = function (axis) {\n    var x = this['x'];\n    var y = this['y'];\n    this.projectN(axis).scale(2);\n    this['x'] -= x;\n    this['y'] -= y;\n    return this;\n  };\n\n  // Get the dot product of this vector and another.\n  /**\n   * @param {Vector}  other The vector to dot this one against.\n   * @return {number} The dot product.\n   */\n  Vector.prototype['dot'] = Vector.prototype.dot = function (other) {\n    return this['x'] * other['x'] + this['y'] * other['y'];\n  };\n\n  // Get the squared length of this vector.\n  /**\n   * @return {number} The length^2 of this vector.\n   */\n  Vector.prototype['len2'] = Vector.prototype.len2 = function () {\n    return this.dot(this);\n  };\n\n  // Get the length of this vector.\n  /**\n   * @return {number} The length of this vector.\n   */\n  Vector.prototype['len'] = Vector.prototype.len = function () {\n    return Math.sqrt(this.len2());\n  };\n\n  // ## Circle\n  //\n  // Represents a circle with a position and a radius.\n\n  // Create a new circle, optionally passing in a position and/or radius. If no position\n  // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\n  // have a radius of `0`.\n  /**\n   * @param {Vector=} pos A vector representing the position of the center of the circle\n   * @param {?number=} r The radius of the circle\n   * @constructor\n   */\n  function Circle(pos, r) {\n    this['pos'] = pos || new Vector();\n    this['r'] = r || 0;\n    this['offset'] = new Vector();\n  }\n  SAT['Circle'] = Circle;\n\n  // Compute the axis-aligned bounding box (AABB) of this Circle.\n  //\n  // Note: Returns a _new_ `Box` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Circle.prototype['getAABBAsBox'] = Circle.prototype.getAABBAsBox = function () {\n    var r = this['r'];\n    var corner = this['pos'].clone().add(this['offset']).sub(new Vector(r, r));\n    return new Box(corner, r * 2, r * 2);\n  };\n\n  // Compute the axis-aligned bounding box (AABB) of this Circle.\n  //\n  // Note: Returns a _new_ `Polygon` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Circle.prototype['getAABB'] = Circle.prototype.getAABB = function () {\n    return this.getAABBAsBox().toPolygon();\n  };\n\n  // Set the current offset to apply to the radius.\n  /**\n   * @param {Vector} offset The new offset vector.\n   * @return {Circle} This for chaining.\n   */\n  Circle.prototype['setOffset'] = Circle.prototype.setOffset = function (offset) {\n    this['offset'] = offset;\n    return this;\n  };\n\n  // ## Polygon\n  //\n  // Represents a *convex* polygon with any number of points (specified in counter-clockwise order)\n  //\n  // Note: Do _not_ manually change the `points`, `angle`, or `offset` properties. Use the\n  // provided setters. Otherwise the calculated properties will not be updated correctly.\n  //\n  // `pos` can be changed directly.\n\n  // Create a new polygon, passing in a position vector, and an array of points (represented\n  // by vectors relative to the position vector). If no position is passed in, the position\n  // of the polygon will be `(0,0)`.\n  /**\n   * @param {Vector=} pos A vector representing the origin of the polygon. (all other\n   *   points are relative to this one)\n   * @param {Array<Vector>=} points An array of vectors representing the points in the polygon,\n   *   in counter-clockwise order.\n   * @constructor\n   */\n  function Polygon(pos, points) {\n    this['pos'] = pos || new Vector();\n    this['angle'] = 0;\n    this['offset'] = new Vector();\n    this.setPoints(points || []);\n  }\n  SAT['Polygon'] = Polygon;\n\n  // Set the points of the polygon. Any consecutive duplicate points will be combined.\n  //\n  // Note: The points are counter-clockwise *with respect to the coordinate system*.\n  // If you directly draw the points on a screen that has the origin at the top-left corner\n  // it will _appear_ visually that the points are being specified clockwise. This is just\n  // because of the inversion of the Y-axis when being displayed.\n  /**\n   * @param {Array<Vector>=} points An array of vectors representing the points in the polygon,\n   *   in counter-clockwise order.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setPoints'] = Polygon.prototype.setPoints = function (points) {\n    // Only re-allocate if this is a new polygon or the number of points has changed.\n    var lengthChanged = !this['points'] || this['points'].length !== points.length;\n    if (lengthChanged) {\n      var i;\n      var calcPoints = this['calcPoints'] = [];\n      var edges = this['edges'] = [];\n      var normals = this['normals'] = [];\n      // Allocate the vector arrays for the calculated properties\n      for (i = 0; i < points.length; i++) {\n        // Remove consecutive duplicate points\n        var p1 = points[i];\n        var p2 = i < points.length - 1 ? points[i + 1] : points[0];\n        if (p1 !== p2 && p1.x === p2.x && p1.y === p2.y) {\n          points.splice(i, 1);\n          i -= 1;\n          continue;\n        }\n        calcPoints.push(new Vector());\n        edges.push(new Vector());\n        normals.push(new Vector());\n      }\n    }\n    this['points'] = points;\n    this._recalc();\n    return this;\n  };\n\n  // Set the current rotation angle of the polygon.\n  /**\n   * @param {number} angle The current rotation angle (in radians).\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setAngle'] = Polygon.prototype.setAngle = function (angle) {\n    this['angle'] = angle;\n    this._recalc();\n    return this;\n  };\n\n  // Set the current offset to apply to the `points` before applying the `angle` rotation.\n  /**\n   * @param {Vector} offset The new offset vector.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setOffset'] = Polygon.prototype.setOffset = function (offset) {\n    this['offset'] = offset;\n    this._recalc();\n    return this;\n  };\n\n  // Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\n  //\n  // Note: This changes the **original** points (so any `angle` will be applied on top of this rotation).\n  /**\n   * @param {number} angle The angle to rotate (in radians)\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['rotate'] = Polygon.prototype.rotate = function (angle) {\n    var points = this['points'];\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      points[i].rotate(angle);\n    }\n    this._recalc();\n    return this;\n  };\n\n  // Translates the points of this polygon by a specified amount relative to the origin of *its own coordinate\n  // system* (i.e. `pos`).\n  //\n  // This is most useful to change the \"center point\" of a polygon. If you just want to move the whole polygon, change\n  // the coordinates of `pos`.\n  //\n  // Note: This changes the **original** points (so any `offset` will be applied on top of this translation)\n  /**\n   * @param {number} x The horizontal amount to translate.\n   * @param {number} y The vertical amount to translate.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['translate'] = Polygon.prototype.translate = function (x, y) {\n    var points = this['points'];\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      points[i]['x'] += x;\n      points[i]['y'] += y;\n    }\n    this._recalc();\n    return this;\n  };\n\n\n  // Computes the calculated collision polygon. Applies the `angle` and `offset` to the original points then recalculates the\n  // edges and normals of the collision polygon.\n  /**\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype._recalc = function () {\n    // Calculated points - this is what is used for underlying collisions and takes into account\n    // the angle/offset set on the polygon.\n    var calcPoints = this['calcPoints'];\n    // The edges here are the direction of the `n`th edge of the polygon, relative to\n    // the `n`th point. If you want to draw a given edge from the edge value, you must\n    // first translate to the position of the starting point.\n    var edges = this['edges'];\n    // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n    // to the position of the `n`th point. If you want to draw an edge normal, you must first\n    // translate to the position of the starting point.\n    var normals = this['normals'];\n    // Copy the original points array and apply the offset/angle\n    var points = this['points'];\n    var offset = this['offset'];\n    var angle = this['angle'];\n    var len = points.length;\n    var i;\n    for (i = 0; i < len; i++) {\n      var calcPoint = calcPoints[i].copy(points[i]);\n      calcPoint['x'] += offset['x'];\n      calcPoint['y'] += offset['y'];\n      if (angle !== 0) {\n        calcPoint.rotate(angle);\n      }\n    }\n    // Calculate the edges/normals\n    for (i = 0; i < len; i++) {\n      var p1 = calcPoints[i];\n      var p2 = i < len - 1 ? calcPoints[i + 1] : calcPoints[0];\n      var e = edges[i].copy(p2).sub(p1);\n      normals[i].copy(e).perp().normalize();\n    }\n    return this;\n  };\n\n\n  // Compute the axis-aligned bounding box. Any current state\n  // (translations/rotations) will be applied before constructing the AABB.\n  //\n  // Note: Returns a _new_ `Box` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Polygon.prototype['getAABBAsBox'] = Polygon.prototype.getAABBAsBox = function () {\n    var points = this['calcPoints'];\n    var len = points.length;\n    var xMin = points[0]['x'];\n    var yMin = points[0]['y'];\n    var xMax = points[0]['x'];\n    var yMax = points[0]['y'];\n    for (var i = 1; i < len; i++) {\n      var point = points[i];\n      if (point['x'] < xMin) {\n        xMin = point['x'];\n      }\n      else if (point['x'] > xMax) {\n        xMax = point['x'];\n      }\n      if (point['y'] < yMin) {\n        yMin = point['y'];\n      }\n      else if (point['y'] > yMax) {\n        yMax = point['y'];\n      }\n    }\n    return new Box(this['pos'].clone().add(new Vector(xMin, yMin)), xMax - xMin, yMax - yMin);\n  };\n\n\n  // Compute the axis-aligned bounding box. Any current state\n  // (translations/rotations) will be applied before constructing the AABB.\n  //\n  // Note: Returns a _new_ `Polygon` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Polygon.prototype['getAABB'] = Polygon.prototype.getAABB = function () {\n    return this.getAABBAsBox().toPolygon();\n  };\n\n  // Compute the centroid (geometric center) of the polygon. Any current state\n  // (translations/rotations) will be applied before computing the centroid.\n  //\n  // See https://en.wikipedia.org/wiki/Centroid#Centroid_of_a_polygon\n  //\n  // Note: Returns a _new_ `Vector` each time you call this.\n  /**\n   * @return {Vector} A Vector that contains the coordinates of the Centroid.\n   */\n  Polygon.prototype['getCentroid'] = Polygon.prototype.getCentroid = function () {\n    var points = this['calcPoints'];\n    var len = points.length;\n    var cx = 0;\n    var cy = 0;\n    var ar = 0;\n    for (var i = 0; i < len; i++) {\n      var p1 = points[i];\n      var p2 = i === len - 1 ? points[0] : points[i + 1]; // Loop around if last point\n      var a = p1['x'] * p2['y'] - p2['x'] * p1['y'];\n      cx += (p1['x'] + p2['x']) * a;\n      cy += (p1['y'] + p2['y']) * a;\n      ar += a;\n    }\n    ar = ar * 3; // we want 1 / 6 the area and we currently have 2*area\n    cx = cx / ar;\n    cy = cy / ar;\n    return new Vector(cx, cy);\n  };\n\n\n  // ## Box\n  //\n  // Represents an axis-aligned box, with a width and height.\n\n\n  // Create a new box, with the specified position, width, and height. If no position\n  // is given, the position will be `(0,0)`. If no width or height are given, they will\n  // be set to `0`.\n  /**\n   * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n   * @param {?number=} w The width of the box.\n   * @param {?number=} h The height of the box.\n   * @constructor\n   */\n  function Box(pos, w, h) {\n    this['pos'] = pos || new Vector();\n    this['w'] = w || 0;\n    this['h'] = h || 0;\n  }\n  SAT['Box'] = Box;\n\n  // Returns a polygon whose edges are the same as this box.\n  /**\n   * @return {Polygon} A new Polygon that represents this box.\n   */\n  Box.prototype['toPolygon'] = Box.prototype.toPolygon = function () {\n    var pos = this['pos'];\n    var w = this['w'];\n    var h = this['h'];\n    return new Polygon(new Vector(pos['x'], pos['y']), [\n      new Vector(), new Vector(w, 0),\n      new Vector(w, h), new Vector(0, h)\n    ]);\n  };\n\n  // ## Response\n  //\n  // An object representing the result of an intersection. Contains:\n  //  - The two objects participating in the intersection\n  //  - The vector representing the minimum change necessary to extract the first object\n  //    from the second one (as well as a unit vector in that direction and the magnitude\n  //    of the overlap)\n  //  - Whether the first object is entirely inside the second, and vice versa.\n  /**\n   * @constructor\n   */\n  function Response() {\n    this['a'] = null;\n    this['b'] = null;\n    this['overlapN'] = new Vector();\n    this['overlapV'] = new Vector();\n    this.clear();\n  }\n  SAT['Response'] = Response;\n\n  // Set some values of the response back to their defaults.  Call this between tests if\n  // you are going to reuse a single Response object for multiple intersection tests (recommented\n  // as it will avoid allcating extra memory)\n  /**\n   * @return {Response} This for chaining\n   */\n  Response.prototype['clear'] = Response.prototype.clear = function () {\n    this['aInB'] = true;\n    this['bInA'] = true;\n    this['overlap'] = Number.MAX_VALUE;\n    return this;\n  };\n\n  // ## Object Pools\n\n  // A pool of `Vector` objects that are used in calculations to avoid\n  // allocating memory.\n  /**\n   * @type {Array<Vector>}\n   */\n  var T_VECTORS = [];\n  for (var i = 0; i < 10; i++) { T_VECTORS.push(new Vector()); }\n\n  // A pool of arrays of numbers used in calculations to avoid allocating\n  // memory.\n  /**\n   * @type {Array<Array<number>>}\n   */\n  var T_ARRAYS = [];\n  for (var i = 0; i < 5; i++) { T_ARRAYS.push([]); }\n\n  // Temporary response used for polygon hit detection.\n  /**\n   * @type {Response}\n   */\n  var T_RESPONSE = new Response();\n\n  // Tiny \"point\" polygon used for polygon hit detection.\n  /**\n   * @type {Polygon}\n   */\n  var TEST_POINT = new Box(new Vector(), 0.000001, 0.000001).toPolygon();\n\n  // ## Helper Functions\n\n  // Flattens the specified array of points onto a unit vector axis,\n  // resulting in a one dimensional range of the minimum and\n  // maximum value on that axis.\n  /**\n   * @param {Array<Vector>} points The points to flatten.\n   * @param {Vector} normal The unit vector axis to flatten on.\n   * @param {Array<number>} result An array.  After calling this function,\n   *   result[0] will be the minimum value,\n   *   result[1] will be the maximum value.\n   */\n  function flattenPointsOn(points, normal, result) {\n    var min = Number.MAX_VALUE;\n    var max = -Number.MAX_VALUE;\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      // The magnitude of the projection of the point onto the normal\n      var dot = points[i].dot(normal);\n      if (dot < min) { min = dot; }\n      if (dot > max) { max = dot; }\n    }\n    result[0] = min; result[1] = max;\n  }\n\n  // Check whether two convex polygons are separated by the specified\n  // axis (must be a unit vector).\n  /**\n   * @param {Vector} aPos The position of the first polygon.\n   * @param {Vector} bPos The position of the second polygon.\n   * @param {Array<Vector>} aPoints The points in the first polygon.\n   * @param {Array<Vector>} bPoints The points in the second polygon.\n   * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n   *   will be projected onto this axis.\n   * @param {Response=} response A Response object (optional) which will be populated\n   *   if the axis is not a separating axis.\n   * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n   *   and a response is passed in, information about how much overlap and\n   *   the direction of the overlap will be populated.\n   */\n  function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n    var rangeA = T_ARRAYS.pop();\n    var rangeB = T_ARRAYS.pop();\n    // The magnitude of the offset between the two polygons\n    var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n    var projectedOffset = offsetV.dot(axis);\n    // Project the polygons onto the axis.\n    flattenPointsOn(aPoints, axis, rangeA);\n    flattenPointsOn(bPoints, axis, rangeB);\n    // Move B's range to its position relative to A.\n    rangeB[0] += projectedOffset;\n    rangeB[1] += projectedOffset;\n    // Check if there is a gap. If there is, this is a separating axis and we can stop\n    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n      T_VECTORS.push(offsetV);\n      T_ARRAYS.push(rangeA);\n      T_ARRAYS.push(rangeB);\n      return true;\n    }\n    // This is not a separating axis. If we're calculating a response, calculate the overlap.\n    if (response) {\n      var overlap = 0;\n      // A starts further left than B\n      if (rangeA[0] < rangeB[0]) {\n        response['aInB'] = false;\n        // A ends before B does. We have to pull A out of B\n        if (rangeA[1] < rangeB[1]) {\n          overlap = rangeA[1] - rangeB[0];\n          response['bInA'] = false;\n          // B is fully inside A.  Pick the shortest way out.\n        } else {\n          var option1 = rangeA[1] - rangeB[0];\n          var option2 = rangeB[1] - rangeA[0];\n          overlap = option1 < option2 ? option1 : -option2;\n        }\n        // B starts further left than A\n      } else {\n        response['bInA'] = false;\n        // B ends before A ends. We have to push A out of B\n        if (rangeA[1] > rangeB[1]) {\n          overlap = rangeA[0] - rangeB[1];\n          response['aInB'] = false;\n          // A is fully inside B.  Pick the shortest way out.\n        } else {\n          var option1 = rangeA[1] - rangeB[0];\n          var option2 = rangeB[1] - rangeA[0];\n          overlap = option1 < option2 ? option1 : -option2;\n        }\n      }\n      // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n      var absOverlap = Math.abs(overlap);\n      if (absOverlap < response['overlap']) {\n        response['overlap'] = absOverlap;\n        response['overlapN'].copy(axis);\n        if (overlap < 0) {\n          response['overlapN'].reverse();\n        }\n      }\n    }\n    T_VECTORS.push(offsetV);\n    T_ARRAYS.push(rangeA);\n    T_ARRAYS.push(rangeB);\n    return false;\n  }\n  SAT['isSeparatingAxis'] = isSeparatingAxis;\n\n  // Calculates which Voronoi region a point is on a line segment.\n  // It is assumed that both the line and the point are relative to `(0,0)`\n  //\n  //            |       (0)      |\n  //     (-1)  [S]--------------[E]  (1)\n  //            |       (0)      |\n  /**\n   * @param {Vector} line The line segment.\n   * @param {Vector} point The point.\n   * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n   *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n   *          RIGHT_VORONOI_REGION (1) if it is the right region.\n   */\n  function voronoiRegion(line, point) {\n    var len2 = line.len2();\n    var dp = point.dot(line);\n    // If the point is beyond the start of the line, it is in the\n    // left voronoi region.\n    if (dp < 0) { return LEFT_VORONOI_REGION; }\n    // If the point is beyond the end of the line, it is in the\n    // right voronoi region.\n    else if (dp > len2) { return RIGHT_VORONOI_REGION; }\n    // Otherwise, it's in the middle one.\n    else { return MIDDLE_VORONOI_REGION; }\n  }\n  // Constants for Voronoi regions\n  /**\n   * @const\n   */\n  var LEFT_VORONOI_REGION = -1;\n  /**\n   * @const\n   */\n  var MIDDLE_VORONOI_REGION = 0;\n  /**\n   * @const\n   */\n  var RIGHT_VORONOI_REGION = 1;\n\n  // ## Collision Tests\n\n  // Check if a point is inside a circle.\n  /**\n   * @param {Vector} p The point to test.\n   * @param {Circle} c The circle to test.\n   * @return {boolean} true if the point is inside the circle, false if it is not.\n   */\n  function pointInCircle(p, c) {\n    var differenceV = T_VECTORS.pop().copy(p).sub(c['pos']).sub(c['offset']);\n    var radiusSq = c['r'] * c['r'];\n    var distanceSq = differenceV.len2();\n    T_VECTORS.push(differenceV);\n    // If the distance between is smaller than the radius then the point is inside the circle.\n    return distanceSq <= radiusSq;\n  }\n  SAT['pointInCircle'] = pointInCircle;\n\n  // Check if a point is inside a convex polygon.\n  /**\n   * @param {Vector} p The point to test.\n   * @param {Polygon} poly The polygon to test.\n   * @return {boolean} true if the point is inside the polygon, false if it is not.\n   */\n  function pointInPolygon(p, poly) {\n    TEST_POINT['pos'].copy(p);\n    T_RESPONSE.clear();\n    var result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\n    if (result) {\n      result = T_RESPONSE['aInB'];\n    }\n    return result;\n  }\n  SAT['pointInPolygon'] = pointInPolygon;\n\n  // Check if two circles collide.\n  /**\n   * @param {Circle} a The first circle.\n   * @param {Circle} b The second circle.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   the circles intersect.\n   * @return {boolean} true if the circles intersect, false if they don't.\n   */\n  function testCircleCircle(a, b, response) {\n    // Check if the distance between the centers of the two\n    // circles is greater than their combined radius.\n    var differenceV = T_VECTORS.pop().copy(b['pos']).add(b['offset']).sub(a['pos']).sub(a['offset']);\n    var totalRadius = a['r'] + b['r'];\n    var totalRadiusSq = totalRadius * totalRadius;\n    var distanceSq = differenceV.len2();\n    // If the distance is bigger than the combined radius, they don't intersect.\n    if (distanceSq > totalRadiusSq) {\n      T_VECTORS.push(differenceV);\n      return false;\n    }\n    // They intersect.  If we're calculating a response, calculate the overlap.\n    if (response) {\n      var dist = Math.sqrt(distanceSq);\n      response['a'] = a;\n      response['b'] = b;\n      response['overlap'] = totalRadius - dist;\n      response['overlapN'].copy(differenceV.normalize());\n      response['overlapV'].copy(differenceV).scale(response['overlap']);\n      response['aInB'] = a['r'] <= b['r'] && dist <= b['r'] - a['r'];\n      response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\n    }\n    T_VECTORS.push(differenceV);\n    return true;\n  }\n  SAT['testCircleCircle'] = testCircleCircle;\n\n  // Check if a polygon and a circle collide.\n  /**\n   * @param {Polygon} polygon The polygon.\n   * @param {Circle} circle The circle.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testPolygonCircle(polygon, circle, response) {\n    // Get the position of the circle relative to the polygon.\n    var circlePos = T_VECTORS.pop().copy(circle['pos']).add(circle['offset']).sub(polygon['pos']);\n    var radius = circle['r'];\n    var radius2 = radius * radius;\n    var points = polygon['calcPoints'];\n    var len = points.length;\n    var edge = T_VECTORS.pop();\n    var point = T_VECTORS.pop();\n\n    // For each edge in the polygon:\n    for (var i = 0; i < len; i++) {\n      var next = i === len - 1 ? 0 : i + 1;\n      var prev = i === 0 ? len - 1 : i - 1;\n      var overlap = 0;\n      var overlapN = null;\n\n      // Get the edge.\n      edge.copy(polygon['edges'][i]);\n      // Calculate the center of the circle relative to the starting point of the edge.\n      point.copy(circlePos).sub(points[i]);\n\n      // If the distance between the center of the circle and the point\n      // is bigger than the radius, the polygon is definitely not fully in\n      // the circle.\n      if (response && point.len2() > radius2) {\n        response['aInB'] = false;\n      }\n\n      // Calculate which Voronoi region the center of the circle is in.\n      var region = voronoiRegion(edge, point);\n      // If it's the left region:\n      if (region === LEFT_VORONOI_REGION) {\n        // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n        edge.copy(polygon['edges'][prev]);\n        // Calculate the center of the circle relative the starting point of the previous edge\n        var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n        region = voronoiRegion(edge, point2);\n        if (region === RIGHT_VORONOI_REGION) {\n          // It's in the region we want.  Check if the circle intersects the point.\n          var dist = point.len();\n          if (dist > radius) {\n            // No intersection\n            T_VECTORS.push(circlePos);\n            T_VECTORS.push(edge);\n            T_VECTORS.push(point);\n            T_VECTORS.push(point2);\n            return false;\n          } else if (response) {\n            // It intersects, calculate the overlap.\n            response['bInA'] = false;\n            overlapN = point.normalize();\n            overlap = radius - dist;\n          }\n        }\n        T_VECTORS.push(point2);\n        // If it's the right region:\n      } else if (region === RIGHT_VORONOI_REGION) {\n        // We need to make sure we're in the left region on the next edge\n        edge.copy(polygon['edges'][next]);\n        // Calculate the center of the circle relative to the starting point of the next edge.\n        point.copy(circlePos).sub(points[next]);\n        region = voronoiRegion(edge, point);\n        if (region === LEFT_VORONOI_REGION) {\n          // It's in the region we want.  Check if the circle intersects the point.\n          var dist = point.len();\n          if (dist > radius) {\n            // No intersection\n            T_VECTORS.push(circlePos);\n            T_VECTORS.push(edge);\n            T_VECTORS.push(point);\n            return false;\n          } else if (response) {\n            // It intersects, calculate the overlap.\n            response['bInA'] = false;\n            overlapN = point.normalize();\n            overlap = radius - dist;\n          }\n        }\n        // Otherwise, it's the middle region:\n      } else {\n        // Need to check if the circle is intersecting the edge,\n        // Change the edge into its \"edge normal\".\n        var normal = edge.perp().normalize();\n        // Find the perpendicular distance between the center of the\n        // circle and the edge.\n        var dist = point.dot(normal);\n        var distAbs = Math.abs(dist);\n        // If the circle is on the outside of the edge, there is no intersection.\n        if (dist > 0 && distAbs > radius) {\n          // No intersection\n          T_VECTORS.push(circlePos);\n          T_VECTORS.push(normal);\n          T_VECTORS.push(point);\n          return false;\n        } else if (response) {\n          // It intersects, calculate the overlap.\n          overlapN = normal;\n          overlap = radius - dist;\n          // If the center of the circle is on the outside of the edge, or part of the\n          // circle is on the outside, the circle is not fully inside the polygon.\n          if (dist >= 0 || overlap < 2 * radius) {\n            response['bInA'] = false;\n          }\n        }\n      }\n\n      // If this is the smallest overlap we've seen, keep it.\n      // (overlapN may be null if the circle was in the wrong Voronoi region).\n      if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\n        response['overlap'] = overlap;\n        response['overlapN'].copy(overlapN);\n      }\n    }\n\n    // Calculate the final overlap vector - based on the smallest overlap.\n    if (response) {\n      response['a'] = polygon;\n      response['b'] = circle;\n      response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    T_VECTORS.push(circlePos);\n    T_VECTORS.push(edge);\n    T_VECTORS.push(point);\n    return true;\n  }\n  SAT['testPolygonCircle'] = testPolygonCircle;\n\n  // Check if a circle and a polygon collide.\n  //\n  // **NOTE:** This is slightly less efficient than polygonCircle as it just\n  // runs polygonCircle and reverses everything at the end.\n  /**\n   * @param {Circle} circle The circle.\n   * @param {Polygon} polygon The polygon.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testCirclePolygon(circle, polygon, response) {\n    // Test the polygon against the circle.\n    var result = testPolygonCircle(polygon, circle, response);\n    if (result && response) {\n      // Swap A and B in the response.\n      var a = response['a'];\n      var aInB = response['aInB'];\n      response['overlapN'].reverse();\n      response['overlapV'].reverse();\n      response['a'] = response['b'];\n      response['b'] = a;\n      response['aInB'] = response['bInA'];\n      response['bInA'] = aInB;\n    }\n    return result;\n  }\n  SAT['testCirclePolygon'] = testCirclePolygon;\n\n  // Checks whether polygons collide.\n  /**\n   * @param {Polygon} a The first polygon.\n   * @param {Polygon} b The second polygon.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testPolygonPolygon(a, b, response) {\n    var aPoints = a['calcPoints'];\n    var aLen = aPoints.length;\n    var bPoints = b['calcPoints'];\n    var bLen = bPoints.length;\n    // If any of the edge normals of A is a separating axis, no intersection.\n    for (var i = 0; i < aLen; i++) {\n      if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, a['normals'][i], response)) {\n        return false;\n      }\n    }\n    // If any of the edge normals of B is a separating axis, no intersection.\n    for (var i = 0; i < bLen; i++) {\n      if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, b['normals'][i], response)) {\n        return false;\n      }\n    }\n    // Since none of the edge normals of A or B are a separating axis, there is an intersection\n    // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n    // final overlap vector.\n    if (response) {\n      response['a'] = a;\n      response['b'] = b;\n      response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    return true;\n  }\n  SAT['testPolygonPolygon'] = testPolygonPolygon;\n\n  return SAT;\n}));\n", "'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n", "// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n", "import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n", "'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n", "\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n", "// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n", "var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n", "var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n", "var helper = require('./options-helper');\r\nvar xml2js = require('./xml2js');\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n", "var helper = require('./options-helper');\nvar isArray = require('./array-helper').isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n", "var js2xml = require('./js2xml.js');\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n", "/*jslint node:true */\r\n\r\nvar xml2js = require('./xml2js');\r\nvar xml2json = require('./xml2json');\r\nvar js2xml = require('./js2xml');\r\nvar json2xml = require('./json2xml');\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/* globals Buffer */\n\nmodule.exports =\n  c((\"undefined\" !== typeof Buffer) && Buffer) ||\n  c(this.Buffer) ||\n  c((\"undefined\" !== typeof window) && window.Buffer) ||\n  this.Buffer;\n\nfunction c(B) {\n  return B && B.isBuffer && B;\n}", "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n", "// bufferish-array.js\n\nvar Bufferish = require(\"./bufferish\");\n\nvar exports = module.exports = alloc(0);\n\nexports.alloc = alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Array(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Array}\n */\n\nfunction from(value) {\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\n    // TypedArray to Uint8Array\n    value = Bufferish.Uint8Array.from(value);\n  } else if (Bufferish.isArrayBuffer(value)) {\n    // ArrayBuffer to Uint8Array\n    value = new Uint8Array(value);\n  } else if (typeof value === \"string\") {\n    // String to Array\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  // Array-like to Array\n  return Array.prototype.slice.call(value);\n}\n", "// bufferish-buffer.js\n\nvar Bufferish = require(\"./bufferish\");\nvar Buffer = Bufferish.global;\n\nvar exports = module.exports = Bufferish.hasBuffer ? alloc(0) : [];\n\nexports.alloc = Bufferish.hasBuffer && Buffer.alloc || alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Buffer(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer}\n */\n\nfunction from(value) {\n  if (!Bufferish.isBuffer(value) && Bufferish.isView(value)) {\n    // TypedArray to Uint8Array\n    value = Bufferish.Uint8Array.from(value);\n  } else if (Bufferish.isArrayBuffer(value)) {\n    // ArrayBuffer to Uint8Array\n    value = new Uint8Array(value);\n  } else if (typeof value === \"string\") {\n    // String to Buffer\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  // Array-like to Buffer\n  if (Buffer.from && Buffer.from.length !== 1) {\n    return Buffer.from(value); // node v6+\n  } else {\n    return new Buffer(value); // node v4\n  }\n}\n", "// bufferish-uint8array.js\n\nvar Bufferish = require(\"./bufferish\");\n\nvar exports = module.exports = Bufferish.hasArrayBuffer ? alloc(0) : [];\n\nexports.alloc = alloc;\nexports.concat = Bufferish.concat;\nexports.from = from;\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return new Uint8Array(size);\n}\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Uint8Array}\n */\n\nfunction from(value) {\n  if (Bufferish.isView(value)) {\n    // TypedArray to ArrayBuffer\n    var byteOffset = value.byteOffset;\n    var byteLength = value.byteLength;\n    value = value.buffer;\n    if (value.byteLength !== byteLength) {\n      if (value.slice) {\n        value = value.slice(byteOffset, byteOffset + byteLength);\n      } else {\n        // Android 4.1 does not have ArrayBuffer.prototype.slice\n        value = new Uint8Array(value);\n        if (value.byteLength !== byteLength) {\n          // TypedArray to ArrayBuffer to Uint8Array to Array\n          value = Array.prototype.slice.call(value, byteOffset, byteOffset + byteLength);\n        }\n      }\n    }\n  } else if (typeof value === \"string\") {\n    // String to Uint8Array\n    return Bufferish.from.call(exports, value);\n  } else if (typeof value === \"number\") {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  return new Uint8Array(value);\n}\n", "// buffer-lite.js\n\nvar MAXBUFLEN = 8192;\n\nexports.copy = copy;\nexports.toString = toString;\nexports.write = write;\n\n/**\n * Buffer.prototype.write()\n *\n * @param string {String}\n * @param [offset] {Number}\n * @returns {Number}\n */\n\nfunction write(string, offset) {\n  var buffer = this;\n  var index = offset || (offset |= 0);\n  var length = string.length;\n  var chr = 0;\n  var i = 0;\n  while (i < length) {\n    chr = string.charCodeAt(i++);\n\n    if (chr < 128) {\n      buffer[index++] = chr;\n    } else if (chr < 0x800) {\n      // 2 bytes\n      buffer[index++] = 0xC0 | (chr >>> 6);\n      buffer[index++] = 0x80 | (chr & 0x3F);\n    } else if (chr < 0xD800 || chr > 0xDFFF) {\n      // 3 bytes\n      buffer[index++] = 0xE0 | (chr  >>> 12);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    } else {\n      // 4 bytes - surrogate pair\n      chr = (((chr - 0xD800) << 10) | (string.charCodeAt(i++) - 0xDC00)) + 0x10000;\n      buffer[index++] = 0xF0 | (chr >>> 18);\n      buffer[index++] = 0x80 | ((chr >>> 12) & 0x3F);\n      buffer[index++] = 0x80 | ((chr >>> 6)  & 0x3F);\n      buffer[index++] = 0x80 | (chr          & 0x3F);\n    }\n  }\n  return index - offset;\n}\n\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\nfunction toString(encoding, start, end) {\n  var buffer = this;\n  var index = start|0;\n  if (!end) end = buffer.length;\n  var string = '';\n  var chr = 0;\n\n  while (index < end) {\n    chr = buffer[index++];\n    if (chr < 128) {\n      string += String.fromCharCode(chr);\n      continue;\n    }\n\n    if ((chr & 0xE0) === 0xC0) {\n      // 2 bytes\n      chr = (chr & 0x1F) << 6 |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF0) === 0xE0) {\n      // 3 bytes\n      chr = (chr & 0x0F)             << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n\n    } else if ((chr & 0xF8) === 0xF0) {\n      // 4 bytes\n      chr = (chr & 0x07)             << 18 |\n            (buffer[index++] & 0x3F) << 12 |\n            (buffer[index++] & 0x3F) << 6  |\n            (buffer[index++] & 0x3F);\n    }\n\n    if (chr >= 0x010000) {\n      // A surrogate pair\n      chr -= 0x010000;\n\n      string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n    } else {\n      string += String.fromCharCode(chr);\n    }\n  }\n\n  return string;\n}\n\n/**\n * Buffer.prototype.copy()\n *\n * @param target {Buffer}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {number}\n */\n\nfunction copy(target, targetStart, start, end) {\n  var i;\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (!targetStart) targetStart = 0;\n  var len = end - start;\n\n  if (target === this && start < targetStart && targetStart < end) {\n    // descending\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    // ascending\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  }\n\n  return len;\n}\n", "// bufferish-proto.js\n\n/* jshint eqnull:true */\n\nvar BufferLite = require(\"./buffer-lite\");\n\nexports.copy = copy;\nexports.slice = slice;\nexports.toString = toString;\nexports.write = gen(\"write\");\n\nvar Bufferish = require(\"./bufferish\");\nvar Buffer = Bufferish.global;\n\nvar isBufferShim = Bufferish.hasBuffer && (\"TYPED_ARRAY_SUPPORT\" in Buffer);\nvar brokenTypedArray = isBufferShim && !Buffer.TYPED_ARRAY_SUPPORT;\n\n/**\n * @param target {Buffer|Uint8Array|Array}\n * @param [targetStart] {Number}\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction copy(target, targetStart, start, end) {\n  var thisIsBuffer = Bufferish.isBuffer(this);\n  var targetIsBuffer = Bufferish.isBuffer(target);\n  if (thisIsBuffer && targetIsBuffer) {\n    // Buffer to Buffer\n    return this.copy(target, targetStart, start, end);\n  } else if (!brokenTypedArray && !thisIsBuffer && !targetIsBuffer &&\n    Bufferish.isView(this) && Bufferish.isView(target)) {\n    // Uint8Array to Uint8Array (except for minor some browsers)\n    var buffer = (start || end != null) ? slice.call(this, start, end) : this;\n    target.set(buffer, targetStart);\n    return buffer.length;\n  } else {\n    // other cases\n    return BufferLite.copy.call(this, target, targetStart, start, end);\n  }\n}\n\n/**\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction slice(start, end) {\n  // for Buffer, Uint8Array (except for minor some browsers) and Array\n  var f = this.slice || (!brokenTypedArray && this.subarray);\n  if (f) return f.call(this, start, end);\n\n  // Uint8Array (for minor some browsers)\n  var target = Bufferish.alloc.call(this, end - start);\n  copy.call(this, target, 0, start, end);\n  return target;\n}\n\n/**\n * Buffer.prototype.toString()\n *\n * @param [encoding] {String} ignored\n * @param [start] {Number}\n * @param [end] {Number}\n * @returns {String}\n */\n\nfunction toString(encoding, start, end) {\n  var f = (!isBufferShim && Bufferish.isBuffer(this)) ? this.toString : BufferLite.toString;\n  return f.apply(this, arguments);\n}\n\n/**\n * @private\n */\n\nfunction gen(method) {\n  return wrap;\n\n  function wrap() {\n    var f = this[method] || BufferLite[method];\n    return f.apply(this, arguments);\n  }\n}\n", "// bufferish.js\n\nvar Buffer = exports.global = require(\"./buffer-global\");\nvar hasBuffer = exports.hasBuffer = Buffer && !!Buffer.isBuffer;\nvar hasArrayBuffer = exports.hasArrayBuffer = (\"undefined\" !== typeof ArrayBuffer);\n\nvar isArray = exports.isArray = require(\"isarray\");\nexports.isArrayBuffer = hasArrayBuffer ? isArrayBuffer : _false;\nvar isBuffer = exports.isBuffer = hasBuffer ? Buffer.isBuffer : _false;\nvar isView = exports.isView = hasArrayBuffer ? (ArrayBuffer.isView || _is(\"ArrayBuffer\", \"buffer\")) : _false;\n\nexports.alloc = alloc;\nexports.concat = concat;\nexports.from = from;\n\nvar BufferArray = exports.Array = require(\"./bufferish-array\");\nvar BufferBuffer = exports.Buffer = require(\"./bufferish-buffer\");\nvar BufferUint8Array = exports.Uint8Array = require(\"./bufferish-uint8array\");\nvar BufferProto = exports.prototype = require(\"./bufferish-proto\");\n\n/**\n * @param value {Array|ArrayBuffer|Buffer|String}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction from(value) {\n  if (typeof value === \"string\") {\n    return fromString.call(this, value);\n  } else {\n    return auto(this).from(value);\n  }\n}\n\n/**\n * @param size {Number}\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction alloc(size) {\n  return auto(this).alloc(size);\n}\n\n/**\n * @param list {Array} array of (Buffer|Uint8Array|Array)s\n * @param [length]\n * @returns {Buffer|Uint8Array|Array}\n */\n\nfunction concat(list, length) {\n  if (!length) {\n    length = 0;\n    Array.prototype.forEach.call(list, dryrun);\n  }\n  var ref = (this !== exports) && this || list[0];\n  var result = alloc.call(ref, length);\n  var offset = 0;\n  Array.prototype.forEach.call(list, append);\n  return result;\n\n  function dryrun(buffer) {\n    length += buffer.length;\n  }\n\n  function append(buffer) {\n    offset += BufferProto.copy.call(buffer, result, offset);\n  }\n}\n\nvar _isArrayBuffer = _is(\"ArrayBuffer\");\n\nfunction isArrayBuffer(value) {\n  return (value instanceof ArrayBuffer) || _isArrayBuffer(value);\n}\n\n/**\n * @private\n */\n\nfunction fromString(value) {\n  var expected = value.length * 3;\n  var that = alloc.call(this, expected);\n  var actual = BufferProto.write.call(that, value);\n  if (expected !== actual) {\n    that = BufferProto.slice.call(that, 0, actual);\n  }\n  return that;\n}\n\nfunction auto(that) {\n  return isBuffer(that) ? BufferBuffer\n    : isView(that) ? BufferUint8Array\n    : isArray(that) ? BufferArray\n    : hasBuffer ? BufferBuffer\n    : hasArrayBuffer ? BufferUint8Array\n    : BufferArray;\n}\n\nfunction _false() {\n  return false;\n}\n\nfunction _is(name, key) {\n  /* jshint eqnull:true */\n  name = \"[object \" + name + \"]\";\n  return function(value) {\n    return (value != null) && {}.toString.call(key ? value[key] : value) === name;\n  };\n}", "// ext-buffer.js\n\nexports.ExtBuffer = ExtBuffer;\n\nvar Bufferish = require(\"./bufferish\");\n\nfunction ExtBuffer(buffer, type) {\n  if (!(this instanceof ExtBuffer)) return new ExtBuffer(buffer, type);\n  this.buffer = Bufferish.from(buffer);\n  this.type = type;\n}\n", "// ext-packer.js\n\nexports.setExtPackers = setExtPackers;\n\nvar Bufferish = require(\"./bufferish\");\nvar Buffer = Bufferish.global;\nvar packTypedArray = Bufferish.Uint8Array.from;\nvar _encode;\n\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\n\nfunction setExtPackers(codec) {\n  codec.addExtPacker(0x0E, Error, [packError, encode]);\n  codec.addExtPacker(0x01, EvalError, [packError, encode]);\n  codec.addExtPacker(0x02, RangeError, [packError, encode]);\n  codec.addExtPacker(0x03, ReferenceError, [packError, encode]);\n  codec.addExtPacker(0x04, SyntaxError, [packError, encode]);\n  codec.addExtPacker(0x05, TypeError, [packError, encode]);\n  codec.addExtPacker(0x06, URIError, [packError, encode]);\n\n  codec.addExtPacker(0x0A, RegExp, [packRegExp, encode]);\n  codec.addExtPacker(0x0B, Boolean, [packValueOf, encode]);\n  codec.addExtPacker(0x0C, String, [packValueOf, encode]);\n  codec.addExtPacker(0x0D, Date, [Number, encode]);\n  codec.addExtPacker(0x0F, Number, [packValueOf, encode]);\n\n  if (\"undefined\" !== typeof Uint8Array) {\n    codec.addExtPacker(0x11, Int8Array, packTypedArray);\n    codec.addExtPacker(0x12, Uint8Array, packTypedArray);\n    codec.addExtPacker(0x13, Int16Array, packTypedArray);\n    codec.addExtPacker(0x14, Uint16Array, packTypedArray);\n    codec.addExtPacker(0x15, Int32Array, packTypedArray);\n    codec.addExtPacker(0x16, Uint32Array, packTypedArray);\n    codec.addExtPacker(0x17, Float32Array, packTypedArray);\n\n    // PhantomJS/1.9.7 doesn't have Float64Array\n    if (\"undefined\" !== typeof Float64Array) {\n      codec.addExtPacker(0x18, Float64Array, packTypedArray);\n    }\n\n    // IE10 doesn't have Uint8ClampedArray\n    if (\"undefined\" !== typeof Uint8ClampedArray) {\n      codec.addExtPacker(0x19, Uint8ClampedArray, packTypedArray);\n    }\n\n    codec.addExtPacker(0x1A, ArrayBuffer, packTypedArray);\n    codec.addExtPacker(0x1D, DataView, packTypedArray);\n  }\n\n  if (Bufferish.hasBuffer) {\n    codec.addExtPacker(0x1B, Buffer, Bufferish.from);\n  }\n}\n\nfunction encode(input) {\n  if (!_encode) _encode = require(\"./encode\").encode; // lazy load\n  return _encode(input);\n}\n\nfunction packValueOf(value) {\n  return (value).valueOf();\n}\n\nfunction packRegExp(value) {\n  value = RegExp.prototype.toString.call(value).split(\"/\");\n  value.shift();\n  var out = [value.pop()];\n  out.unshift(value.join(\"/\"));\n  return out;\n}\n\nfunction packError(value) {\n  var out = {};\n  for (var key in ERROR_COLUMNS) {\n    out[key] = value[key];\n  }\n  return out;\n}\n", "// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "// write-unit8.js\n\nvar constant = exports.uint8 = new Array(256);\n\nfor (var i = 0x00; i <= 0xFF; i++) {\n  constant[i] = write0(i);\n}\n\nfunction write0(type) {\n  return function(encoder) {\n    var offset = encoder.reserve(1);\n    encoder.buffer[offset] = type;\n  };\n}\n", "// write-token.js\n\nvar ieee754 = require(\"ieee754\");\nvar Int64Buffer = require(\"int64-buffer\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nvar uint8 = require(\"./write-uint8\").uint8;\nvar Bufferish = require(\"./bufferish\");\nvar Buffer = Bufferish.global;\nvar IS_BUFFER_SHIM = Bufferish.hasBuffer && (\"TYPED_ARRAY_SUPPORT\" in Buffer);\nvar NO_TYPED_ARRAY = IS_BUFFER_SHIM && !Buffer.TYPED_ARRAY_SUPPORT;\nvar Buffer_prototype = Bufferish.hasBuffer && Buffer.prototype || {};\n\nexports.getWriteToken = getWriteToken;\n\nfunction getWriteToken(options) {\n  if (options && options.uint8array) {\n    return init_uint8array();\n  } else if (NO_TYPED_ARRAY || (Bufferish.hasBuffer && options && options.safe)) {\n    return init_safe();\n  } else {\n    return init_token();\n  }\n}\n\nfunction init_uint8array() {\n  var token = init_token();\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, writeFloatBE);\n  token[0xcb] = writeN(0xcb, 8, writeDoubleBE);\n\n  return token;\n}\n\n// Node.js and browsers with TypedArray\n\nfunction init_token() {\n  // (immediate values)\n  // positive fixint -- 0x00 - 0x7f\n  // nil -- 0xc0\n  // false -- 0xc2\n  // true -- 0xc3\n  // negative fixint -- 0xe0 - 0xff\n  var token = uint8.slice();\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = write1(0xc4);\n  token[0xc5] = write2(0xc5);\n  token[0xc6] = write4(0xc6);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = write1(0xc7);\n  token[0xc8] = write2(0xc8);\n  token[0xc9] = write4(0xc9);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, (Buffer_prototype.writeFloatBE || writeFloatBE), true);\n  token[0xcb] = writeN(0xcb, 8, (Buffer_prototype.writeDoubleBE || writeDoubleBE), true);\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = write1(0xcc);\n  token[0xcd] = write2(0xcd);\n  token[0xce] = write4(0xce);\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = write1(0xd0);\n  token[0xd1] = write2(0xd1);\n  token[0xd2] = write4(0xd2);\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = write1(0xd9);\n  token[0xda] = write2(0xda);\n  token[0xdb] = write4(0xdb);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = write2(0xdc);\n  token[0xdd] = write4(0xdd);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = write2(0xde);\n  token[0xdf] = write4(0xdf);\n\n  return token;\n}\n\n// safe mode: for old browsers and who needs asserts\n\nfunction init_safe() {\n  // (immediate values)\n  // positive fixint -- 0x00 - 0x7f\n  // nil -- 0xc0\n  // false -- 0xc2\n  // true -- 0xc3\n  // negative fixint -- 0xe0 - 0xff\n  var token = uint8.slice();\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = writeN(0xc4, 1, Buffer.prototype.writeUInt8);\n  token[0xc5] = writeN(0xc5, 2, Buffer.prototype.writeUInt16BE);\n  token[0xc6] = writeN(0xc6, 4, Buffer.prototype.writeUInt32BE);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = writeN(0xc7, 1, Buffer.prototype.writeUInt8);\n  token[0xc8] = writeN(0xc8, 2, Buffer.prototype.writeUInt16BE);\n  token[0xc9] = writeN(0xc9, 4, Buffer.prototype.writeUInt32BE);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = writeN(0xca, 4, Buffer.prototype.writeFloatBE);\n  token[0xcb] = writeN(0xcb, 8, Buffer.prototype.writeDoubleBE);\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = writeN(0xcc, 1, Buffer.prototype.writeUInt8);\n  token[0xcd] = writeN(0xcd, 2, Buffer.prototype.writeUInt16BE);\n  token[0xce] = writeN(0xce, 4, Buffer.prototype.writeUInt32BE);\n  token[0xcf] = writeN(0xcf, 8, writeUInt64BE);\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = writeN(0xd0, 1, Buffer.prototype.writeInt8);\n  token[0xd1] = writeN(0xd1, 2, Buffer.prototype.writeInt16BE);\n  token[0xd2] = writeN(0xd2, 4, Buffer.prototype.writeInt32BE);\n  token[0xd3] = writeN(0xd3, 8, writeInt64BE);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = writeN(0xd9, 1, Buffer.prototype.writeUInt8);\n  token[0xda] = writeN(0xda, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdb] = writeN(0xdb, 4, Buffer.prototype.writeUInt32BE);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = writeN(0xdc, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdd] = writeN(0xdd, 4, Buffer.prototype.writeUInt32BE);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = writeN(0xde, 2, Buffer.prototype.writeUInt16BE);\n  token[0xdf] = writeN(0xdf, 4, Buffer.prototype.writeUInt32BE);\n\n  return token;\n}\n\nfunction write1(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(2);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset] = value;\n  };\n}\n\nfunction write2(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(3);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset++] = value >>> 8;\n    buffer[offset] = value;\n  };\n}\n\nfunction write4(type) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(5);\n    var buffer = encoder.buffer;\n    buffer[offset++] = type;\n    buffer[offset++] = value >>> 24;\n    buffer[offset++] = value >>> 16;\n    buffer[offset++] = value >>> 8;\n    buffer[offset] = value;\n  };\n}\n\nfunction writeN(type, len, method, noAssert) {\n  return function(encoder, value) {\n    var offset = encoder.reserve(len + 1);\n    encoder.buffer[offset++] = type;\n    method.call(encoder.buffer, value, offset, noAssert);\n  };\n}\n\nfunction writeUInt64BE(value, offset) {\n  new Uint64BE(this, offset, value);\n}\n\nfunction writeInt64BE(value, offset) {\n  new Int64BE(this, offset, value);\n}\n\nfunction writeFloatBE(value, offset) {\n  ieee754.write(this, value, offset, false, 23, 4);\n}\n\nfunction writeDoubleBE(value, offset) {\n  ieee754.write(this, value, offset, false, 52, 8);\n}\n", "// write-type.js\n\nvar IS_ARRAY = require(\"isarray\");\nvar Int64Buffer = require(\"int64-buffer\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nvar Bufferish = require(\"./bufferish\");\nvar BufferProto = require(\"./bufferish-proto\");\nvar WriteToken = require(\"./write-token\");\nvar uint8 = require(\"./write-uint8\").uint8;\nvar ExtBuffer = require(\"./ext-buffer\").ExtBuffer;\n\nvar HAS_UINT8ARRAY = (\"undefined\" !== typeof Uint8Array);\nvar HAS_MAP = (\"undefined\" !== typeof Map);\n\nvar extmap = [];\nextmap[1] = 0xd4;\nextmap[2] = 0xd5;\nextmap[4] = 0xd6;\nextmap[8] = 0xd7;\nextmap[16] = 0xd8;\n\nexports.getWriteType = getWriteType;\n\nfunction getWriteType(options) {\n  var token = WriteToken.getWriteToken(options);\n  var useraw = options && options.useraw;\n  var binarraybuffer = HAS_UINT8ARRAY && options && options.binarraybuffer;\n  var isBuffer = binarraybuffer ? Bufferish.isArrayBuffer : Bufferish.isBuffer;\n  var bin = binarraybuffer ? bin_arraybuffer : bin_buffer;\n  var usemap = HAS_MAP && options && options.usemap;\n  var map = usemap ? map_to_map : obj_to_map;\n\n  var writeType = {\n    \"boolean\": bool,\n    \"function\": nil,\n    \"number\": number,\n    \"object\": (useraw ? object_raw : object),\n    \"string\": _string(useraw ? raw_head_size : str_head_size),\n    \"symbol\": nil,\n    \"undefined\": nil\n  };\n\n  return writeType;\n\n  // false -- 0xc2\n  // true -- 0xc3\n  function bool(encoder, value) {\n    var type = value ? 0xc3 : 0xc2;\n    token[type](encoder, value);\n  }\n\n  function number(encoder, value) {\n    var ivalue = value | 0;\n    var type;\n    if (value !== ivalue) {\n      // float 64 -- 0xcb\n      type = 0xcb;\n      token[type](encoder, value);\n      return;\n    } else if (-0x20 <= ivalue && ivalue <= 0x7F) {\n      // positive fixint -- 0x00 - 0x7f\n      // negative fixint -- 0xe0 - 0xff\n      type = ivalue & 0xFF;\n    } else if (0 <= ivalue) {\n      // uint 8 -- 0xcc\n      // uint 16 -- 0xcd\n      // uint 32 -- 0xce\n      type = (ivalue <= 0xFF) ? 0xcc : (ivalue <= 0xFFFF) ? 0xcd : 0xce;\n    } else {\n      // int 8 -- 0xd0\n      // int 16 -- 0xd1\n      // int 32 -- 0xd2\n      type = (-0x80 <= ivalue) ? 0xd0 : (-0x8000 <= ivalue) ? 0xd1 : 0xd2;\n    }\n    token[type](encoder, ivalue);\n  }\n\n  // uint 64 -- 0xcf\n  function uint64(encoder, value) {\n    var type = 0xcf;\n    token[type](encoder, value.toArray());\n  }\n\n  // int 64 -- 0xd3\n  function int64(encoder, value) {\n    var type = 0xd3;\n    token[type](encoder, value.toArray());\n  }\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  // fixstr -- 0xa0 - 0xbf\n  function str_head_size(length) {\n    return (length < 32) ? 1 : (length <= 0xFF) ? 2 : (length <= 0xFFFF) ? 3 : 5;\n  }\n\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  // fixraw -- 0xa0 - 0xbf\n  function raw_head_size(length) {\n    return (length < 32) ? 1 : (length <= 0xFFFF) ? 3 : 5;\n  }\n\n  function _string(head_size) {\n    return string;\n\n    function string(encoder, value) {\n      // prepare buffer\n      var length = value.length;\n      var maxsize = 5 + length * 3;\n      encoder.offset = encoder.reserve(maxsize);\n      var buffer = encoder.buffer;\n\n      // expected header size\n      var expected = head_size(length);\n\n      // expected start point\n      var start = encoder.offset + expected;\n\n      // write string\n      length = BufferProto.write.call(buffer, value, start);\n\n      // actual header size\n      var actual = head_size(length);\n\n      // move content when needed\n      if (expected !== actual) {\n        var targetStart = start + actual - expected;\n        var end = start + length;\n        BufferProto.copy.call(buffer, buffer, targetStart, start, end);\n      }\n\n      // write header\n      var type = (actual === 1) ? (0xa0 + length) : (actual <= 3) ? (0xd7 + actual) : 0xdb;\n      token[type](encoder, length);\n\n      // move cursor\n      encoder.offset += length;\n    }\n  }\n\n  function object(encoder, value) {\n    // null\n    if (value === null) return nil(encoder, value);\n\n    // Buffer\n    if (isBuffer(value)) return bin(encoder, value);\n\n    // Array\n    if (IS_ARRAY(value)) return array(encoder, value);\n\n    // int64-buffer objects\n    if (Uint64BE.isUint64BE(value)) return uint64(encoder, value);\n    if (Int64BE.isInt64BE(value)) return int64(encoder, value);\n\n    // ext formats\n    var packer = encoder.codec.getExtPacker(value);\n    if (packer) value = packer(value);\n    if (value instanceof ExtBuffer) return ext(encoder, value);\n\n    // plain old Objects or Map\n    map(encoder, value);\n  }\n\n  function object_raw(encoder, value) {\n    // Buffer\n    if (isBuffer(value)) return raw(encoder, value);\n\n    // others\n    object(encoder, value);\n  }\n\n  // nil -- 0xc0\n  function nil(encoder, value) {\n    var type = 0xc0;\n    token[type](encoder, value);\n  }\n\n  // fixarray -- 0x90 - 0x9f\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  function array(encoder, value) {\n    var length = value.length;\n    var type = (length < 16) ? (0x90 + length) : (length <= 0xFFFF) ? 0xdc : 0xdd;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    for (var i = 0; i < length; i++) {\n      encode(encoder, value[i]);\n    }\n  }\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  function bin_buffer(encoder, value) {\n    var length = value.length;\n    var type = (length < 0xFF) ? 0xc4 : (length <= 0xFFFF) ? 0xc5 : 0xc6;\n    token[type](encoder, length);\n    encoder.send(value);\n  }\n\n  function bin_arraybuffer(encoder, value) {\n    bin_buffer(encoder, new Uint8Array(value));\n  }\n\n  // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  function ext(encoder, value) {\n    var buffer = value.buffer;\n    var length = buffer.length;\n    var type = extmap[length] || ((length < 0xFF) ? 0xc7 : (length <= 0xFFFF) ? 0xc8 : 0xc9);\n    token[type](encoder, length);\n    uint8[value.type](encoder);\n    encoder.send(buffer);\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  function obj_to_map(encoder, value) {\n    var keys = Object.keys(value);\n    var length = keys.length;\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    keys.forEach(function(key) {\n      encode(encoder, key);\n      encode(encoder, value[key]);\n    });\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  function map_to_map(encoder, value) {\n    if (!(value instanceof Map)) return obj_to_map(encoder, value);\n\n    var length = value.size;\n    var type = (length < 16) ? (0x80 + length) : (length <= 0xFFFF) ? 0xde : 0xdf;\n    token[type](encoder, length);\n\n    var encode = encoder.codec.encode;\n    value.forEach(function(val, key, m) {\n      encode(encoder, key);\n      encode(encoder, val);\n    });\n  }\n\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  // fixraw -- 0xa0 - 0xbf\n  function raw(encoder, value) {\n    var length = value.length;\n    var type = (length < 32) ? (0xa0 + length) : (length <= 0xFFFF) ? 0xda : 0xdb;\n    token[type](encoder, length);\n    encoder.send(value);\n  }\n}\n", "// codec-base.js\n\nvar IS_ARRAY = require(\"isarray\");\n\nexports.createCodec = createCodec;\nexports.install = install;\nexports.filter = filter;\n\nvar Bufferish = require(\"./bufferish\");\n\nfunction Codec(options) {\n  if (!(this instanceof Codec)) return new Codec(options);\n  this.options = options;\n  this.init();\n}\n\nCodec.prototype.init = function() {\n  var options = this.options;\n\n  if (options && options.uint8array) {\n    this.bufferish = Bufferish.Uint8Array;\n  }\n\n  return this;\n};\n\nfunction install(props) {\n  for (var key in props) {\n    Codec.prototype[key] = add(Codec.prototype[key], props[key]);\n  }\n}\n\nfunction add(a, b) {\n  return (a && b) ? ab : (a || b);\n\n  function ab() {\n    a.apply(this, arguments);\n    return b.apply(this, arguments);\n  }\n}\n\nfunction join(filters) {\n  filters = filters.slice();\n\n  return function(value) {\n    return filters.reduce(iterator, value);\n  };\n\n  function iterator(value, filter) {\n    return filter(value);\n  }\n}\n\nfunction filter(filter) {\n  return IS_ARRAY(filter) ? join(filter) : filter;\n}\n\n// @public\n// msgpack.createCodec()\n\nfunction createCodec(options) {\n  return new Codec(options);\n}\n\n// default shared codec\n\nexports.preset = createCodec({preset: true});\n", "// write-core.js\n\nvar ExtBuffer = require(\"./ext-buffer\").ExtBuffer;\nvar ExtPacker = require(\"./ext-packer\");\nvar WriteType = require(\"./write-type\");\nvar CodecBase = require(\"./codec-base\");\n\nCodecBase.install({\n  addExtPacker: addExtPacker,\n  getExtPacker: getExtPacker,\n  init: init\n});\n\nexports.preset = init.call(CodecBase.preset);\n\nfunction getEncoder(options) {\n  var writeType = WriteType.getWriteType(options);\n  return encode;\n\n  function encode(encoder, value) {\n    var func = writeType[typeof value];\n    if (!func) throw new Error(\"Unsupported type \\\"\" + (typeof value) + \"\\\": \" + value);\n    func(encoder, value);\n  }\n}\n\nfunction init() {\n  var options = this.options;\n  this.encode = getEncoder(options);\n\n  if (options && options.preset) {\n    ExtPacker.setExtPackers(this);\n  }\n\n  return this;\n}\n\nfunction addExtPacker(etype, Class, packer) {\n  packer = CodecBase.filter(packer);\n  var name = Class.name;\n  if (name && name !== \"Object\") {\n    var packers = this.extPackers || (this.extPackers = {});\n    packers[name] = extPacker;\n  } else {\n    // fallback for IE\n    var list = this.extEncoderList || (this.extEncoderList = []);\n    list.unshift([Class, extPacker]);\n  }\n\n  function extPacker(value) {\n    if (packer) value = packer(value);\n    return new ExtBuffer(value, etype);\n  }\n}\n\nfunction getExtPacker(value) {\n  var packers = this.extPackers || (this.extPackers = {});\n  var c = value.constructor;\n  var e = c && c.name && packers[c.name];\n  if (e) return e;\n\n  // fallback for IE\n  var list = this.extEncoderList || (this.extEncoderList = []);\n  var len = list.length;\n  for (var i = 0; i < len; i++) {\n    var pair = list[i];\n    if (c === pair[0]) return pair[1];\n  }\n}\n", "// flex-buffer.js\n\nexports.FlexDecoder = FlexDecoder;\nexports.FlexEncoder = FlexEncoder;\n\nvar Bufferish = require(\"./bufferish\");\n\nvar MIN_BUFFER_SIZE = 2048;\nvar MAX_BUFFER_SIZE = 65536;\nvar BUFFER_SHORTAGE = \"BUFFER_SHORTAGE\";\n\nfunction FlexDecoder() {\n  if (!(this instanceof FlexDecoder)) return new FlexDecoder();\n}\n\nfunction FlexEncoder() {\n  if (!(this instanceof FlexEncoder)) return new FlexEncoder();\n}\n\nFlexDecoder.mixin = mixinFactory(getDecoderMethods());\nFlexDecoder.mixin(FlexDecoder.prototype);\n\nFlexEncoder.mixin = mixinFactory(getEncoderMethods());\nFlexEncoder.mixin(FlexEncoder.prototype);\n\nfunction getDecoderMethods() {\n  return {\n    bufferish: Bufferish,\n    write: write,\n    fetch: fetch,\n    flush: flush,\n    push: push,\n    pull: pull,\n    read: read,\n    reserve: reserve,\n    offset: 0\n  };\n\n  function write(chunk) {\n    var prev = this.offset ? Bufferish.prototype.slice.call(this.buffer, this.offset) : this.buffer;\n    this.buffer = prev ? (chunk ? this.bufferish.concat([prev, chunk]) : prev) : chunk;\n    this.offset = 0;\n  }\n\n  function flush() {\n    while (this.offset < this.buffer.length) {\n      var start = this.offset;\n      var value;\n      try {\n        value = this.fetch();\n      } catch (e) {\n        if (e && e.message != BUFFER_SHORTAGE) throw e;\n        // rollback\n        this.offset = start;\n        break;\n      }\n      this.push(value);\n    }\n  }\n\n  function reserve(length) {\n    var start = this.offset;\n    var end = start + length;\n    if (end > this.buffer.length) throw new Error(BUFFER_SHORTAGE);\n    this.offset = end;\n    return start;\n  }\n}\n\nfunction getEncoderMethods() {\n  return {\n    bufferish: Bufferish,\n    write: write,\n    fetch: fetch,\n    flush: flush,\n    push: push,\n    pull: pull,\n    read: read,\n    reserve: reserve,\n    send: send,\n    maxBufferSize: MAX_BUFFER_SIZE,\n    minBufferSize: MIN_BUFFER_SIZE,\n    offset: 0,\n    start: 0\n  };\n\n  function fetch() {\n    var start = this.start;\n    if (start < this.offset) {\n      var end = this.start = this.offset;\n      return Bufferish.prototype.slice.call(this.buffer, start, end);\n    }\n  }\n\n  function flush() {\n    while (this.start < this.offset) {\n      var value = this.fetch();\n      if (value) this.push(value);\n    }\n  }\n\n  function pull() {\n    var buffers = this.buffers || (this.buffers = []);\n    var chunk = buffers.length > 1 ? this.bufferish.concat(buffers) : buffers[0];\n    buffers.length = 0; // buffer exhausted\n    return chunk;\n  }\n\n  function reserve(length) {\n    var req = length | 0;\n\n    if (this.buffer) {\n      var size = this.buffer.length;\n      var start = this.offset | 0;\n      var end = start + req;\n\n      // is it long enough?\n      if (end < size) {\n        this.offset = end;\n        return start;\n      }\n\n      // flush current buffer\n      this.flush();\n\n      // resize it to 2x current length\n      length = Math.max(length, Math.min(size * 2, this.maxBufferSize));\n    }\n\n    // minimum buffer size\n    length = Math.max(length, this.minBufferSize);\n\n    // allocate new buffer\n    this.buffer = this.bufferish.alloc(length);\n    this.start = 0;\n    this.offset = req;\n    return 0;\n  }\n\n  function send(buffer) {\n    var length = buffer.length;\n    if (length > this.minBufferSize) {\n      this.flush();\n      this.push(buffer);\n    } else {\n      var offset = this.reserve(length);\n      Bufferish.prototype.copy.call(buffer, this.buffer, offset);\n    }\n  }\n}\n\n// common methods\n\nfunction write() {\n  throw new Error(\"method not implemented: write()\");\n}\n\nfunction fetch() {\n  throw new Error(\"method not implemented: fetch()\");\n}\n\nfunction read() {\n  var length = this.buffers && this.buffers.length;\n\n  // fetch the first result\n  if (!length) return this.fetch();\n\n  // flush current buffer\n  this.flush();\n\n  // read from the results\n  return this.pull();\n}\n\nfunction push(chunk) {\n  var buffers = this.buffers || (this.buffers = []);\n  buffers.push(chunk);\n}\n\nfunction pull() {\n  var buffers = this.buffers || (this.buffers = []);\n  return buffers.shift();\n}\n\nfunction mixinFactory(source) {\n  return mixin;\n\n  function mixin(target) {\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n}\n", "// encode-buffer.js\n\nexports.EncodeBuffer = EncodeBuffer;\n\nvar preset = require(\"./write-core\").preset;\n\nvar FlexEncoder = require(\"./flex-buffer\").FlexEncoder;\n\nFlexEncoder.mixin(EncodeBuffer.prototype);\n\nfunction EncodeBuffer(options) {\n  if (!(this instanceof EncodeBuffer)) return new EncodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nEncodeBuffer.prototype.codec = preset;\n\nEncodeBuffer.prototype.write = function(input) {\n  this.codec.encode(this, input);\n};\n", "// encode.js\n\nexports.encode = encode;\n\nvar EncodeBuffer = require(\"./encode-buffer\").EncodeBuffer;\n\nfunction encode(input, options) {\n  var encoder = new EncodeBuffer(options);\n  encoder.write(input);\n  return encoder.read();\n}\n", "// ext-unpacker.js\n\nexports.setExtUnpackers = setExtUnpackers;\n\nvar Bufferish = require(\"./bufferish\");\nvar Buffer = Bufferish.global;\nvar _decode;\n\nvar ERROR_COLUMNS = {name: 1, message: 1, stack: 1, columnNumber: 1, fileName: 1, lineNumber: 1};\n\nfunction setExtUnpackers(codec) {\n  codec.addExtUnpacker(0x0E, [decode, unpackError(Error)]);\n  codec.addExtUnpacker(0x01, [decode, unpackError(EvalError)]);\n  codec.addExtUnpacker(0x02, [decode, unpackError(RangeError)]);\n  codec.addExtUnpacker(0x03, [decode, unpackError(ReferenceError)]);\n  codec.addExtUnpacker(0x04, [decode, unpackError(SyntaxError)]);\n  codec.addExtUnpacker(0x05, [decode, unpackError(TypeError)]);\n  codec.addExtUnpacker(0x06, [decode, unpackError(URIError)]);\n\n  codec.addExtUnpacker(0x0A, [decode, unpackRegExp]);\n  codec.addExtUnpacker(0x0B, [decode, unpackClass(Boolean)]);\n  codec.addExtUnpacker(0x0C, [decode, unpackClass(String)]);\n  codec.addExtUnpacker(0x0D, [decode, unpackClass(Date)]);\n  codec.addExtUnpacker(0x0F, [decode, unpackClass(Number)]);\n\n  if (\"undefined\" !== typeof Uint8Array) {\n    codec.addExtUnpacker(0x11, unpackClass(Int8Array));\n    codec.addExtUnpacker(0x12, unpackClass(Uint8Array));\n    codec.addExtUnpacker(0x13, [unpackArrayBuffer, unpackClass(Int16Array)]);\n    codec.addExtUnpacker(0x14, [unpackArrayBuffer, unpackClass(Uint16Array)]);\n    codec.addExtUnpacker(0x15, [unpackArrayBuffer, unpackClass(Int32Array)]);\n    codec.addExtUnpacker(0x16, [unpackArrayBuffer, unpackClass(Uint32Array)]);\n    codec.addExtUnpacker(0x17, [unpackArrayBuffer, unpackClass(Float32Array)]);\n\n    // PhantomJS/1.9.7 doesn't have Float64Array\n    if (\"undefined\" !== typeof Float64Array) {\n      codec.addExtUnpacker(0x18, [unpackArrayBuffer, unpackClass(Float64Array)]);\n    }\n\n    // IE10 doesn't have Uint8ClampedArray\n    if (\"undefined\" !== typeof Uint8ClampedArray) {\n      codec.addExtUnpacker(0x19, unpackClass(Uint8ClampedArray));\n    }\n\n    codec.addExtUnpacker(0x1A, unpackArrayBuffer);\n    codec.addExtUnpacker(0x1D, [unpackArrayBuffer, unpackClass(DataView)]);\n  }\n\n  if (Bufferish.hasBuffer) {\n    codec.addExtUnpacker(0x1B, unpackClass(Buffer));\n  }\n}\n\nfunction decode(input) {\n  if (!_decode) _decode = require(\"./decode\").decode; // lazy load\n  return _decode(input);\n}\n\nfunction unpackRegExp(value) {\n  return RegExp.apply(null, value);\n}\n\nfunction unpackError(Class) {\n  return function(value) {\n    var out = new Class();\n    for (var key in ERROR_COLUMNS) {\n      out[key] = value[key];\n    }\n    return out;\n  };\n}\n\nfunction unpackClass(Class) {\n  return function(value) {\n    return new Class(value);\n  };\n}\n\nfunction unpackArrayBuffer(value) {\n  return (new Uint8Array(value)).buffer;\n}\n", "// read-format.js\n\nvar ieee754 = require(\"ieee754\");\nvar Int64Buffer = require(\"int64-buffer\");\nvar Uint64BE = Int64Buffer.Uint64BE;\nvar Int64BE = Int64Buffer.Int64BE;\n\nexports.getReadFormat = getReadFormat;\nexports.readUint8 = uint8;\n\nvar Bufferish = require(\"./bufferish\");\nvar BufferProto = require(\"./bufferish-proto\");\n\nvar HAS_MAP = (\"undefined\" !== typeof Map);\nvar NO_ASSERT = true;\n\nfunction getReadFormat(options) {\n  var binarraybuffer = Bufferish.hasArrayBuffer && options && options.binarraybuffer;\n  var int64 = options && options.int64;\n  var usemap = HAS_MAP && options && options.usemap;\n\n  var readFormat = {\n    map: (usemap ? map_to_map : map_to_obj),\n    array: array,\n    str: str,\n    bin: (binarraybuffer ? bin_arraybuffer : bin_buffer),\n    ext: ext,\n    uint8: uint8,\n    uint16: uint16,\n    uint32: uint32,\n    uint64: read(8, int64 ? readUInt64BE_int64 : readUInt64BE),\n    int8: int8,\n    int16: int16,\n    int32: int32,\n    int64: read(8, int64 ? readInt64BE_int64 : readInt64BE),\n    float32: read(4, readFloatBE),\n    float64: read(8, readDoubleBE)\n  };\n\n  return readFormat;\n}\n\nfunction map_to_obj(decoder, len) {\n  var value = {};\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value[k[i]] = v[i];\n  }\n  return value;\n}\n\nfunction map_to_map(decoder, len) {\n  var value = new Map();\n  var i;\n  var k = new Array(len);\n  var v = new Array(len);\n\n  var decode = decoder.codec.decode;\n  for (i = 0; i < len; i++) {\n    k[i] = decode(decoder);\n    v[i] = decode(decoder);\n  }\n  for (i = 0; i < len; i++) {\n    value.set(k[i], v[i]);\n  }\n  return value;\n}\n\nfunction array(decoder, len) {\n  var value = new Array(len);\n  var decode = decoder.codec.decode;\n  for (var i = 0; i < len; i++) {\n    value[i] = decode(decoder);\n  }\n  return value;\n}\n\nfunction str(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  return BufferProto.toString.call(decoder.buffer, \"utf-8\", start, end);\n}\n\nfunction bin_buffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.from(buf);\n}\n\nfunction bin_arraybuffer(decoder, len) {\n  var start = decoder.reserve(len);\n  var end = start + len;\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return Bufferish.Uint8Array.from(buf).buffer;\n}\n\nfunction ext(decoder, len) {\n  var start = decoder.reserve(len+1);\n  var type = decoder.buffer[start++];\n  var end = start + len;\n  var unpack = decoder.codec.getExtUnpacker(type);\n  if (!unpack) throw new Error(\"Invalid ext type: \" + (type ? (\"0x\" + type.toString(16)) : type));\n  var buf = BufferProto.slice.call(decoder.buffer, start, end);\n  return unpack(buf);\n}\n\nfunction uint8(decoder) {\n  var start = decoder.reserve(1);\n  return decoder.buffer[start];\n}\n\nfunction int8(decoder) {\n  var start = decoder.reserve(1);\n  var value = decoder.buffer[start];\n  return (value & 0x80) ? value - 0x100 : value;\n}\n\nfunction uint16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 8) | buffer[start];\n}\n\nfunction int16(decoder) {\n  var start = decoder.reserve(2);\n  var buffer = decoder.buffer;\n  var value = (buffer[start++] << 8) | buffer[start];\n  return (value & 0x8000) ? value - 0x10000 : value;\n}\n\nfunction uint32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] * 16777216) + (buffer[start++] << 16) + (buffer[start++] << 8) + buffer[start];\n}\n\nfunction int32(decoder) {\n  var start = decoder.reserve(4);\n  var buffer = decoder.buffer;\n  return (buffer[start++] << 24) | (buffer[start++] << 16) | (buffer[start++] << 8) | buffer[start];\n}\n\nfunction read(len, method) {\n  return function(decoder) {\n    var start = decoder.reserve(len);\n    return method.call(decoder.buffer, start, NO_ASSERT);\n  };\n}\n\nfunction readUInt64BE(start) {\n  return new Uint64BE(this, start).toNumber();\n}\n\nfunction readInt64BE(start) {\n  return new Int64BE(this, start).toNumber();\n}\n\nfunction readUInt64BE_int64(start) {\n  return new Uint64BE(this, start);\n}\n\nfunction readInt64BE_int64(start) {\n  return new Int64BE(this, start);\n}\n\nfunction readFloatBE(start) {\n  return ieee754.read(this, start, false, 23, 4);\n}\n\nfunction readDoubleBE(start) {\n  return ieee754.read(this, start, false, 52, 8);\n}", "// read-token.js\n\nvar ReadFormat = require(\"./read-format\");\n\nexports.getReadToken = getReadToken;\n\nfunction getReadToken(options) {\n  var format = ReadFormat.getReadFormat(options);\n\n  if (options && options.useraw) {\n    return init_useraw(format);\n  } else {\n    return init_token(format);\n  }\n}\n\nfunction init_token(format) {\n  var i;\n  var token = new Array(256);\n\n  // positive fixint -- 0x00 - 0x7f\n  for (i = 0x00; i <= 0x7f; i++) {\n    token[i] = constant(i);\n  }\n\n  // fixmap -- 0x80 - 0x8f\n  for (i = 0x80; i <= 0x8f; i++) {\n    token[i] = fix(i - 0x80, format.map);\n  }\n\n  // fixarray -- 0x90 - 0x9f\n  for (i = 0x90; i <= 0x9f; i++) {\n    token[i] = fix(i - 0x90, format.array);\n  }\n\n  // fixstr -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.str);\n  }\n\n  // nil -- 0xc0\n  token[0xc0] = constant(null);\n\n  // (never used) -- 0xc1\n  token[0xc1] = null;\n\n  // false -- 0xc2\n  // true -- 0xc3\n  token[0xc2] = constant(false);\n  token[0xc3] = constant(true);\n\n  // bin 8 -- 0xc4\n  // bin 16 -- 0xc5\n  // bin 32 -- 0xc6\n  token[0xc4] = flex(format.uint8, format.bin);\n  token[0xc5] = flex(format.uint16, format.bin);\n  token[0xc6] = flex(format.uint32, format.bin);\n\n  // ext 8 -- 0xc7\n  // ext 16 -- 0xc8\n  // ext 32 -- 0xc9\n  token[0xc7] = flex(format.uint8, format.ext);\n  token[0xc8] = flex(format.uint16, format.ext);\n  token[0xc9] = flex(format.uint32, format.ext);\n\n  // float 32 -- 0xca\n  // float 64 -- 0xcb\n  token[0xca] = format.float32;\n  token[0xcb] = format.float64;\n\n  // uint 8 -- 0xcc\n  // uint 16 -- 0xcd\n  // uint 32 -- 0xce\n  // uint 64 -- 0xcf\n  token[0xcc] = format.uint8;\n  token[0xcd] = format.uint16;\n  token[0xce] = format.uint32;\n  token[0xcf] = format.uint64;\n\n  // int 8 -- 0xd0\n  // int 16 -- 0xd1\n  // int 32 -- 0xd2\n  // int 64 -- 0xd3\n  token[0xd0] = format.int8;\n  token[0xd1] = format.int16;\n  token[0xd2] = format.int32;\n  token[0xd3] = format.int64;\n\n  // fixext 1 -- 0xd4\n  // fixext 2 -- 0xd5\n  // fixext 4 -- 0xd6\n  // fixext 8 -- 0xd7\n  // fixext 16 -- 0xd8\n  token[0xd4] = fix(1, format.ext);\n  token[0xd5] = fix(2, format.ext);\n  token[0xd6] = fix(4, format.ext);\n  token[0xd7] = fix(8, format.ext);\n  token[0xd8] = fix(16, format.ext);\n\n  // str 8 -- 0xd9\n  // str 16 -- 0xda\n  // str 32 -- 0xdb\n  token[0xd9] = flex(format.uint8, format.str);\n  token[0xda] = flex(format.uint16, format.str);\n  token[0xdb] = flex(format.uint32, format.str);\n\n  // array 16 -- 0xdc\n  // array 32 -- 0xdd\n  token[0xdc] = flex(format.uint16, format.array);\n  token[0xdd] = flex(format.uint32, format.array);\n\n  // map 16 -- 0xde\n  // map 32 -- 0xdf\n  token[0xde] = flex(format.uint16, format.map);\n  token[0xdf] = flex(format.uint32, format.map);\n\n  // negative fixint -- 0xe0 - 0xff\n  for (i = 0xe0; i <= 0xff; i++) {\n    token[i] = constant(i - 0x100);\n  }\n\n  return token;\n}\n\nfunction init_useraw(format) {\n  var i;\n  var token = init_token(format).slice();\n\n  // raw 8 -- 0xd9\n  // raw 16 -- 0xda\n  // raw 32 -- 0xdb\n  token[0xd9] = token[0xc4];\n  token[0xda] = token[0xc5];\n  token[0xdb] = token[0xc6];\n\n  // fixraw -- 0xa0 - 0xbf\n  for (i = 0xa0; i <= 0xbf; i++) {\n    token[i] = fix(i - 0xa0, format.bin);\n  }\n\n  return token;\n}\n\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nfunction flex(lenFunc, decodeFunc) {\n  return function(decoder) {\n    var len = lenFunc(decoder);\n    return decodeFunc(decoder, len);\n  };\n}\n\nfunction fix(len, method) {\n  return function(decoder) {\n    return method(decoder, len);\n  };\n}\n", "// read-core.js\n\nvar ExtBuffer = require(\"./ext-buffer\").ExtBuffer;\nvar ExtUnpacker = require(\"./ext-unpacker\");\nvar readUint8 = require(\"./read-format\").readUint8;\nvar ReadToken = require(\"./read-token\");\nvar CodecBase = require(\"./codec-base\");\n\nCodecBase.install({\n  addExtUnpacker: addExtUnpacker,\n  getExtUnpacker: getExtUnpacker,\n  init: init\n});\n\nexports.preset = init.call(CodecBase.preset);\n\nfunction getDecoder(options) {\n  var readToken = ReadToken.getReadToken(options);\n  return decode;\n\n  function decode(decoder) {\n    var type = readUint8(decoder);\n    var func = readToken[type];\n    if (!func) throw new Error(\"Invalid type: \" + (type ? (\"0x\" + type.toString(16)) : type));\n    return func(decoder);\n  }\n}\n\nfunction init() {\n  var options = this.options;\n  this.decode = getDecoder(options);\n\n  if (options && options.preset) {\n    ExtUnpacker.setExtUnpackers(this);\n  }\n\n  return this;\n}\n\nfunction addExtUnpacker(etype, unpacker) {\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\n  unpackers[etype] = CodecBase.filter(unpacker);\n}\n\nfunction getExtUnpacker(type) {\n  var unpackers = this.extUnpackers || (this.extUnpackers = []);\n  return unpackers[type] || extUnpacker;\n\n  function extUnpacker(buffer) {\n    return new ExtBuffer(buffer, type);\n  }\n}\n", "// decode-buffer.js\n\nexports.DecodeBuffer = DecodeBuffer;\n\nvar preset = require(\"./read-core\").preset;\n\nvar FlexDecoder = require(\"./flex-buffer\").FlexDecoder;\n\nFlexDecoder.mixin(DecodeBuffer.prototype);\n\nfunction DecodeBuffer(options) {\n  if (!(this instanceof DecodeBuffer)) return new DecodeBuffer(options);\n\n  if (options) {\n    this.options = options;\n    if (options.codec) {\n      var codec = this.codec = options.codec;\n      if (codec.bufferish) this.bufferish = codec.bufferish;\n    }\n  }\n}\n\nDecodeBuffer.prototype.codec = preset;\n\nDecodeBuffer.prototype.fetch = function() {\n  return this.codec.decode(this);\n};\n", "// decode.js\n\nexports.decode = decode;\n\nvar DecodeBuffer = require(\"./decode-buffer\").DecodeBuffer;\n\nfunction decode(input, options) {\n  var decoder = new DecodeBuffer(options);\n  decoder.write(input);\n  return decoder.read();\n}", "/**\n * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)\n *\n * @copyright Yusuke Kawasaki\n * @license MIT\n * @constructor\n * @see https://github.com/kawanet/event-lite\n * @see http://kawanet.github.io/event-lite/EventLite.html\n * @example\n * var EventLite = require(\"event-lite\");\n *\n * function MyClass() {...}             // your class\n *\n * EventLite.mixin(MyClass.prototype);  // import event methods\n *\n * var obj = new MyClass();\n * obj.on(\"foo\", function() {...});     // add event listener\n * obj.once(\"bar\", function() {...});   // add one-time event listener\n * obj.emit(\"foo\");                     // dispatch event\n * obj.emit(\"bar\");                     // dispatch another event\n * obj.off(\"foo\");                      // remove event listener\n */\n\nfunction EventLite() {\n  if (!(this instanceof EventLite)) return new EventLite();\n}\n\n(function(EventLite) {\n  // export the class for node.js\n  if (\"undefined\" !== typeof module) module.exports = EventLite;\n\n  // property name to hold listeners\n  var LISTENERS = \"listeners\";\n\n  // methods to export\n  var methods = {\n    on: on,\n    once: once,\n    off: off,\n    emit: emit\n  };\n\n  // mixin to self\n  mixin(EventLite.prototype);\n\n  // export mixin function\n  EventLite.mixin = mixin;\n\n  /**\n   * Import on(), once(), off() and emit() methods into target object.\n   *\n   * @function EventLite.mixin\n   * @param target {Prototype}\n   */\n\n  function mixin(target) {\n    for (var key in methods) {\n      target[key] = methods[key];\n    }\n    return target;\n  }\n\n  /**\n   * Add an event listener.\n   *\n   * @function EventLite.prototype.on\n   * @param type {string}\n   * @param func {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function on(type, func) {\n    getListeners(this, type).push(func);\n    return this;\n  }\n\n  /**\n   * Add one-time event listener.\n   *\n   * @function EventLite.prototype.once\n   * @param type {string}\n   * @param func {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function once(type, func) {\n    var that = this;\n    wrap.originalListener = func;\n    getListeners(that, type).push(wrap);\n    return that;\n\n    function wrap() {\n      off.call(that, type, wrap);\n      func.apply(this, arguments);\n    }\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @function EventLite.prototype.off\n   * @param [type] {string}\n   * @param [func] {Function}\n   * @returns {EventLite} Self for method chaining\n   */\n\n  function off(type, func) {\n    var that = this;\n    var listners;\n    if (!arguments.length) {\n      delete that[LISTENERS];\n    } else if (!func) {\n      listners = that[LISTENERS];\n      if (listners) {\n        delete listners[type];\n        if (!Object.keys(listners).length) return off.call(that);\n      }\n    } else {\n      listners = getListeners(that, type, true);\n      if (listners) {\n        listners = listners.filter(ne);\n        if (!listners.length) return off.call(that, type);\n        that[LISTENERS][type] = listners;\n      }\n    }\n    return that;\n\n    function ne(test) {\n      return test !== func && test.originalListener !== func;\n    }\n  }\n\n  /**\n   * Dispatch (trigger) an event.\n   *\n   * @function EventLite.prototype.emit\n   * @param type {string}\n   * @param [value] {*}\n   * @returns {boolean} True when a listener received the event\n   */\n\n  function emit(type, value) {\n    var that = this;\n    var listeners = getListeners(that, type, true);\n    if (!listeners) return false;\n    var arglen = arguments.length;\n    if (arglen === 1) {\n      listeners.forEach(zeroarg);\n    } else if (arglen === 2) {\n      listeners.forEach(onearg);\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      listeners.forEach(moreargs);\n    }\n    return !!listeners.length;\n\n    function zeroarg(func) {\n      func.call(that);\n    }\n\n    function onearg(func) {\n      func.call(that, value);\n    }\n\n    function moreargs(func) {\n      func.apply(that, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n\n  function getListeners(that, type, readonly) {\n    if (readonly && !that[LISTENERS]) return;\n    var listeners = that[LISTENERS] || (that[LISTENERS] = {});\n    return listeners[type] || (listeners[type] = []);\n  }\n\n})(EventLite);\n", "// encoder.js\n\nexports.Encoder = Encoder;\n\nvar EventLite = require(\"event-lite\");\nvar EncodeBuffer = require(\"./encode-buffer\").EncodeBuffer;\n\nfunction Encoder(options) {\n  if (!(this instanceof Encoder)) return new Encoder(options);\n  EncodeBuffer.call(this, options);\n}\n\nEncoder.prototype = new EncodeBuffer();\n\nEventLite.mixin(Encoder.prototype);\n\nEncoder.prototype.encode = function(chunk) {\n  this.write(chunk);\n  this.emit(\"data\", this.read());\n};\n\nEncoder.prototype.end = function(chunk) {\n  if (arguments.length) this.encode(chunk);\n  this.flush();\n  this.emit(\"end\");\n};\n", "// decoder.js\n\nexports.Decoder = Decoder;\n\nvar EventLite = require(\"event-lite\");\nvar DecodeBuffer = require(\"./decode-buffer\").DecodeBuffer;\n\nfunction Decoder(options) {\n  if (!(this instanceof Decoder)) return new Decoder(options);\n  DecodeBuffer.call(this, options);\n}\n\nDecoder.prototype = new DecodeBuffer();\n\nEventLite.mixin(Decoder.prototype);\n\nDecoder.prototype.decode = function(chunk) {\n  if (arguments.length) this.write(chunk);\n  this.flush();\n};\n\nDecoder.prototype.push = function(chunk) {\n  this.emit(\"data\", chunk);\n};\n\nDecoder.prototype.end = function(chunk) {\n  this.decode(chunk);\n  this.emit(\"end\");\n};\n", "// ext.js\n\n// load both interfaces\nrequire(\"./read-core\");\nrequire(\"./write-core\");\n\nexports.createCodec = require(\"./codec-base\").createCodec;\n", "// codec.js\n\n// load both interfaces\nrequire(\"./read-core\");\nrequire(\"./write-core\");\n\n// @public\n// msgpack.codec.preset\n\nexports.codec = {\n  preset: require(\"./codec-base\").preset\n};\n", "// browser.js\n\nexports.encode = require(\"./encode\").encode;\nexports.decode = require(\"./decode\").decode;\n\nexports.Encoder = require(\"./encoder\").Encoder;\nexports.Decoder = require(\"./decoder\").Decoder;\n\nexports.createCodec = require(\"./ext\").createCodec;\nexports.codec = require(\"./codec\").codec;\n", "import { constructor } from \"@rpgjs/types\";\n\nexport function random(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport function isBrowser(): boolean {\n    return typeof window !== 'undefined'\n}\n\nexport function isFunction(val: unknown): boolean {\n    return {}.toString.call(val) === '[object Function]'\n}\n\nexport function isClass(func: unknown): boolean {\n    return typeof func === 'function';\n}\n\nexport function isPromise(val: unknown) {\n    return isInstanceOf<Promise<unknown>>(val, Promise)\n}\n\nexport function isArray(val: unknown) {\n    return isInstanceOf<Array<unknown>>(val, Array)\n}\n\nexport function isObject(val: unknown): boolean {\n    return typeof val == 'object' && val != null && !isArray(val)\n}\n\nexport function isString(val: unknown): boolean {\n    return typeof val == 'string'\n}\n\nexport function isInstanceOf<T = any>(val: unknown, _class: any) {\n    return val instanceof _class\n}\n\nexport function arrayUniq(array: any[]): any[] {\n    return [...new Set(array)]\n}\n\nexport function arrayFlat(array: any[]): any[] {\n    return array.reduce((acc, val) => acc.concat(val), [])\n}\n\nexport function intersection([start1, end1]: [number, number], [start2, end2]: [number, number]): boolean {\n    return (start1 >= start2 && start1 <= end2) || (start2 >= start1 && start2 < end1)\n}\n\nexport function capitalize(s: unknown): string {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport function camelToKebab(str: string): string {\n    return str\n        .replace(/([a-z])([A-Z])/g, '$1-$2')\n        .toLowerCase();\n}\n\nexport function arrayEquals(a: any[], b: any[]): boolean {\n    return a.length === b.length && a.every((v, i) => v === b[i])\n}\n\nexport function applyMixins(derivedCtor: constructor<any>, baseCtors: constructor<any>[]) {\n    baseCtors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n            const baseCtorName = Object.getOwnPropertyDescriptor(baseCtor.prototype, name)\n            if (!baseCtorName) {\n                return\n            }\n            Object.defineProperty(derivedCtor.prototype, name, baseCtorName)\n        })\n    })\n}\n\nexport function generateUID(): string {\n    let firstPart: any = (Math.random() * 46656) | 0\n    let secondPart: any = (Math.random() * 46656) | 0\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3)\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3)\n    return firstPart + secondPart\n}\n\nexport function createConstructor<T>(...propNames: any[]): T {\n    return class {\n        constructor(...propValues) {\n            propNames.forEach((name, idx) => {\n                this[name] = propValues[idx]\n            })\n        }\n    } as unknown as T\n}\n\nexport function sharedArrayBuffer() {\n    let buffer\n    if (typeof SharedArrayBuffer != 'undefined') {\n        buffer = SharedArrayBuffer\n    }\n    else {\n        buffer = ArrayBuffer\n    }\n    return buffer\n}\n\nexport function toRadians(angle: number) {\n    return angle * (Math.PI / 180)\n}\n\nexport function hexaToNumber(hexa: string): {\n    value: number,\n    alpha: number\n} {\n    let val = hexa.replace('#', '')\n    let alpha = 1\n    if (val.length === 3) {\n        val = val.split('').map((v) => v + v).join('')\n    }\n    if (val.length === 8) {\n        alpha = parseInt(val.substring(0, 2), 16) / 255\n        val = val.substring(2)\n    }\n    return {\n        value: parseInt(val, 16),\n        alpha\n    }\n}\n\nexport function extractId(path: string): string | null {\n    const id = path.match(/([a-zA-Z0-9-_$!]+)\\.[a-z0-9]+$/i)\n    if (!id) return null\n    return id[1]\n}\n\nexport function basename(path: string): string {\n    return path.substring(path.lastIndexOf('/') + 1)\n}\n\nexport function fps2ms(fps: number): number {\n    return 1000 / fps\n}\n\nexport function preciseNow(): number {\n    return typeof performance !== 'undefined' ? performance.now() : Date.now()\n}\n\nexport function round(num: number, decimals: number = 100): number {\n    return Math.round(num * decimals) / decimals\n}\n\n// https://stackoverflow.com/questions/54733539/javascript-implementation-of-lodash-set-method\nexport function set(obj, path, value, onlyPlainObject = false) {\n    if (Object(obj) !== obj) return obj; // When obj is not an object\n    // If not yet an array, get the keys from the string-path\n    if (!Array.isArray(path)) path = path.toString().match(/[^.[\\]]+/g) || [];\n    path.slice(0, -1).reduce((a, c, i) => // Iterate all of them except the last one\n        Object(a[c]) === a[c] // Does the key exist and is its value an object?\n            // Yes: then follow that path\n            ? a[c]\n            // No: create the key. Is the next key a potential array-index?\n            : a[c] = Math.abs(path[i + 1]) >> 0 === +path[i + 1]\n                ? onlyPlainObject ? {} : [] // Yes: assign a new array object\n                : {}, // No: assign a new plain object\n        obj)[path[path.length - 1]] = value; // Finally assign the value to the last key\n    return obj; // Return the top-level object to allow chaining\n};\n\nexport function elementToPositionAbsolute(element: HTMLElement) {\n    element.style.position = 'absolute'\n    element.style.top = '0'\n    element.style.left = '0'\n    element.style.right = '0'\n    element.style.bottom = '0'\n    element.style.width = '100%'\n    element.style.height = '100%'\n}\n\nexport default {\n    random,\n    isBrowser,\n    isPromise,\n    isArray,\n    isObject,\n    isString,\n    isFunction,\n    isClass,\n    isInstanceOf,\n    arrayUniq,\n    arrayFlat,\n    arrayEquals,\n    intersection,\n    applyMixins,\n    capitalize,\n    sharedArrayBuffer,\n    generateUID,\n    createConstructor,\n    toRadians,\n    extractId,\n    basename,\n    fps2ms,\n    preciseNow,\n    hexaToNumber,\n    set,\n    round,\n    camelToKebab,\n    elementToPositionAbsolute\n}", "import { Observer } from \"rxjs\"\nimport { Control } from \"./Input\"\n\ntype Ease = 'easeInSine' | 'easeOutSine' | 'easeInOutSine' | 'easeInQuad' | 'easeOutQuad' | 'easeInOutQuad' | 'easeInCubic' | 'easeOutCubic' | 'easeInOutCubic' | 'easeInQuart' | 'easeOutQuart' | 'easeInOutQuart' | 'easeInQuint' | 'easeOutQuint' | 'easeInOutQuint' | 'easeInExpo' | 'easeOutExpo' | 'easeInOutExpo' | 'easeInCirc' | 'easeOutCirc' | 'easeInOutCirc' | 'easeInBack' | 'easeOutBack' | 'easeInOutBack' | 'easeInElastic' | 'easeOutElastic' | 'easeInOutElastic' | 'easeInBounce' | 'easeOutBounce' | 'easeInOutBounce' | 'linear'\n\nexport interface CameraOptions {\n    smoothMove?: {\n        time?: number,\n        // https://easings.net\n        ease?: Ease\n    } | boolean\n}\n\nexport enum MoveClientMode {\n    Disabled,\n    ByDirection,\n    Drag\n}\n\nexport enum Behavior {\n    Direction,\n    Target\n}\n\nexport enum Direction { \n    Up = 1,\n    Down = 3,\n    Left = 4,\n    Right = 2,\n    UpRight = 1.5,\n    DownRight = 2.5,\n    DownLeft = 3.5,\n    UpLeft =  2.5\n}\n\nexport type ClientMode =  MoveClientMode | { \n    drag: boolean | { area: number[] }\n}\n\nexport interface MoveMode {\n    checkCollision?: boolean,\n    clientMode?: ClientMode,\n    behavior?: Behavior\n}\n\nexport enum PlayerType {\n    Player = 'player',\n    Event = 'event',\n    Shape = 'shape'\n}\n\nexport type Position = { x: number, y: number, z: number }\nexport type PositionXY = Pick<Position, 'x' | 'y'>\nexport type PositionXY_OptionalZ = Pick<Position, 'x' | 'y'> & { z?: Position['z'] }\nexport type PendingMove = { input: string | Control, frame: number }[]\nexport type MoveTo = {\n    onStuck?: (duration: number) => void\n    onComplete?: () => void\n    infinite?: boolean\n    observer?: Observer<void>\n}", "export enum Control {\n    Action = 'action',\n    Attack = 'attack',\n    Defense = 'defense',\n    Skill = 'skill',\n    Back = 'back',\n    Up = 1,\n    Down = 3,\n    Right = 2,\n    Left = 4\n}\n\nexport enum Input {\n    Break = 'break',\n    Backspace = 'backspace',\n    Tab = 'tab',\n    Clear = 'clear',\n    Enter = 'enter',\n    Shift = 'shift',\n    Ctrl = 'ctrl',\n    Alt = 'alt',\n    Pause = 'pause/break',\n    CapsLock = 'caps lock',\n    Escape = 'escape',\n    Conversion = 'conversion',\n    NonConversion = 'non-conversion',\n    Space = 'space',\n    PageUp = 'page up',\n    PageDown = 'page down',\n    End = 'end',\n    Home = 'home',\n    Left = 4,\n    Up = 1,\n    Right = 2,\n    Down = 3,\n    Select = 'select',\n    Print = 'print',\n    Execute = 'execute',\n    PrintScreen = 'Print Screen',\n    Insert = 'insert',\n    Delete = 'delete',\n    Zero = '0',\n    One = '1',\n    Two = '2',\n    Three = '3',\n    Four = '4',\n    Five = '5',\n    Six = '6',\n    Seven = '7',\n    Height = '8',\n    Nine = '9',\n    Equal = '=',\n    Semicolon = 'semicolon (firefox), equals',\n    LessThan = '<',\n    Equals = 'equals (firefox)',\n    Beta = 'ß',\n    At = '@',\n    A = 'a',\n    B = 'b',\n    C = 'c',\n    D = 'd',\n    E = 'e',\n    F = 'f',\n    G = 'g',\n    H = 'h',\n    I = 'i',\n    J = 'j',\n    K = 'k',\n    L = 'l',\n    M = 'm',\n    N = 'n',\n    O = 'o',\n    P = 'p',\n    Q = 'q',\n    R = 'r',\n    S = 's',\n    T = 't',\n    U = 'u',\n    V = 'v',\n    W = 'w',\n    X = 'x',\n    Y = 'y',\n    Z = 'z',\n    SearchKey = 'Windows Key / Left ⌘ / Chromebook Search key',\n    NumPad0 = 'numpad 0',\n    NumPad1 = 'numpad 1',\n    NumPad2 = 'numpad 2',\n    NumPad3 = 'numpad 3',\n    NumPad4 = 'numpad 4',\n    NumPad5 = 'numpad 5',\n    NumPad6 = 'numpad 6',\n    NumPad7 = 'numpad 7',\n    NumPad8 = 'numpad 8',\n    NumPad9 = 'numpad 9',\n    Multiply = 'multiply',\n    Add = 'add',\n    Subtract = 'subtract',\n    DecimalPoint = 'decimal point',\n    Divide = 'divide',\n    F1 = 'f1',\n    F2 = 'f2',\n    F3 = 'f3',\n    F4 = 'f4',\n    F5 = 'f5',\n    F6 = 'f6',\n    F7 = 'f7',\n    F8 = 'f8',\n    F9 = 'f9',\n    F10 = 'f10',\n    F11 = 'f11',\n    F12 = 'f12',\n    F13 = 'f13',\n    F14 = 'f14',\n    F15 = 'f15',\n    F16 = 'f16',\n    F17 = 'f17',\n    F18 = 'f18',\n    F19 = 'f19',\n    F20 = 'f20',\n    F21 = 'f21',\n    F22 = 'f22',\n    F23 = 'f23',\n    F24 = 'f24',\n    NumLock = 'num lock',\n    ScrollLock = 'scroll lock',\n    CircumflexAccent = '^',\n    ExclamationMark = '!',\n    Hash = '#',\n    Dollar = '$',\n    AccentU = 'ù',\n    PageBackward = 'page backward',\n    PageForWard = 'page forward',\n    Star = '*',\n    DecreaseVolume = 'decrease volume level',\n    IncreaseVolume = 'increase volume level',\n    Next = 'next',\n    Previous = 'previous',\n    Stop = 'stop',\n    PlayPause = 'play/pause',\n    Email = 'e-mail',\n    SemiColon = 'semi-colon / ñ',\n    EqualSign = 'equal sign',\n    Comma = 'comma',\n    Dash = 'dash',\n    FowardSlach = 'forward slash / ç',\n    GraveAccent = 'grave accent / ñ / æ',\n    OpenBracket = 'open bracket',\n    BackSlach = 'back slash',\n    CloseBracket = 'close bracket / å',\n    SingleQuote = 'single quote / ø',\n    BackQuote = '`',\n    Altgr = 'altgr'\n}\n\nexport interface ControlOptions {\n    repeat?: boolean\n    bind: string | string[] | Input | Input[]\n    method?: Function\n    delay?: number | {\n        duration: number\n        otherControls?: (string | Control)[]\n    }\n}\n\nexport interface Controls {\n    [controlName: string]: ControlOptions\n}", "export enum HitType {\n    Box = 'box',\n    Circle = 'circle',\n    Polygon = 'polygon'\n}\n\ntype HitCommon = {\n    x: number\n    y: number\n    properties?: {\n        [key: string]: any\n    }\n    name: string\n    type?: string\n    visible?: boolean\n    gid?: number\n}\n\nexport type HitEllipse = {\n    ellipse: boolean\n    width: number\n    height: number\n    type?: 'ellipse' | HitType.Circle\n    rotation?: number\n} & HitCommon\n\nexport type HitPolygon = {\n    polygon: { x: number, y: number }[]\n    type?: HitType.Polygon\n} & HitCommon\n\nexport type HitBox = {\n    width: number\n    height: number\n    type?: HitType.Box\n} & HitCommon\n\nexport type HitObject = HitBox | HitEllipse | HitPolygon | HitCommon\n\nexport type MovingHitbox = {\n    speed?: number\n}", "export enum SocketMethods {\n    CameraFollow = 'cameraFollow',\n    ShowAnimation = 'showAnimation',\n    PlaySound = 'playSound',\n    ModeMove = 'modeMove'\n}\n\nexport enum SocketEvents {\n    CallMethod = 'callMethod',\n    GameReload = 'gameReload',\n    ChangeServer = 'changeServer',\n    LoadScene = 'loadScene',\n}", "import { HitEllipse, HitObject, HitType } from '@rpgjs/types'\nimport  SAT from 'sat'\nimport { isInstanceOf } from './Utils'\nexport { HitType, HitObject } from '@rpgjs/types'\n\nclass HitClass {\n\n    createObjectHitbox(x: number, y: number, z: number, w: number, h: number): SAT.Box {\n        return new SAT.Box(new SAT.Vector(x, y - z), w, h)\n    }\n    \n    getHitbox(obj: HitObject, offset?: { x: number, y: number }): {\n        hitbox: SAT,\n        type?: string,\n        name?: string\n    } {\n        let hitbox: SAT, type: string | undefined\n        if (!offset) offset = { x: 0, y: 0 }\n        const x = obj.x + offset.x\n        const y = obj.y + offset.y\n        if ('ellipse' in obj || obj.type == HitType.Circle) {\n            type = HitType.Circle\n            const radius = (<HitEllipse>obj).width / 2\n            hitbox = new SAT.Circle(new SAT.Vector(x + radius, y + radius), radius)\n        }\n        else if ('polygon' in obj) {\n            type = HitType.Polygon\n            hitbox = new SAT.Polygon(new SAT.Vector(x, y), obj.polygon.map(pos => new SAT.Vector(+pos.x, +pos.y)))\n        }\n        else if (!('polygon' in obj) && ('width' in obj) && ('height' in obj)) {\n            type = HitType.Box\n            hitbox = new SAT.Box(new SAT.Vector(x, y), obj.width, obj.height)\n        }\n        else {\n            hitbox = new SAT.Vector(x, y)\n            type = obj.type\n        }\n        return { \n            hitbox,\n            type,\n            name: obj.name\n        }\n    }\n\n    testPolyCollision(type: string, hit1: SAT, hit2: SAT): boolean {\n        let collided = false\n        if (type == HitType.Box) {\n            if (hit1.pos.x <= hit2.pos.x + hit2.w &&\n                hit1.pos.x + hit1.w >= hit2.pos.x &&\n                hit1.pos.y <= hit2.pos.y + hit2.h &&\n                hit1.h + hit1.pos.y >= hit2.pos.y) {\n                return true\n             }\n            return false\n        }\n        if (isInstanceOf(hit1, SAT.Box)) hit1 = hit1.toPolygon()\n        if (isInstanceOf(hit2, SAT.Box)) hit2 = hit2.toPolygon()\n        switch (type) {\n            case HitType.Circle:\n                collided = SAT.testPolygonCircle(hit1, hit2)\n            break\n            case HitType.Polygon:\n                collided = SAT.testPolygonPolygon(hit1, hit2)\n            break\n        }\n        return collided\n    }\n}\n\nexport const Hit = new HitClass()", "import { TiledObject } from \"./Objects\";\nimport { TiledChunk, TiledCompression, TiledEncoding, TiledImage, TiledProperty } from \"./Types\";\n\nexport enum TiledLayerType {\n    Tile = 'tilelayer',\n    ObjectGroup = 'objectgroup',\n    Image = 'imagelayer',\n    Group = 'group'\n}\n\nexport interface TiledLayer {\n    /**\n     * Incremental ID - unique across all layers\n     */\n    id: number;\n    /**\n     * Image used by this layer. imagelayer only.\n     */\n    image: TiledImage;\n    /**\n     * Array of unsigned int (GIDs) or base64-encoded data. tilelayer only.\n     */\n    data: number[] | string;\n    /**\n     * \tArray of chunks (optional). tilelayer only.\n     */\n    chunks: TiledChunk[];\n    /**\n     * Column count. Same as map width for fixed-size maps.\n     */\n    width: number;\n    /**\n     * Row count. Same as map height for fixed-size maps.\n     */\n    height: number;\n    /**\n     * Name assigned to this layer\n     */\n    name: string;\n    /**\n     * From [0, 1]\n     */\n    opacity: number;\n    properties: {\n        [key: string]: any\n    }\n    /**\n     * csv (default) or base64. tilelayer only.\n     */\n    encoding: TiledEncoding;\n    /**\n     * zlib, gzip, zstd (since Tiled 1.3) or empty (default). tilelayer only.\n     */\n    compression?: TiledCompression;\n \n    /**\n     * Type of layer (tilelayer, objectgroup)\n     */\n    type: TiledLayerType;\n\n    /**\n     * @since 1.9\n     */\n    class: string\n\n    /**\n     * Whether layer is shown or hidden in editor\n     */\n    visible: boolean;\n \n    /**\n     * Horizontal layer offset in tiles. Always 0.\n     */\n    x: number;\n    /**\n     * Vertical layer offset in tiles. Always 0.\n     */\n    y: number;\n \n    /**\n     * Layer order in the original Tiled source\n     */\n    order: number;\n    /**\n     * Horizontal layer offset in pixels (default: 0)\n     */\n    offsetx: number;\n    /**\n     * Vertical layer offset in pixels (default: 0)\n     */\n    offsety: number;\n    /**\n     * X coordinate where layer content starts (for infinite maps)\n     */\n    startx: number;\n    /**\n     * Y coordinate where layer content starts (for infinite maps)\n     */\n    starty: number;\n \n    /**\n     * Hex-formatted color (#RRGGBB or #AARRGGBB) that is multiplied with any graphics drawn by this layer or any child layers (optional).\n     */\n    tintcolor: string;\n    /**\n     * Hex-formatted color (#RRGGBB) (optional). imagelayer only.\n     */\n    transparentcolor: string;\n \n    /**\n     * topdown (default) or index. objectgroup only.\n     */\n    draworder: 'topdown' | 'index' | 'objectgroup';\n    /**\n     * Array of objects. objectgroup only.\n     */\n    objects: TiledObject[];\n\n    layers: TiledLayer[]\n\n    parallaxx: number\n    parallaxy: number\n    repeatx: number\n    repeaty: number\n    locked: boolean\n    color: string\n }", "export function isTiledFormat(val: any): boolean {\n    return typeof val == 'object' && val.version && val.orientation\n}", "import { xml2js } from 'xml-js'\nimport { TiledMap } from '../types/Map'\nimport { TilesetTile } from '../types/Tile'\nimport { TiledTileset } from '../types/Tileset'\nimport { Buffer } from 'buffer'\nimport path from 'path'\n\nexport class TiledParser {\n  private layers: Map<number, any> = new Map()\n\n  constructor(private xml: string, private filePath: string = '') { }\n\n  static propToNumber = (obj, props: string[]) => {\n    for (let key of props) {\n      if (obj[key] !== undefined) {\n        obj[key] = +obj[key]\n      }\n    }\n    return obj\n  }\n\n  static propToBool = (obj, props: string[]) => {\n    for (let key of props) {\n      if (obj[key] !== undefined) {\n        obj[key] = obj[key] == 'true' || obj[key] == '1'\n      }\n    }\n    return obj\n  }\n\n  static toArray<T>(prop): T[] {\n    if (!prop) return []\n    if (!Array.isArray(prop)) return [prop]\n    return prop\n  }\n\n  getImagePath(image: string) {\n    const baseName = path.dirname(this.filePath)\n    if (this.filePath.startsWith('http')) return new URL(image, this.filePath).href\n    return path.join(baseName, image)\n  }\n\n  transform = (obj) => {\n    if (!obj) return\n    const attr = obj.attributes || obj._attributes\n    if (!attr) return obj\n    let newObj = {\n      ...obj,\n      ...attr,\n      ...TiledParser.propToNumber(attr, [\n        'version',\n        'width',\n        'height',\n        'tilewidth',\n        'tileheight',\n        'nextlayerid',\n        'nextobjectid',\n        'hexsidelength',\n        'opacity',\n        'x',\n        'y',\n        'offsetx',\n        'offsety',\n        'startx',\n        'starty',\n        'id',\n        'firstgid',\n        'imageheight',\n        'imagewidth',\n        'margin',\n        'columns',\n        'rows',\n        'tilecount',\n        'rotation',\n        'gid',\n        'tileid',\n        'duration',\n        'parallaxx',\n        'parallaxy',\n        'repeatx',\n        'repeaty',\n        'pixelsize'\n      ]),\n      ...TiledParser.propToBool(attr, [\n        'visible',\n        'infinite',\n        'locked',\n        'bold',\n        'italic',\n        'kerning',\n        'strikeout',\n        'underline',\n        'wrap'\n      ])\n    }\n    if (newObj.properties) {\n      const properties: any = TiledParser.toArray(newObj.properties.property)\n      const propObj = {}\n      for (let prop of properties) {\n        const attr = prop._attributes\n        if (!attr) continue\n        let val\n        switch (attr.type) {\n          case 'file':\n            val = this.getImagePath(attr.value)\n            break\n          case 'object':\n          case 'float':\n          case 'int':\n            val = +attr.value\n            break\n          case 'bool':\n            val = attr.value == 'true' ? true : false\n            break\n          case 'class':\n            val = {\n              ...(this.transform(prop)?.properties ?? {}),\n              _classname: attr.propertytype\n            }\n            break\n          default:\n            val = attr.value\n        }\n        propObj[attr.name] = val\n      }\n      newObj.properties = propObj\n    }\n    if (newObj.polygon) {\n      newObj.polygon = this.transform(newObj.polygon)\n    }\n    if (newObj.polyline) {\n      newObj.polyline = this.transform(newObj.polyline)\n    }\n    if (newObj.points) {\n      newObj = newObj.points.split(' ').map(point => {\n        const pos = point.split(',')\n        return { x: +pos[0], y: +pos[1] }\n      })\n    }\n    if (newObj.point) {\n      newObj.point = true\n    }\n    if (newObj.ellipse) {\n      newObj.ellipse = true\n    }\n    if (newObj.text) {\n      newObj.text = {\n        text: newObj.text._text,\n        ...this.transform(newObj.text)\n      }\n      delete newObj.text._text\n    }\n    if (newObj.image) {\n      newObj.image = this.transform(newObj.image)\n    }\n    if (newObj.source) {\n      newObj.source = this.getImagePath(newObj.source)\n    }\n    const objectgroup = newObj.object || newObj.objectgroup?.object\n    if (objectgroup) {\n      newObj.objects = TiledParser.toArray(objectgroup).map((object: any) => {\n        return this.transform(object)\n      })\n    }\n    delete newObj._attributes\n    delete newObj.attributes\n    delete newObj.object\n    delete newObj.objectgroup\n    return newObj\n  }\n\n  static unpackTileBytes(buffer: Buffer, size: number): number[] | never {\n    const expectedCount = size * 4\n    if (buffer.length !== expectedCount) {\n      throw new Error(\"Expected \" + expectedCount +\n        \" bytes of tile data; received \" + buffer.length)\n    }\n    let tileIndex = 0\n    const array: number[] = []\n    for (let i = 0; i < expectedCount; i += 4) {\n      array[tileIndex] = buffer.readUInt32LE(i)\n      tileIndex++\n    }\n    return array\n  }\n\n  static decode(obj: { encoding: string, data: string }, size: number) {\n    const { encoding, data } = obj\n    if (encoding == 'base64') {\n      return TiledParser.unpackTileBytes(Buffer.from(data.trim(), 'base64'), size)\n    }\n    else if (encoding == 'csv') {\n      return data.trim().split(',').map(x => +x)\n    }\n    return data\n  }\n\n  parseMap(): TiledMap {\n    const json: any = xml2js(this.xml, { compact: true })\n    const jsonNoCompact: any = xml2js(this.xml)\n    //const layer = json.map.layer\n    const tileset = json.map.tileset\n    const group = json.map.group\n\n    const recursiveObjectGroup = (obj) => {\n      const { objectgroup, group, layer, imagelayer } = obj\n      const setLayer = (type) => {\n        if (!type) return\n        TiledParser.toArray(type).forEach((val: any) => {\n          if (this.layers.has(+val._attributes.id)) {\n            throw new Error(`Tiled Parser Error: Layer with id ${val._attributes.id} already exists`)\n          }\n          this.layers.set(+val._attributes.id, val)\n        })\n      }\n      setLayer(objectgroup)\n      setLayer(layer)\n      setLayer(group)\n      setLayer(imagelayer)\n      if (group) {\n        recursiveObjectGroup(group)\n      }\n    }\n\n    recursiveObjectGroup(json.map)\n\n    const recursiveLayer = (elements, array: any = []) => {\n      if (!elements) return array\n      for (let element of elements) {\n        const { name } = element\n        if (!['layer', 'group', 'imagelayer', 'objectgroup'].includes(name)) continue\n        const data = element.elements?.find(el => el.name == 'data')\n        element.layer = this.layers.get(+element.attributes.id)\n        const obj = {\n          ...(this.transform(data) ?? {}),\n          ...this.transform(element),\n          ...this.transform(element.layer),\n          layers: recursiveLayer(element.elements),\n          data: data ? data.elements[0].text : undefined,\n          type: name == 'layer' ? 'tilelayer' : name\n        }\n        delete obj.elements\n        delete obj.layer\n        if (obj.data) obj.data = TiledParser.decode(obj, obj.width * obj.height)\n        array.push(obj)\n      }\n      return array\n    }\n\n    const layers = recursiveLayer(jsonNoCompact.elements[0].elements)\n\n    const tilesets = TiledParser.toArray<TiledTileset>(tileset).map(tileset => {\n      const obj = this.transform(tileset)\n      return obj\n    })\n\n    const ret = {\n      ...this.transform(json.map),\n      layers,\n      tilesets\n    }\n\n    delete ret.layer\n    delete ret.tileset\n    delete ret.group\n    delete ret.imagelayer\n\n    return ret\n  }\n\n  parseTileset(): TiledTileset {\n    const json: any = xml2js(this.xml, { compact: true })\n    const { tileset } = json\n\n    const ret = {\n      ...this.transform(tileset),\n      image: this.transform(tileset.image),\n      tiles: TiledParser.toArray<TilesetTile>(tileset.tile).map((tile: any) => {\n        const ret = this.transform(tile)\n        if (tile.animation) {\n          ret.animations = TiledParser.toArray(tile.animation.frame).map(this.transform)\n        }\n        delete ret.animation\n        return ret\n      })\n    }\n\n    delete ret.tile\n\n    return ret\n  }\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n", "export class TiledProperties {\n    properties: {\n        [key: string]: any\n    } = {}\n    class: string\n\n    constructor(data?: any) {\n        this.properties = data?.properties ?? {}\n    }\n\n    getProperty<P, D = undefined>(name: string, defaultValue?: D): P | D {\n        const val = this.properties[name]\n        if (val === undefined) {\n            return defaultValue as D\n        }\n        return val as any\n    }\n\n    hasProperty(name: string): boolean {\n        return !!this.properties[name]\n    }\n\n    setProperty<T>(name: string, value: T) {\n        this.properties[name] = value\n    }\n\n    getType(): string {\n        return this.class || this['type']\n    }\n }", "import { TiledProperties } from \"./Properties\"\n\nconst FLIPPED_HORIZONTALLY_FLAG = 0x80000000\nconst FLIPPED_VERTICALLY_FLAG   = 0x40000000\nconst FLIPPED_DIAGONALLY_FLAG   = 0x20000000\nconst ROTATED_HEXAGONAL_120_FLAG = 0x10000000\n\nexport class TileGid extends TiledProperties {\n    private _gid: number \n\n    constructor(public obj?) {\n        super(obj)\n        this._gid = obj?.gid\n    }\n\n    static getRealGid(gid: number): number {\n        return gid & ~(FLIPPED_HORIZONTALLY_FLAG |\n            FLIPPED_VERTICALLY_FLAG |\n            FLIPPED_DIAGONALLY_FLAG | \n            ROTATED_HEXAGONAL_120_FLAG)\n    }\n\n    get horizontalFlip(): boolean {\n        return !!(this._gid & FLIPPED_HORIZONTALLY_FLAG)\n    }\n\n    get verticalFlip(): boolean {\n        return !!(this._gid & FLIPPED_VERTICALLY_FLAG)\n    }\n\n    get diagonalFlip(): boolean {\n        return !!(this._gid & FLIPPED_DIAGONALLY_FLAG)\n    }\n\n    get rotatedHex120(): boolean {\n        return !!(this._gid & ROTATED_HEXAGONAL_120_FLAG)\n    }\n\n    get gid(): number {\n       return TileGid.getRealGid(this._gid)\n    }\n\n    set gid(val: number) {\n        this._gid = val\n    }\n}", "import { TilesetTile } from \"../types/Tile\";\nimport { TileGid } from \"./Gid\";\n\ntype TileInfo = TilesetTile & { gid?: number, index: number, layerIndex?: number }\n\nexport class Tile extends TileGid {\n    index: number\n\n    constructor(public tile: TileInfo | { gid: number }) {\n        super(tile)\n        Reflect.deleteProperty(tile, 'gid')\n        Object.assign(this, tile)\n    } \n}\n\nexport interface Tile extends TileInfo {}", "import { TiledObject } from \"../types/Objects\";\nimport { TileGid } from \"./Gid\";\n\nexport class TiledObjectClass extends TileGid {\n    layerName?: string = ''\n\n    constructor(object?: TiledObject) {\n        super(object)\n        Object.assign(this, object)\n        if (object?.gid) {\n            this.y -= this.height\n        }\n    }\n}\n\nexport interface TiledObjectClass extends TiledObject {}", "import { TiledLayer } from \"../types/Layer\";\nimport { TileGid } from \"./Gid\";\nimport { TiledObjectClass } from \"./Object\";\nimport { TiledProperties } from \"./Properties\";\nimport { Tile } from \"./Tile\";\nimport { Tileset } from \"./Tileset\";\n\nexport class Layer extends TiledProperties {\n    cacheTiles: boolean = false\n    tiles: (Tile | undefined)[] = []\n    objects: TiledObjectClass[]\n\n    get size(): number {\n        return this.data.length\n    }\n\n    constructor(layer: TiledLayer, private tilesets: Tileset[], private parent?: Layer) {\n        super(layer)\n        Object.assign(this, layer)\n        this.mapObjects()\n        this.mergePropertiesWithParent()\n        // Caching tiles saves CPU but consumes RAM for large maps\n        this.cacheTiles = this.getProperty<boolean, boolean>('cache-tiles', false)\n        if (this.cacheTiles) this.propertiesTiles()\n    }\n\n    createTile(gid: number, tileIndex: number, layerIndex?: number): Tile | undefined {\n        if (gid == 0) {\n            return\n        }\n        const realGid = TileGid.getRealGid(gid)\n        const tileset = Layer.findTileSet(realGid, this.tilesets)\n        if (!tileset) {\n            return undefined\n        }\n        const tile = tileset.getTile(realGid - tileset.firstgid)\n        if (tile) {\n            return new Tile({\n                ...tile.tile,\n                gid,\n                index: tileIndex,\n                layerIndex\n            })\n        }\n        return new Tile({\n            gid,\n            index: tileIndex,\n            layerIndex\n        })\n    }\n\n    private mergePropertiesWithParent() {\n        const parent = this.getLayerParent()\n        if (!this.properties) this.properties = {}\n        if (!parent) return\n        for (let key in parent.properties) {\n            const val = parent.properties[key]\n            const valChild = this.properties[key]\n            if (valChild === undefined) {\n                this.properties[key] = val\n            }\n            else {\n                if (key == 'z') {\n                    this.properties[key] += val\n                }\n                else {\n                    continue\n                }\n            }\n        }\n        this.opacity = Math.round((parent.opacity ?? 1) * (this.opacity ?? 1) * 100) / 100\n        this.offsetx = (parent.offsetx ?? 0) + (this.offsetx ?? 0)\n        this.offsety = (parent.offsety ?? 0) + (this.offsety ?? 0)\n        this.locked = parent.locked ?? false\n    }\n\n    private propertiesTiles() {\n        if (!this.data) return\n        const data = this.data as number[]\n        for (let i = 0; i < data.length; i++) {\n            const id = data[i]\n            this.tiles.push(this.createTile(id, i))\n        }\n    }\n\n    private mapObjects() {\n        if (this.objects) {\n            this.objects = this.objects.map(object => {\n                const obj = new TiledObjectClass(object)\n                obj.layerName = this.name\n                return obj\n            })\n        }\n    }\n\n    getTileByIndex(tileIndex: number): Tile | undefined {\n        if (this.cacheTiles) {\n            return this.tiles[tileIndex]\n        }\n        return this.createTile(this.data[tileIndex] as number, tileIndex)\n    }\n\n    static findTileSet(gid: number, tileSets: Tileset[]): Tileset | undefined {\n        let tileset: Tileset | undefined\n        for (let i = tileSets.length - 1; i >= 0; i--) {\n            tileset = tileSets[i]\n            if (tileset.firstgid && tileset.firstgid <= gid) {\n                break;\n            }\n        }\n        return tileset;\n    }\n\n    getLayerParent(): Layer | undefined {\n        return this.parent\n    }\n\n    tilesForEach(cb: (tile: Tile | undefined, index: number) => void) {\n        for (let i = 0; i < this.data.length; i++) {\n            if (this.cacheTiles) {\n                cb(this.tiles[i], i)\n                continue\n            }\n            cb(this.createTile(this.data[i] as number, i) as Tile, i)\n        }\n    }\n\n    setData(tileIndex: number, gid: number): void {\n        (this.data as number[])[tileIndex] = gid\n    }\n}\n\nexport interface Layer extends TiledLayer {\n    objects: TiledObjectClass[]\n}", "import { TilesetTile } from \"../types/Tile\"\nimport { TiledTileset } from \"../types/Tileset\"\nimport { TiledProperties } from \"./Properties\"\nimport { Tile } from \"./Tile\"\n\nexport class Tileset extends TiledProperties {\n    private cacheTileId: Map<number, Tile> = new Map()\n\n    constructor(private tileset: TiledTileset) {\n        super(tileset)\n        Object.assign(this, tileset)\n        this.margin = this.margin ?? 0\n        this.spacing = this.spacing ?? 0\n        for (let tile of tileset.tiles) {\n            this.addTile(tile)\n        }\n        Reflect.deleteProperty(this, 'tiles')\n    }\n\n    addTile(tileObj: TilesetTile): Tile {\n        const tile = new Tile(tileObj)\n        this.cacheTileId.set(tile.id, tile)\n        return tile\n    }\n\n    getTile(id: number): Tile | undefined {\n        return this.cacheTileId.get(+id)\n    }\n}\n\nexport interface Tileset extends TiledTileset {}", "import { TiledParser } from \"./parser\"\nimport axios from 'axios'\nimport fs from 'fs'\nimport { TiledMap } from \"../types/Map\"\nimport { TiledTileset } from \"../types/Tileset\"\nimport path from \"path\"\n\ntype ParseOptions = { getOnlyBasename?: boolean }\n\nexport class TiledParserFile {\n    private basePath: string\n    private staticDir: string\n    private relativePath: string\n\n    constructor(private file: string, {\n        basePath = '',\n        staticDir = '',\n        relativePath = ''\n    } = {}) {\n        this.basePath = basePath\n        this.staticDir = staticDir\n        this.relativePath = relativePath\n    }\n\n    static isBrowser() {\n        // @ts-ignore\n        return (typeof window !== 'undefined' && !window.useFileSystem)\n    }\n\n    static typeOfFile(file: string): {\n        isXml: boolean\n        isObject: boolean\n        isHttp: boolean\n        isPath: boolean\n    } {\n        file = file.trim()\n        const isString = typeof file == 'string'\n        const info = {\n            isXml: isString && file.startsWith('<?xml'),\n            isObject: !!file['version'],\n            isHttp: isString && file.startsWith('http')\n        }\n        return  {\n            ...info,\n            isPath: !info.isXml && !info.isObject && !info.isHttp\n        }\n    }\n\n    private _parseFile<T>(file: string, type: string, cb: Function) {\n        const isXml = content => TiledParserFile.typeOfFile(content).isXml\n\n        const loadContent = (content) => {\n            if (!content) {\n                return cb(null)\n            }\n            if (isXml(content)) {\n                const parser = new TiledParser(content, this.staticDir ? '' : isXml(file) ? this.relativePath : file)\n                if (type == 'map') {\n                    const json = parser.parseMap() as any\n                    return cb(json)\n                }\n                else if (type == 'tileset') {\n                    const json = parser.parseTileset() as any\n                    return cb(json)\n                }\n            }\n    \n            return cb(JSON.parse(content))\n        }\n\n        if (TiledParserFile.typeOfFile(file).isObject) {\n            return cb(file)\n        }\n\n        const { isHttp } = TiledParserFile.typeOfFile(file)\n        if (isXml(file)) {\n            loadContent(file)\n        }\n        else if (isHttp || (TiledParserFile.isBrowser() && process.env.NODE_ENV != 'test')) {\n            let url = isHttp ? file : path.join(this.basePath, this.staticDir, file)\n            // @ts-ignore\n            if (TiledParserFile.isBrowser() && window.urlCache) {\n                // @ts-ignore\n                url = window.urlCache[file]\n            }\n            axios.get(url).then(res => res.data).then(loadContent)\n        }\n        else {\n            let filepath = file\n            if (file.startsWith('/')) {\n                filepath = path.join(this.basePath ? this.basePath: '', file)\n            }\n            if (this.staticDir) {\n                filepath = path.join(this.staticDir, file)\n            }\n            fs.readFile(path.normalize(filepath), 'utf-8', (err, data) => {\n                if (err) return cb(null, err)\n                loadContent(data)\n            })\n            return\n        }   \n    }\n\n    parseFile(cb: Function, options: ParseOptions = {}) {\n        const { getOnlyBasename } = options\n        const basename = path => path.substring(path.lastIndexOf('/') + 1)\n        if (getOnlyBasename) {\n            if (TiledParserFile.typeOfFile(this.file).isPath) {\n                this.file = basename(this.file)\n            }\n        }\n        this._parseFile<TiledMap>(this.file, 'map', (map, err) => {\n            let hasError = false\n            if (err) return cb(null, err)\n            if (map.tilesets) {\n                const parseTileset: TiledTileset[] = []\n                const finish = () => {\n                    loadAll++\n                    if (loadAll == map.tilesets.length && !hasError) {\n                        map.tilesets = parseTileset\n                        cb(map)\n                    }\n                }\n                let loadAll = 0\n                for (let i=0; i <  map.tilesets.length ; i++) {\n                    const tileset = map.tilesets[i]\n                    if (!tileset.source) {\n                        parseTileset[i] = tileset\n                        finish()\n                        continue\n                    }\n                    if (getOnlyBasename) {\n                        if (TiledParserFile.typeOfFile(tileset.source).isPath) {\n                            tileset.source = basename(tileset.source)\n                        }\n                    }\n                    this._parseFile<TiledTileset>(tileset.source, 'tileset', (result, err) => {\n                        if (err) {\n                            hasError = true\n                            return cb(null, err)\n                        }\n                        parseTileset[i] = {\n                            ...result,\n                            firstgid: tileset.firstgid\n                        }\n                        finish()\n                    })\n                }\n                \n            }\n        })\n    }\n\n    parseFilePromise(options: ParseOptions = {}): Promise<TiledMap> {\n        return new Promise((resolve, reject) => {\n            this.parseFile((ret, err) => {\n                if (ret) resolve(ret)\n                else reject(err)\n            }, options)\n        })\n    }\n}", "import { TiledLayer, TiledLayerType } from \"../types/Layer\";\nimport { TiledMap } from \"../types/Map\";\nimport { TiledTileset } from \"../types/Tileset\";\nimport { Layer } from \"./Layer\";\nimport { TiledObjectClass } from \"./Object\";\nimport { TiledProperties } from \"./Properties\";\nimport { Tile } from \"./Tile\";\nimport { Tileset } from \"./Tileset\";\n\nexport interface TileInfo {\n    tiles: Tile[]\n    hasCollision: boolean | undefined\n    isClimbable?: boolean | undefined\n    isOverlay: boolean | undefined\n    objectGroups: TiledObjectClass[],\n    tileIndex: number\n}\n\nexport interface GetTileOptions {\n    populateTiles?: boolean\n}\n\n// Allows you to cache tilesets. Avoid rebuilding for other maps\nexport let bufferTilesets = {}\n\nexport class MapClass extends TiledProperties {\n    /** \n     * @title Data of map\n     * @prop {object} [data]\n     * @readonly\n     * @memberof Map\n     * @memberof RpgSceneMap\n     * */\n    data: TiledMap\n\n    tilesets: Tileset[] = []\n    layers: Layer[] = []\n\n    private tmpLayers: Layer[] = []\n    private tilesIndex: {\n        [zIndex: number]: Uint16Array\n    } = {}\n\n    /**\n     * Allows to define the size of ArrayBuffer to keep in memory the tiles of the map\n     */\n    private allocateMemory: number = 0\n\n    /**\n     * If set to true, the memory allocation will take only one tile (the tile of the last layer)\n     */\n    private lowMemory: boolean = false\n\n    constructor(map?: TiledMap) {\n        super(map ?? {})\n        if (map) this.load(map)\n    }\n\n    load(map: TiledMap) {\n        Object.assign(this, map)\n        if (this.hasProperty('low-memory')) {\n            this.lowMemory = this.getProperty<boolean, boolean>('low-memory', false)\n        }\n        this.tmpLayers = []\n        this.mapTilesets()\n        this.mapLayers(this.layers)\n        this.layers = [...this.tmpLayers]\n        Reflect.deleteProperty(this, 'tmpLayers')\n        this.setTilesIndex()\n        this.data = map  \n    }\n\n    /** \n     * @title Width of the map in pixels\n     * @prop {number} [widthPx]\n     * @readonly\n     * @memberof Map\n     * @memberof RpgSceneMap\n     * */\n\n    get widthPx(): number {\n        return this.width * this.tilewidth\n    }\n\n    /** \n    * @title Height of the map in pixels\n    * @prop {number} [heightPx]\n    * @readonly\n    * @memberof Map\n    * @memberof RpgSceneMap\n    * */\n    get heightPx(): number {\n        return this.height * this.tileheight\n    }\n\n    /** \n     * @title The depth of the map in pixels (this is the height of a tile ;))\n     * @prop {number} map.zTileHeight\n     * @readonly\n     * @memberof Map\n     * @memberof RpgSceneMap\n     * */\n    get zTileHeight(): number {\n        return this.tileheight\n    }\n\n    /**\n     * Find a layer by name. Returns `undefined` is the layer is not found\n\n     * @title Get Layer by name\n     * @method map.getLayerByName(name)\n     * @param {string} name layer name\n     * @returns {LayerInfo | undefined}\n     * @example\n     *  ```ts\n     *  const tiles = map.getLayerByName(0, 0)\n     *  ```\n     * @memberof Map\n     * @memberof RpgSceneMap\n     */\n    getLayerByName(name: string): TiledLayer | undefined {\n        return this.layers.find(layer => layer.name == name)\n    }\n\n    /**\n    * Get the tile index on the tileset\n    * \n    * @title Get index of tile\n    * @method map.getTileIndex(x,y)\n    * @param {number} x Position X\n    * @param {number} x Position Y\n    * @returns {number}\n    * @memberof Map\n    * @memberof RpgSceneMap\n    */\n    getTileIndex(x: number, y: number, [z] = [0]): number {\n        return this.width * Math.floor((y - z) / this.tileheight) + Math.floor(x / this.tilewidth)\n    }\n\n    getTilePosition(index: number): { x: number, y: number } {\n        return {\n            y: Math.floor(index / this.width) * this.tileheight,\n            x: index % (this.width) * this.tilewidth\n        }\n    }\n\n    /**\n     * Find the point of origin (top left) of a tile. Of course, its position depends on the size of the tile\n\n     * @title Get origin position of tile\n     * @method map.getTileOriginPosition(x,y)\n     * @param {number} x Position X\n     * @param {number} x Position Y\n     * @returns { {x: number, y: number }}\n     * @example\n     *  ```ts\n     *  // If the size of a tile is 32x32px\n     *  const position = map.getTileOriginPosition(35, 12)\n     *  console.log(position) // { x: 32, y: 0 }\n     *  ```\n     * @memberof Map\n     * @memberof RpgSceneMap\n     */\n\n    getTileOriginPosition(x: number, y: number): {\n        x: number\n        y: number\n    } {\n        return {\n            x: Math.floor(x / this.tilewidth) * this.tilewidth,\n            y: Math.floor(y / this.tileheight) * this.tileheight\n        }\n    }\n\n    /**\n    * Recover tiles according to a position\n\n    * @title Get tile by position\n    * @method map.getTileByPosition(x,y)\n    * @param {number} x Position X\n    * @param {number} x Position Y\n    * @returns {TileInfo}\n    * @example\n    *  ```ts\n    *  const tiles = map.getTileByPosition(0, 0)\n    *  ```\n    * @memberof Map\n    * @memberof RpgSceneMap\n    */\n    getTileByPosition(x: number, y: number, z: [number, number] = [0, 0], options: GetTileOptions = {}): TileInfo {\n        const tileIndex = this.getTileIndex(x, y, [z[0]])\n        return this.getTileByIndex(tileIndex, z, options)\n    }\n\n    /**\n     * Retrieves tiles according to its index\n\n     * @title Get tile by index\n     * @method map.getTileByIndex(tileIndex)\n     * @param {number} tileIndex tile index\n     * @returns {TileInfo}\n     * @example\n     *  ```ts\n     *  const index = map.getTileIndex(0, 0)\n     *  const tiles = map.getTileByIndex(index)\n     *  ```\n     * @memberof Map\n     * @memberof RpgSceneMap\n     */\n\n    getTileByIndex(\n        tileIndex: number, \n        zPlayer: [number, number] = [0, 0], \n        options: GetTileOptions = {\n            populateTiles: true\n        }\n    ): TileInfo {\n        const zA = Math.floor(zPlayer[0] / this.zTileHeight)\n        const zB = Math.floor(zPlayer[1] / this.zTileHeight)\n        const level = this.tilesIndex[zA]\n        const obj: TileInfo = {\n            tiles: [],\n            hasCollision: true,\n            isOverlay: false,\n            objectGroups: [],\n            tileIndex\n        }\n        if (!level) {\n            return obj\n        }\n        const [layer] = this.layers\n        const getTileByPointer = (pointer = 0) => {\n            const pos = tileIndex * this.realAllocateMemory + pointer\n            const gid = level[pos]\n            if (gid === 0) {\n                return obj\n            }\n            const tile = layer.createTile(gid, tileIndex, level[pos+1])\n            if (tile) obj.tiles.push(tile)\n        }\n        if (options.populateTiles) {\n            for (let i=0 ; i < this.realAllocateMemory ; i += 2) {\n                getTileByPointer(i)\n            }\n        }\n        else {\n            getTileByPointer()\n        }\n        const [tile] = obj.tiles\n        if (tile) {\n            obj.hasCollision = tile.getProperty<boolean, boolean>('collision', false)\n            obj.objectGroups = tile.objects as TiledObjectClass[] ?? []\n        }\n        return obj\n    }\n\n    getAllObjects(): TiledObjectClass[] {\n        return this.layers.reduce((prev: TiledObjectClass[], current: Layer) => {\n            if (!current.objects) return prev\n            return prev.concat(...current.objects)\n        }, [])\n    }\n\n    getData() {\n        return {\n            ...this.data,\n            layers: this.layers\n        }\n    }\n\n    setTile(x: number, y: number, layerFilter: string | ((layer: any) => boolean), tileInfo: any): {\n        x: number,\n        y: number,\n        tiles: {\n            [tileIndex: number]: Tile\n        }\n    } | never {\n        if (this.lowMemory) {\n            throw 'Impossible to change a tile with the lowMemory option'\n        }\n        const tileIndex = this.getTileIndex(x, y)\n        let fnFilter\n        let tilesEdited = {}\n        if (typeof layerFilter == 'string') {\n            fnFilter = (layer) => layer.name == layerFilter\n        }\n        else {\n            fnFilter = layerFilter\n        }\n        for (let i=0 ; i < this.layers.length ; i++) {\n            const layer = this.layers[i]\n            if (!fnFilter(layer)) continue\n            let tile: Tile | undefined\n            const oldTile = this.getTileByIndex(tileIndex)\n            if (tileInfo.gid) {\n                tile = layer.createTile(tileInfo.gid, tileIndex)\n            }\n            if (!tile) continue\n            for (let key in tileInfo) {\n                if (key == 'gid') continue\n                tile[key] = tileInfo[key]\n            }\n            tilesEdited[layer.name] = {\n                gid: tile.gid,\n                properties: tile.properties\n            }\n            this.setTileIndex(layer, oldTile.tiles[0], tile, tileIndex, i)\n            layer.setData(tileIndex, tile.gid)\n        }\n        return {\n            x,\n            y,\n            tiles: tilesEdited\n        }\n    }\n\n    removeCacheTileset(name: string) {\n        delete bufferTilesets[name]\n    }\n\n    clearCacheTilesets() {\n        bufferTilesets = {}\n    }\n\n    private mapTilesets() {\n        this.tilesets = this.tilesets.map(tileset => {\n            if (bufferTilesets[tileset.name]) {\n                const instance = bufferTilesets[tileset.name]\n                instance.firstgid = tileset.firstgid\n                return instance\n            }\n            const _tileset = new Tileset(tileset)\n            bufferTilesets[_tileset.name] = _tileset\n            return _tileset\n        })\n    }\n\n    private mapLayers(layers: TiledLayer[] = [], parent?: Layer) {\n        for (let layer of layers) {\n            const layerInstance = new Layer(layer, this.tilesets, parent)\n            this.tmpLayers.push(layerInstance)\n            if (layer.layers) {\n                this.mapLayers(layer.layers, layerInstance)\n            }\n        }\n        if (this.lowMemory) this.allocateMemory = 1\n        if (!this.allocateMemory) this.allocateMemory = this.layers.length\n    }\n\n    private setTileIndex(layer: Layer, oldTile: Tile, newTile: Tile, tileIndex: number, layerIndex: number) {\n        const startPos = tileIndex * this.realAllocateMemory\n        let pointer = startPos + this.realAllocateMemory - 2\n        const zLayer = layer.getProperty<number, number>('z', 0)\n        const zTile = oldTile.getProperty<number, number>('z', 0)\n        let z = zLayer + zTile\n        while (pointer >= startPos) {\n            const zlayer = this.tilesIndex[z]\n            if (zlayer[pointer] === oldTile.gid && zlayer[pointer+1] === layerIndex) {\n                this.tilesIndex[z][pointer] = newTile.gid\n            }\n            pointer -= 2\n        }\n    }\n\n    /**\n     * We multiply by 2 because 2 entries are stored for a tile: its GID and the Layer Index\n     * \n     * Example If I have 3 layers, The array will have the following form \n     * \n     * [\n     *  GID of Layer 3, \n     *  Layer Index of Layer 3, \n     *  GID of Layer 2, \n     *  Layer Index of Layer 2, \n     *  GID of Layer 1, \n     *  Layer Index of Layer 1,\n     * ... others tiles\n     * ]\n     * \n     * The size in memory of the map is therefore:\n     * \n     * `(map width * map height * number of layers * 4) bytes`\n     * \n     * > We multiply by 4, because an element takes 2 bytes and has 2 elements for a tile is 4 bytes in all\n     * \n     * Example (a 100x100 map with 5 layers)\n     * \n     * `100 * 100 * 5 * 4 = 200000 bytes = ~195 Kb`\n     * \n     * If we define on lowMemory then the calculation is the following\n     * \n     * `(map width * map height * 4) bytes`\n     * \n     * Example\n     * \n     * `100 * 100 * 4 = 40000 bytes = ~39 Kb`\n     */\n    private get realAllocateMemory() {\n        return this.allocateMemory * 2\n    }\n\n    /**\n     * We keep each tile in memory classified by z value. The values are ordered from the end to the beginning so that the first element of the array (when retrieved with getTileByIndex() is the tile on the highest layer. This way, the tile search is very fast for collisions \n     * \n     */\n    private addTileIndex(layer: Layer, tile: Tile | undefined, tileIndex: number, layerIndex: number) {\n        if ((!tile) || (tile && tile.gid == 0)) {\n            return\n        }\n        const zLayer = layer.getProperty<number, number>('z', 0)\n        const zTile = tile.getProperty<number, number>('z', 0)\n        let z = zLayer + zTile\n        if (!this.tilesIndex[z]) {\n            const buffer = new ArrayBuffer(layer.size * this.realAllocateMemory * 2)\n            this.tilesIndex[z] = new Uint16Array(buffer)\n        }\n        const startPos = tileIndex * this.realAllocateMemory\n        let pointer = startPos + this.realAllocateMemory - 2\n\n        while (this.tilesIndex[z][pointer] !== 0 && pointer > startPos) {\n            pointer -= 2\n        }\n\n        this.tilesIndex[z][pointer] = tile.gid\n        this.tilesIndex[z][pointer+1] = layerIndex\n        this.tilesIndex[z][startPos] = tile.gid\n        this.tilesIndex[z][startPos+1] = layerIndex\n    }\n\n    private setTilesIndex() {\n        for (let i=0 ; i < this.layers.length ; i++) {\n            const layer = this.layers[i]\n            if (layer.type != TiledLayerType.Tile) {\n                continue\n            }\n            layer.tilesForEach((tile, index) => {\n                this.addTileIndex(layer, tile, index, i)\n            })\n        }\n    }\n}\n\nexport interface MapClass extends TiledMap { }", "export class Vector2d {\n    constructor(public x: number, public y: number, public z: number = 0) {}\n\n    set(vector: Vector2d) {\n        this.x = vector.x\n        this.y = vector.y\n        this.z = vector.z\n        return this\n    }\n    \n    add(vector: Vector2d) {\n        this.x += vector.x\n        this.y += vector.y\n        return this\n    }\n\n    subtract(vector: Vector2d) {\n        this.x -= vector.x\n        this.y -= vector.y\n        return this\n    }\n\n    multiply(scalar: number) {\n        this.x *= scalar\n        this.y *= scalar\n        return this\n    }\n\n    divide(scalar: number) {\n        this.x /= scalar\n        this.y /= scalar\n        return this\n    }\n\n    distanceWith(vector: Vector2d): number {\n        const dx = this.x - vector.x\n        const dy = this.y - vector.y\n        return Math.sqrt(dx ** 2 + dy ** 2)\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y)\n    }\n\n    copy(): Vector2d {\n        return new Vector2d(this.x, this.y, this.z)\n    }\n\n    normalize() {\n        return this.divide(this.magnitude())\n    }\n\n    isEqual(vector: Vector2d): boolean {\n        return this.x === vector.x && \n        this.y === vector.y &&\n        this.z === vector.z\n    }\n\n    hasDifferentValues(vector: Vector2d): boolean {\n        return this.x !== vector.x || \n        this.y !== vector.y ||\n        this.z !== vector.z\n    }\n}\n\nexport class Vector2dZero extends Vector2d {\n    constructor() {\n        super(0, 0)\n    }\n}\n", "import { RpgCommonPlayer } from './Player'\nimport { Hit, HitType } from './Hit'\nimport { TiledObjectClass } from '@rpgjs/tiled'\nimport { PlayerType } from '@rpgjs/types'\nimport { Vector2d } from './Vector2d'\nimport { AbstractObject } from './AbstractObject'\n\nexport enum ShapePositioning {\n    Default = 'default',\n    Center = 'center'\n}\n\ntype ShapeObject = TiledObjectClass & {\n    onIn?(player: RpgCommonPlayer)\n    onOut?(player: RpgCommonPlayer)\n    fixEvent?: RpgCommonPlayer,\n    positioning?: ShapePositioning\n}\n\nexport class RpgShape extends TiledObjectClass {\n    _hitbox: any\n    type: string = HitType.Box\n    class: string = ''\n    /**\n    * Get/Set name\n    * @title name\n    * @prop { string } name\n    * @memberof Shape\n    */\n    name: string = ''\n    fixEvent?: RpgCommonPlayer\n    private playersIn: {\n        [playerid: string]: boolean\n    } = {}\n    private onIn: (player: RpgCommonPlayer) => void\n    private onOut: (player: RpgCommonPlayer) => void\n    clientContainer: any = null\n    /**\n    * Get/Set positioning\n    * @title positioning\n    * @prop { ShapePositioning } positioning\n    * @default default\n    * @memberof Shape\n    */\n    positioning?: ShapePositioning = ShapePositioning.Default\n    components: any[] = []\n\n    constructor(obj: ShapeObject) {\n        super()\n        Reflect.deleteProperty(obj, 'id')\n        this.set(obj)\n    }\n\n    private setPos(type: string, val: number) {\n        if (!this.hitbox.pos) return\n        if (this.isShapePosition()) {\n            this.hitbox[type] = val\n        }\n        else {\n            this.hitbox.pos[type] = val\n        }\n    }\n\n    get hasCollision(): boolean {\n        return this.getProperty<boolean, boolean>('collision', false)\n    }\n\n    // alias\n    get id(): any {\n        return this.name\n    }\n\n    get hitbox() {\n        if (this.fixEvent) {\n            this._hitbox.pos.x = this.fixEvent.position.x\n            this._hitbox.pos.y = this.fixEvent.position.y\n            switch (this.positioning) {\n                case ShapePositioning.Center:\n                    this._hitbox.pos.x -= this._hitbox.w / 2 - this.fixEvent.hitbox.w / 2\n                    this._hitbox.pos.y -= this._hitbox.h / 2 - this.fixEvent.hitbox.h / 2\n                    break\n            }\n        }\n        return this._hitbox\n    }\n\n    set hitbox(val) {\n        this._hitbox = val\n    }\n\n    /**\n    * Get/Set width\n    * @title width\n    * @prop { number } width\n    * @since 3.0.0-beta.5\n    * @memberof Shape\n    */\n    get width(): number {\n        return this.hitbox.w || 0\n    }\n\n    set width(val: number) {\n        this.setPos('w', val)\n    }\n\n    /**\n    * Get/Set height\n    * @title height\n    * @prop { number } height\n    * @since 3.0.0-beta.5\n    * @memberof Shape\n    */\n    get height(): number {\n        return this.hitbox.h || 0\n    }\n\n    set height(val: number) {\n        this.setPos('h', val)\n    }\n\n    /**\n    * Get/Set x\n    * @title x\n    * @prop { number } x\n    * @memberof Shape\n    */\n    get x(): number {\n        return this.hitbox.x || this.hitbox.pos.x\n    }\n\n    set x(val: number) {\n        this.setPos('x', val)\n    }\n\n    get z(): number | undefined {\n        return this.getProperty<number>('z')\n    }\n\n    /**\n    * Get/Set y\n    * @title y\n    * @prop { number } y\n    * @memberof Shape\n    */\n    get y(): number {\n        return this.hitbox.y || this.hitbox.pos.y\n    }\n\n    set y(val: number) {\n        this.setPos('y', val)\n    }\n\n    get position(): Vector2d {\n        return new Vector2d(this.x, this.y, this.z)\n    }\n\n    /**\n    * Get/Set properties\n\n    * @title Properties\n    * @prop { object } Properties\n    * @memberof Shape\n    */\n\n    isEvent(): boolean {\n        return this.type == PlayerType.Event\n    }\n\n    set(obj: ShapeObject) {\n        const hit = Hit.getHitbox(obj)\n        Object.assign(this, hit)\n        const objClone = { ...obj };\n        // Delete dimension and position because already managed and given by the hitbox above\n        ['width', 'height', 'x', 'y'].forEach((prop) => Reflect.deleteProperty(objClone, prop))\n        Object.assign(this, objClone)\n        const findPoint = (prop: string, isMin: boolean) => {\n            return this.hitbox.points.sort((a, b) => isMin ? a[prop] - b[prop] : b[prop] - a[prop])[0][prop]\n        }\n        if (this.type == HitType.Polygon) {\n            this.hitbox.minX = findPoint('x', true)\n            this.hitbox.maxX = findPoint('x', false)\n            this.hitbox.minY = findPoint('y', true)\n            this.hitbox.maxY = findPoint('y', false)\n        }\n        this.positioning = obj.positioning\n        this.fixEvent = obj.fixEvent\n        this.setComponent()\n    }\n\n    setComponent() {\n        const color = this.getProperty<string>('color')\n        const image = this.getProperty<string>('image')\n        if (color) {\n            this.components = [{\n                id: 'shape', value: {\n                    fill: color\n                }\n            }]\n            return\n        }\n        if (image) {\n            this.components = [{ id: 'image', value: image }]\n            return\n        }\n        if (this.text) {\n            this.components = [{ id: 'text', value: this.text.text }]\n            return\n        }\n        if (this.gid) {\n            this.components = [{ id: 'tile', value: this.gid }]\n            return\n        }\n    }\n\n    getType() {\n        return this.class || this.type\n    }\n\n    async in(player: AbstractObject): Promise<boolean> {\n        if (!this.playerIsIn(player)) {\n            this.playersIn[player.id] = true\n            player.inShapes[this.name] = this\n            await player.execMethod('onInShape', [this])\n            await this.fixEvent?.execMethod('onDetectInShape', [player, this], this.fixEvent)\n            await player.execMethod('onIn', [player], this)\n            return true\n        }\n        return false\n    }\n\n    async out(player: AbstractObject): Promise<boolean> {\n        if (this.playerIsIn(player)) {\n            delete this.playersIn[player.id]\n            delete player.inShapes[this.name]\n            await player.execMethod('onOutShape', [this])\n            await this.fixEvent?.execMethod('onDetectOutShape', [player, this], this.fixEvent)\n            await player.execMethod('onOut', [player], this)\n            return true\n        }\n        return false\n    }\n\n    /**\n     * Whether the player is in this shape\n     * \n     * @title Player is in this shape ?\n     * @method shape.playerIsIn(player)\n     * @returns {boolean}\n     * @memberof Shape\n     */\n    playerIsIn(player: AbstractObject): boolean {\n        return !!this.playersIn[player.id]\n    }\n\n    isShapePosition(): boolean {\n        return this.type !== HitType.Box && this.type !== HitType.Circle && this.type !== HitType.Polygon\n    }\n\n    /**\n      * Recover the player with the shape. You must have used the `attachShape()` method on the player\n      * \n      * @title Get Player Owner\n      * @method shape.getPlayerOwner()\n      * @returns {RpgPlayer | undefined}\n      * @memberof Shape\n      */\n    getPlayerOwner(): RpgCommonPlayer | undefined {\n        return this.fixEvent\n    }\n\n    /**\n     * We get the rectangle of a shape (box, circle and polygon). We use in the grid system to recover a shape.\n     * Generally we add a margin (size of a tile) to detect if the player enters or leaves a shape\n     * @param margin \n     * @returns { minX: number, minY: number, maxX: number, maxY: number }\n     */\n    getSizeBox(margin: number = 0): { minX: number, minY: number, maxX: number, maxY: number } {\n        if (this.type == HitType.Circle) {\n            const radius = this.hitbox.r\n            return {\n                minX: this.x - radius - margin,\n                maxX: this.x + radius + margin,\n                minY: this.y - radius - margin,\n                maxY: this.y + radius + margin\n            }\n        }\n        if (this.type == HitType.Polygon) {\n            return {\n                minX: this.x + this.hitbox.minX - margin,\n                maxX: this.x + this.hitbox.maxX + margin,\n                minY: this.y + this.hitbox.minY - margin,\n                maxY: this.y + this.hitbox.maxY + margin\n            }\n        }\n        return {\n            minX: this.x - margin,\n            maxX: this.x + this.width + margin,\n            minY: this.y - margin,\n            maxY: this.y + this.height + margin\n        }\n    }\n}", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\nexport interface TapObserver<T> extends Observer<T> {\n  subscribe: () => void;\n  unsubscribe: () => void;\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link Observable#subscribe}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n", "import { isPromise } from './Utils'\n\nexport class EventEmitter {\n    private listeners: {\n        [eventName: string]: Function[]\n    } = {}\n\n    private listenersOnce: {\n        [eventName: string]: Function\n    } = {}\n    \n    has(name: string): boolean {\n        return !!this.listeners[name] || !!this.listenersOnce[name]\n    }\n\n    once(name: string, cb: Function): EventEmitter {\n        this.listenersOnce[name] = cb\n        return this\n    }\n\n    on(name: string, cb: Function): EventEmitter {\n        if (!this.listeners[name]) this.listeners[name] = []\n        this.listeners[name].push(cb)\n        return this\n    }\n\n    emit(name: string, data?: any, rest: boolean = false): Promise<any[]> {\n        const ret: any = []\n        if (this.listeners[name]) {\n            for (let listener of this.listeners[name]) {\n                if (rest) ret.push(listener(...data))\n                else ret.push(listener(data))\n            }\n        }\n        if (this.listenersOnce[name]) {\n            if (rest) ret.push(this.listenersOnce[name](...data))\n            else ret.push(this.listenersOnce[name](data))\n        }\n        return Promise.all(ret.map(val => {\n            if (!isPromise(val)) {\n                return Promise.resolve(val)\n            }\n            return val\n        }))\n    }\n\n    off(name: string, listener?: Function) {\n        if (!listener) {\n            delete this.listeners[name]\n            delete this.listenersOnce[name]\n            return\n        }\n        if (this.listeners[name]) {\n            const index = this.listeners[name].indexOf(listener)\n            if (index !== -1) {\n                this.listeners[name].splice(index, 1)\n            }\n        }\n    }\n\n    clear() {\n        this.listeners = {}\n        this.listenersOnce = {}\n    }\n}", "import { EventEmitter } from './EventEmitter'\nimport { isArray } from './Utils'\n\ntype PluginFunction = (obj: any, options?: any) => void\ntype PluginSides = { client: null | PluginFunction, server:  null | PluginFunction }\nexport type Plugin = PluginSides | [PluginSides, any]\n\nexport enum HookServer {\n    Start = 'Server.Start',\n    Step = \"Server.Step\",\n    Auth = \"Server.Auth\",\n    PlayerConnected = 'Server.onConnected',\n    PlayerDisconnected = 'Server.onDisconnected',\n    AddMap = 'Server.AddMap',\n    AddEvent = 'Server.AddEvent',\n    AddWorldMaps = 'Server.AddWorldMaps',\n    AddDatabase = 'Server.AddDatabase',\n    PlayerInput = 'Server.onInput',\n    PlayerJoinMap = 'Server.onJoinMap',\n    PlayerLeaveMap = 'Server.onLeaveMap',\n    PlayerLevelUp = 'Server.onLevelUp',\n    PlayerDead = 'Server.onDead',\n    PlayerInShape = 'Server.onInShape',\n    PlayerOutShape = 'Server.onOutShape',\n    PlayerMove = 'Server.PlayerMove',\n    PlayerCanChangeMap = 'Server.PlayerCanChangeMap',\n    ScalabilityPlayerConnected = 'Server.ScalabilityPlayerConnected',\n    ScalabilityChangeServer = 'Server.ScalabilityChangeServer'\n}\n\nexport enum HookClient {\n    Start = 'Client.Start',\n    Step = 'Client.Step',\n    Connected = 'Client.Connected',\n    Disconnect = 'Client.Disconnect',\n    ConnectedError = 'Client.ConnectedError',\n\n    AddSpriteSheet = 'Client.AddSpriteSheet',\n    AddGui = 'Client.AddGui',\n    AddSound = 'Client.AddSound',\n    SendInput = 'Client.SendInput',\n\n    BeforeSceneLoading = 'Client.BeforeSceneLoading',\n    AfterSceneLoading = 'Client.AfterSceneLoading',\n    SceneMapLoading = 'Client.SceneMapLoading',\n    SceneAddSprite = 'Client.SceneAddSprite',\n    SceneOnChanges = 'Client.SceneOnChanges',\n    SceneDraw = 'Client.SceneDraw',\n    SceneRemoveSprite = 'Client.SceneRemoveSprite',\n\n    AddSprite = 'Client.AddSprite',\n    RemoveSprite = 'Client.RemoveSprite',\n    UpdateSprite = 'Client.UpdateSprite',\n    ChangesSprite = 'Client.ChangesSprite',\n    WindowResize = 'Client.WindowResize',\n    SpriteMove = 'Client.SpriteMove'\n}\n\n/**\n * @deprecated\n */\nexport class PluginSystem extends EventEmitter {\n    customHooks: {\n        [key: string]: boolean\n    } = {}\n\n    customHookExists(name: string): boolean {\n        return this.customHooks[name]\n    }\n    \n    private loadPlugins(plugins: Plugin[], shared: any, type: string) {\n        if (!plugins) return\n        for (let plugin of plugins) {\n            if (!plugin) continue\n            let plug: any = []\n            if (!isArray(plugin)) {\n                plug = [plugin]\n            }\n            else {\n                plug = plugin\n            }\n            const [side, options] = plug\n            if (!side[type]) continue\n            side[type]({\n                RpgPlugin,\n                ...shared\n            }, options)\n        }\n    }\n\n    loadServerPlugins(plugins, shared) {\n        this.loadPlugins(plugins, shared, 'server')\n    }\n\n    loadClientPlugins(plugins, shared) {\n        this.loadPlugins(plugins, shared, 'client')\n    }\n}\n\nexport const RpgPlugin = new PluginSystem()", "import { intersection, generateUID, toRadians, isInstanceOf, round } from './Utils'\nimport { Hit, HitType } from './Hit'\nimport { RpgShape } from './Shape'\nimport SAT from 'sat'\nimport { TileInfo, RpgCommonMap } from './Map'\nimport { RpgPlugin, HookServer } from './Plugin'\nimport { GameSide, RpgCommonGame } from './Game'\nimport { Vector2d, Vector2dZero } from './Vector2d'\nimport { Box } from './VirtualGrid'\nimport { Behavior, ClientMode, Direction, MoveClientMode, MoveTo, PlayerType, Position, PositionXY, Tick } from '@rpgjs/types'\nimport { from, map, mergeMap, Observable, Subject, tap, takeUntil, filter } from 'rxjs'\nimport { RpgCommonPlayer } from './Player'\n\nconst ACTIONS = { IDLE: 0, RUN: 1, ACTION: 2 }\n\ntype CollisionOptions = {\n    collision?: (event: AbstractObject) => void\n    near?: (event: AbstractObject) => void,\n    allSearch?: boolean\n}\n\nexport class AbstractObject {\n    map: string = ''\n    height: number = 0\n    width: number = 0\n    speed: number\n    direction: number = 3\n    moving: boolean = false\n\n    /*\n        Properties for move mode\n    */\n    checkCollision: boolean = true\n    clientModeMove: ClientMode = MoveClientMode.ByDirection\n    behavior: Behavior = Behavior.Direction\n\n    hitbox: SAT.Box\n\n    inShapes: {\n        [shapeId: string]: RpgShape\n    } = {}\n\n    disableVirtualGrid: boolean = false\n\n    private shapes: RpgShape[] = []\n    private _position: Vector2d\n    private _hitboxPos: SAT.Vector\n    private collisionWith: AbstractObject[] = []\n    private _collisionWithTiles: TileInfo[] = []\n    private _collisionWithShapes: RpgShape[] = []\n\n    private destroyMove$: Subject<boolean> = new Subject<boolean>()\n    // notifier for destroy\n    _destroy$: Subject<void> = new Subject()\n\n    static get ACTIONS() {\n        return ACTIONS\n    }\n\n    constructor(public gameEngine: RpgCommonGame, public playerId: string) {\n        this._hitboxPos = new SAT.Vector(0, 0)\n        this.setHitbox(this.width, this.height)\n        this.position = { x: 0, y: 0, z: 0 }\n    }\n\n    get id() {\n        return this.playerId\n    }\n\n    set id(str: string) {\n        this.playerId = str\n    }\n\n    updateInVirtualGrid() {\n        const map = this.mapInstance\n        if (map && !this.disableVirtualGrid /*&& this.gameEngine.isWorker TODO */) {\n            map.grid.insertInCells(this.id, this.getSizeMaxShape())\n        }\n    }\n\n    get canMove(): boolean {\n        return this.clientModeMove == MoveClientMode.ByDirection\n    }\n\n    set canMove(val: boolean) {\n        this.clientModeMove = val ? MoveClientMode.ByDirection : MoveClientMode.Disabled\n    }\n\n    /**\n     * Get/Set position x, y and z of player\n     * \n     * z is the depth layer. By default, its value is 0. Collisions and overlays will be performed with other objects on the same z-position. \n     * \n     * @title Get/Set position\n     * @prop { { x: number, y: number, z: number } } position\n     * @memberof Player\n     */\n    set position(val: Position | Vector2d) {\n        if (this.isDestroyed) return\n        const { x, y, z } = val\n        if (!isInstanceOf(val, Vector2d)) {\n            val = new Vector2d(x, y, z)\n        }\n        this._hitboxPos.x = x\n        this._hitboxPos.y = y\n        this._hitboxPos.z = z\n        this.updateInVirtualGrid()\n        this._position = new Proxy<Vector2d>(val as Vector2d, {\n            get: (target, prop: string) => target[prop],\n            set: (target, prop, value) => {\n                this._hitboxPos[prop] = value\n                target[prop] = value\n                this.updateInVirtualGrid()\n                return true\n            }\n        })\n    }\n\n    get position(): Vector2d {\n        return this._position\n    }\n\n    get worldPositionX(): number {\n        let x = this.position.x\n        if (this.mapInstance) {\n            x += this.mapInstance.worldX\n        }\n        return x\n    }\n\n    get worldPositionY(): number {\n        let y = this.position.y\n        if (this.mapInstance) {\n            y += this.mapInstance.worldY\n        }\n        return y\n    }\n\n    set posX(val) {\n        this.position.x = val\n    }\n\n    set posY(val) {\n        this.position.y = val\n    }\n\n    set posZ(val) {\n        this.position.z = val\n    }\n\n    /** @internal */\n    get mapInstance(): RpgCommonMap {\n        if (this.gameEngine.side == GameSide.Client) {\n            return RpgCommonMap.bufferClient.get(this.map)\n        }\n        return RpgCommonMap.buffer.get(this.map)\n    }\n\n    /**\n    * \n    * Recovers all the colliding shapes of the current player \n    * \n    * @title Get Collision of shapes\n    * @since 3.2.0\n    * @readonly\n    * @prop { RpgShape[] } shapes\n    * @memberof Player\n    * @memberof RpgSpriteLogic\n    */\n    get shapesCollision(): RpgShape[] {\n        return this._collisionWithShapes\n    }\n\n    /**\n    * \n    * Recovers all the colliding tiles of the current player \n    * \n    * @title Get Collision of tiles\n    * @since 3.0.0-beta.4\n    * @readonly\n    * @prop { TileInfo[] } tiles\n    * @memberof Player\n    * @memberof RpgSpriteLogic\n    */\n    get tilesCollision(): TileInfo[] {\n        return this._collisionWithTiles\n    }\n\n    /**\n     * \n     * Recovers all other players and events colliding with the current player's hitbox\n     * \n     * @title Get Collision of other players/events\n     * @since 3.0.0-beta.4\n     * @readonly\n     * @prop { (RpgPlayer | RpgEvent)[] } otherPlayersCollision\n     * @memberof Player\n     * @memberof RpgSpriteLogic\n     */\n    get otherPlayersCollision(): AbstractObject[] {\n        return this.collisionWith\n    }\n\n    /**\n     * Define the size of the player. You can set the hitbox for collisions\n     * \n     * ```ts\n     * player.setSizes({\n     *      width: 32,\n     *      height: 32\n     * })\n     * ```\n     * \n     * and with hitbox:\n     * \n     *  ```ts\n     * player.setSizes({\n     *      width: 32,\n     *      height: 32,\n     *      hitbox: {\n     *          width: 20,\n     *          height: 20\n     *      }\n     * })\n     * ```\n     * \n     * @title Set Sizes\n     * @method player.setSizes(key,value)\n     * @param { { width: number, height: number, hitbox?: { width: number, height: number } } } obj\n     * @deprecated\n     * @returns {void}\n     * @memberof Player\n     */\n    setSizes(obj: { width: number, height: number, hitbox?: { width: number, height: number } }): void {\n        this.width = obj.width\n        this.height = obj.height\n        if (obj.hitbox) {\n            this.hitbox = new SAT.Box(this._hitboxPos, obj.hitbox.width, obj.hitbox.height)\n        }\n    }\n\n    /**\n     * Define the hitbox of the player.\n     * \n     * ```ts\n     * player.setHitbox(20, 20)\n     * ```\n     * \n     * @title Set Hitbox\n     * @method player.setHitbox(width,height)\n     * @param {number} width\n     * @param {number} height\n     * @returns {void}\n     * @memberof Player\n     */\n    setHitbox(width: number, height: number): void {\n        const map = this.mapInstance\n        if (map) {\n            this.width = map.tileWidth\n            this.height = map.tileHeight\n        }\n        this.hitbox = new SAT.Box(this._hitboxPos, width, height)\n        this.wHitbox = width\n        this.hHitbox = height\n        this.updateInVirtualGrid()\n    }\n\n    set wHitbox(val) {\n        this.hitbox.w = val\n    }\n\n    set hHitbox(val) {\n        this.hitbox.h = val\n    }\n\n    get wHitbox() {\n        return this.hitbox.w\n    }\n\n    get hHitbox() {\n        return this.hitbox.h\n    }\n\n    private directionToAngle(direction: number): number {\n        const angle = (direction < 2 ? +direction + 2 : direction - 2) * 90\n        return toRadians(angle)\n    }\n\n    /** @internal */\n    defineNextPosition(direction: number, deltaTimeInt: number): Vector2d {\n        const angle = this.directionToAngle(direction)\n        const computePosition = (prop: string) => {\n            return this.position[prop] + this.speed * deltaTimeInt\n                * (Math.round(Math[prop == 'x' ? 'cos' : 'sin'](angle) * 100) / 100)\n        }\n        // If it's greater than 1, round value to reduces bandwidth\n        const x = this.speed < 1 ? computePosition('x') : round(computePosition('x'))\n        const y = this.speed < 1 ? computePosition('y') : round(computePosition('y'))\n        return new Vector2d(x, y, ~~this.position.z)\n    }\n\n    /** @internal */\n    setPosition({ x, y, tileX, tileY }, move = true) {\n        const { tileWidth, tileHeight } = this.mapInstance\n        if (x !== undefined) this.posX = x\n        if (y !== undefined) this.posY = y\n        if (tileX !== undefined) this.posX = tileX * tileWidth\n        if (tileY !== undefined) this.posY = tileY * tileHeight\n    }\n\n    /** @internal */\n    async triggerCollisionWith(type?: number) {\n        let doChanges = false\n        for (let collisionWith of this.collisionWith) {\n            if (collisionWith.isDestroyed) continue\n            if (collisionWith instanceof RpgShape) {\n                const goMap = collisionWith.getProperty<string>('go-map')\n                if (goMap && 'changeMap' in this) await this.changeMap(goMap)\n            }\n            else {\n                if (type == AbstractObject.ACTIONS.ACTION) {\n                    if ('onAction' in collisionWith) {\n                        await collisionWith.execMethod('onAction', [this])\n                        doChanges = true\n                    }\n                }\n                else if ('onPlayerTouch' in collisionWith) {\n                    await collisionWith.execMethod('onPlayerTouch', [this])\n                    doChanges = true\n                }\n            }\n        }\n        if (this.syncChanges && doChanges) this.syncChanges()\n    }\n\n    /** @internal */\n    zCollision(other: Pick<AbstractObject, 'height'> & { position: Pick<AbstractObject['position'], 'z'> }): boolean {\n        const z = this.position.z\n        const otherZ = other.position.z\n        return intersection([z, z + this.height], [otherZ, otherZ + other.height])\n    }\n\n    /** @internal */\n    moveByDirection(direction: Direction, deltaTimeInt: number): Promise<boolean> {\n        const nextPosition = this.defineNextPosition(direction, deltaTimeInt)\n        return this.move(nextPosition)\n    }\n\n    /**\n     * Retrieves a tile and checks if the player has a collision\n     * \n     * ```ts\n     * const tileInfo = player.getTile(20, 30)\n     * console.log(tileInfo)\n     * ```\n     * \n     * Example of returns: \n     * \n     * ```ts\n     *   {\n     *       tiles: [\n     *           {\n     *               id: 0,\n     *               terrain: [],\n     *               probability: null,\n     *               properties: [Object],\n     *               animations: [],\n     *               objectGroups: [],\n     *               image: null,\n     *               gid: 1\n     *           }\n     *       ],\n     *       hasCollision: false,\n     *       isOverlay: undefined,\n     *       objectGroups: [],\n     *       isClimbable: undefined,\n     *       tileIndex: 93\n     *   }\n     * ```\n     * \n     * @title Get Tile\n     * @since 3.0.0-beta.4\n     * @method player.getTile(x,y,z?)\n     * @param {number} x\n     * @param {number} y\n     * @param {number} [z]\n     * @returns {object}\n     * @memberof Player\n     * @memberof RpgSpriteLogic\n     */\n    getTile(x: number, y: number, z: number = 0, hitbox?: SAT.Box): TileInfo {\n        const map = this.mapInstance\n        return map.getTile(hitbox || this.hitbox, x, y, [z, this.height])\n    }\n\n    private async collisionObjects(\n        playerSizeBox: Box,\n        hitbox: SAT.Box,\n        triggers?: CollisionOptions\n    ): Promise<boolean> {\n        const map = this.mapInstance\n\n        if (!map) return true\n\n        const events: { [id: string]: AbstractObject } = this.gameEngine.world.getObjectsOfGroup(this.map, this)\n        const objects = map.grid.getObjectsByBox(playerSizeBox)\n        let boolFound = false\n\n        for (let objectId of objects) {\n            // client side: read \"object\" property\n            if (!events[objectId]) continue\n            const event = events[objectId]['object'] || events[objectId]\n\n            if (event.id == this.id) continue\n            if (!this.zCollision(event)) continue\n\n            const collided = Hit.testPolyCollision(HitType.Box, hitbox, event.hitbox)\n\n            for (let shape of this.shapes) {\n                await this.collisionWithShape(shape, event)\n            }\n\n            for (let shape of event.shapes) {\n                await event.collisionWithShape(shape, this)\n            }\n\n            if (triggers?.near) triggers.near(event)\n\n            if (collided) {\n                this.collisionWith.push(event)\n                this.triggerCollisionWith()\n                let throughOtherPlayer = false\n                if (event.type == PlayerType.Player && this.type == PlayerType.Player) {\n                    if (!(event.throughOtherPlayer || this.throughOtherPlayer)) {\n                        boolFound = true\n                        if (!triggers?.allSearch) return true\n                    }\n                    else {\n                        throughOtherPlayer = true\n                    }\n                }\n                if (!throughOtherPlayer && (!(event.through || this.through))) {\n                    boolFound = true\n                    if (!triggers?.allSearch) return true\n                }\n            }\n\n            if (boolFound) {\n                if (triggers?.collision) triggers.collision(event)\n            }\n        }\n\n        return boolFound\n    }\n\n    /** @internal */\n    private async collisionWithShape(shape: RpgShape, player: AbstractObject, nextPosition?: Vector2d): Promise<boolean> {\n        const collision = shape.hasCollision\n        const z = shape.z\n        if (shape.isShapePosition()) return false\n        if (z !== undefined && !this.zCollision({\n            position: { z },\n            height: this.mapInstance.zTileHeight\n        })) {\n            return false\n        }\n        let position: Vector2d\n        let { hitbox } = player\n        if (nextPosition) {\n            position = nextPosition.copy()\n        }\n        else {\n            position = player.position.copy()\n        }\n        const hitboxObj = Hit.createObjectHitbox(\n            position.x,\n            position.y,\n            position.z,\n            hitbox.w,\n            hitbox.h\n        )\n        let collided = Hit.testPolyCollision(shape.type, hitboxObj, shape.hitbox)\n        const playerPositionSaved = player.position.copy()\n\n        // Position can changed after enter or exit shape. So, we need to verify if position changed and update if z is changed\n        // If X or Y changed, we need to return true, it means that stop the current movement, and apply the new position\n        const verifyIfPositionChanged = (): boolean | undefined => {\n            if (this.position.z != playerPositionSaved.z && nextPosition) {\n                nextPosition.z = this.position.z\n            }\n            if (this.position.x != playerPositionSaved.x || this.position.y != playerPositionSaved.y) {\n                return true\n            }\n        }\n\n        if (collided) {\n            this._collisionWithShapes.push(shape)\n            // TODO: in shape after map load\n            if (!collision) await shape.in(player)\n            if (verifyIfPositionChanged() === true) return true\n            this.triggerCollisionWith()\n            if (collision) return true\n        }\n        else {\n            await shape.out(player)\n            if (verifyIfPositionChanged() === true) return true\n        }\n\n        return false\n    }\n\n    private async collisionShapes(playerSizeBox: Box, nextPosition?: Vector2d, triggers?: CollisionOptions): Promise<boolean> {\n        const map = this.mapInstance\n        if (!map) return false\n        const shapes: { [id: string]: RpgShape } = this.gameEngine.world.getShapesOfGroup(this.map)\n        const shapesInGrid = this.gameEngine.side == GameSide.Client\n            ? new Set(Object.keys(shapes))\n            : map.gridShapes.getObjectsByBox(playerSizeBox)\n        let boolFound = false\n\n        for (let shapeId of shapesInGrid) {\n            const shape = shapes[shapeId]['object'] || shapes[shapeId]\n            if (triggers?.near) triggers.near(shape)\n            const bool = await this.collisionWithShape(shape, this, nextPosition)\n            if (bool) {\n                if (triggers?.collision) triggers.collision(shape)\n                boolFound = true\n                if (!triggers?.allSearch) return true\n            }\n        }\n        return boolFound\n    }\n\n    async computeNextPositionByTarget(nextPosition: Vector2d, target: Vector2d): Promise<Vector2d> {\n        const pullDistance = target.distanceWith(nextPosition)\n        if (pullDistance <= this.speed) {\n            return nextPosition.set(target)\n        }\n        const pull = (target.copy().subtract(nextPosition)).multiply((1 / pullDistance))\n        const totalPush = new Vector2dZero()\n        let contenders = 0\n        const hitbox = Hit.createObjectHitbox(nextPosition.x, nextPosition.y, nextPosition.z, this.hitbox.w, this.hitbox.h)\n\n        const createObstacle = function (x: number, y: number, radius: number): Vector2d {\n            const obstacle = new Vector2d(x, y)\n            let push = nextPosition.copy().subtract(obstacle)\n            let distance = (nextPosition.distanceWith(obstacle) - radius) - radius;\n            if (distance < radius * 2 * 10) {\n                ++contenders\n                if (distance < 0.0001) distance = 0.0001 // avoid div by 0\n                let weight = 1 / distance;\n                totalPush.add(push.multiply(weight))\n            }\n            return obstacle\n        }\n\n        const area = this.mapInstance.tileheight * 2\n        this.mapInstance.gridTiles.getCells({\n            minX: nextPosition.x - area,\n            maxX: nextPosition.x + area,\n            minY: nextPosition.y - area,\n            maxY: nextPosition.y + area\n        }, (index) => {\n            if (index < 0) return\n            const pos = this.mapInstance.getTilePosition(index)\n            const hitbox = Hit.createObjectHitbox(pos.x, pos.y, nextPosition.z, this.hitbox.w, this.hitbox.h)\n            const radius = this.mapInstance.tilewidth / 2\n            const tile = this.getTile(pos.x, pos.y, nextPosition.z, hitbox)\n            if (tile.hasCollision) {\n                createObstacle(pos.x, pos.y, radius)\n            }\n        })\n\n\n        const playerSizeBox = this.getSizeMaxShape(nextPosition.x, nextPosition.y)\n\n        await this.collisionObjects(playerSizeBox, hitbox, {\n            collision: (event: AbstractObject) => {\n                const { x, y } = event.position\n                createObstacle(x, y, event.hitbox.w)\n            },\n            allSearch: true\n        })\n\n        await this.collisionShapes(playerSizeBox, nextPosition, {\n            collision: (shape) => {\n                const { x, y } = shape.position\n                createObstacle(x, y, shape.hitbox.w)\n            },\n            allSearch: true\n        })\n\n        pull\n            .multiply(Math.max(1, 4 * contenders))\n            .add(totalPush)\n            .normalize()\n\n        return nextPosition.add(pull.multiply(this.speed))\n    }\n\n    async isCollided(nextPosition: Vector2d, options: CollisionOptions = {}): Promise<boolean> {\n        this.collisionWith = []\n        this._collisionWithTiles = []\n        const prevMapId = this.map\n        const hitbox = Hit.createObjectHitbox(nextPosition.x, nextPosition.y, 0, this.hitbox.w, this.hitbox.h)\n        const boundingMap = this.mapInstance?.boundingMap(nextPosition, this.hitbox)\n        let collided = false\n\n        if (boundingMap?.bounding) {\n            this.position.set(nextPosition)\n            if (!options.allSearch) return true\n            else collided = true\n        }\n\n        const tileCollision = (x: number, y: number): boolean => {\n            const tile = this.getTile(x, y, nextPosition.z, hitbox)\n            if (tile.hasCollision) {\n                this._collisionWithTiles.push(tile)\n                return true\n            }\n            return false\n        }\n\n        if (\n            tileCollision(nextPosition.x, nextPosition.y) ||\n            tileCollision(nextPosition.x + this.hitbox.w, nextPosition.y) ||\n            tileCollision(nextPosition.x, nextPosition.y + this.hitbox.h) ||\n            tileCollision(nextPosition.x + this.hitbox.w, nextPosition.y + this.hitbox.h)\n        ) {\n            if (!options.allSearch) return true\n            else collided = true\n        }\n\n        if (this.autoChangeMap && this.type == PlayerType.Player) {\n            const changeMap = await this.autoChangeMap(nextPosition)\n            if (changeMap) {\n                return true\n            }\n        }\n\n        const playerSizeBox = this.getSizeMaxShape(nextPosition.x, nextPosition.y)\n\n        if (await this.collisionObjects(playerSizeBox, hitbox, options)) {\n            if (!options.allSearch) return true\n            else collided = true\n        }\n\n        if (await this.collisionShapes(playerSizeBox, nextPosition, options)) {\n            if (!options.allSearch) return true\n            else collided = true\n        }\n\n        // if there is a change of map after a move, the moves are not changed\n        if (prevMapId != this.map) {\n            return true\n        }\n\n        return collided\n    }\n\n    /**\n     * Attach a shape to the player (and allow interaction with it)\n     * \n     * ```ts\n     * import { ShapePositioning } from '@rpgjs/server'\n     * \n     * player.attachShape({\n     *      width: 100,\n     *      height: 100,\n     *      positioning: ShapePositioning.Center\n     * })\n     * ```\n     * \n     * @title Attach Shape\n     * @method player.attachShape(parameters)\n     * @param { { width: number, height: number, positioning?, name?, properties?: object } } obj\n     * - positioning: Indicate where the shape is placed.\n     * - properties: An object in order to retrieve information when interacting with the shape\n     * - name: The name of the shape\n     * @since 3.0.0-beta.3\n     * @returns {RpgShape}\n     * @memberof Player\n     */\n    attachShape(obj: {\n        width: number,\n        height: number\n        positioning?: string\n        name?: string\n        properties?: object\n    }): RpgShape {\n        obj.name = (obj.name || generateUID()) as string\n        const shape = new RpgShape({\n            ...obj,\n            fixEvent: this\n        } as any)\n        this.shapes.push(shape)\n        return shape\n    }\n\n    /**\n     * Returns all shapes assigned to this player\n     * \n     * @title Get Shapes\n     * @method player.getShapes()\n     * @returns {RpgShape[]}\n     * @since 3.0.0-beta.3\n     * @memberof Player\n     * @memberof RpgSpriteLogic\n     */\n    getShapes(): RpgShape[] {\n        return this.shapes\n    }\n\n    private autoChangeDirection(nextPosition: Vector2d) {\n        const { x, y } = this.position\n        const { x: nx, y: ny } = nextPosition\n        const diff = Math.abs(x - nx) > Math.abs(y - ny)\n        if (diff) {\n            if (nx > x) {\n                this.changeDirection(Direction.Right)\n            }\n            else {\n                this.changeDirection(Direction.Left)\n            }\n        }\n        else {\n            if (ny > y) {\n                this.changeDirection(Direction.Down)\n            }\n            else {\n                this.changeDirection(Direction.Up)\n            }\n        }\n    }\n\n    // @internal\n    /**\n     * We need to know if the event is deleted. Because when the event is deleted, you don't update the positions and you don't send the positions back to the client.\n     */\n    get isDestroyed(): boolean {\n        return !!this._destroy$['_closed']\n    }\n\n    /**\n    * Stops the movement of the player who moves towards his target\n    * \n    * @title Stop Move To\n    * @method player.stopMoveTo()\n    * @returns {void}\n    * @since 3.2.0\n    * @memberof MoveManager\n    */\n    stopMoveTo() {\n        if (this.destroyMove$.closed) return\n        this.moving = false\n        this.destroyMove$.next(true)\n        this.destroyMove$.unsubscribe()\n    }\n\n    private _lookToward(player: Vector2d, otherPlayer: Vector2d): Direction {\n        const { x, y } = player;\n        const { x: ox, y: oy } = otherPlayer;\n    \n        // Calculate the differences between the x and y coordinates.\n        const dx = ox - x;\n        const dy = oy - y;\n    \n        // Determine the primary direction based on the relative magnitude\n        // of the x and y differences.\n        if (Math.abs(dx) > Math.abs(dy)) {\n            if (dx > 0) {\n                return Direction.Right;\n            } else {\n                return Direction.Left;\n            }\n        } else {\n            if (dy > 0) {\n                return Direction.Down;\n            } else {\n                return Direction.Up;\n            }\n        }\n    }\n\n    _moveTo(tick$: Observable<Tick>, positionTarget: AbstractObject | RpgShape | PositionXY, options: MoveTo = {}): Observable<Vector2d> {\n        let i = 0\n        let count = 0\n        const lastPositions: Vector2d[] = []\n        this.stopMoveTo()\n        this.moving = true\n        this.destroyMove$ = new Subject()\n        const { infinite, onStuck, onComplete } = options\n        const getPosition = (): Vector2d => {\n            let pos\n            if ('x' in positionTarget) {\n                pos = new Vector2d(positionTarget.x, positionTarget.y)\n            }\n            else {\n                pos = positionTarget.position\n            }\n            return pos\n        }\n        return tick$\n            .pipe(\n                takeUntil(this.destroyMove$),\n                takeUntil(this._destroy$),\n                mergeMap(() => from(this.computeNextPositionByTarget(this.position.copy(), getPosition()))),\n                filter(() => {\n                    return this.isDestroyed === false\n                }),\n                map((position) => {\n                    this.autoChangeDirection(position)\n                    return this.position.set(position)\n                }),\n                tap((position: Vector2d) => {\n                    lastPositions[i] = position.copy()\n                    i++\n                    count++\n                    if (i >= 3) {\n                        i = 0\n                    }\n                    if (\n                        lastPositions[2] &&\n                        (\n                            lastPositions[0].isEqual(lastPositions[2]) ||\n                            lastPositions[1].isEqual(lastPositions[2]) ||\n                            lastPositions[0].isEqual(lastPositions[1])\n                        )\n                    ) {\n                        this.direction = this._lookToward(this.position, getPosition())\n                        onStuck?.(count)\n                        this.moving = false\n                    }\n                    else if (this.position.isEqual(getPosition())) {\n                        onComplete?.()\n                        if (!infinite) {\n                            this.stopMoveTo()\n                        }\n                    }\n                    else {\n                        count = 0\n                        this.moving = true\n                    }\n                })\n            )\n    }\n\n    /** @internal */\n    async move(nextPosition: Vector2d): Promise<boolean> {\n        this.autoChangeDirection(nextPosition)\n\n        const notCollided = !(await this.isCollided(nextPosition))\n\n        if ((notCollided || !this.checkCollision) && !this.isDestroyed) {\n            this.position = nextPosition.copy()\n            await RpgPlugin.emit(HookServer.PlayerMove, this)\n        }\n\n        return true\n    }\n\n    /**\n     * Retrieves all shapes where the player is located\n     * \n     * @title Get In-Shapes\n     * @method player.getInShapes()\n     * @returns {RpgShape[]}\n     * @since 3.0.0-beta.3\n     * @memberof Player\n     */\n    getInShapes(): RpgShape[] {\n        return Object.values(this.inShapes)\n    }\n\n    /**\n    * Get the current direction.\n    * \n    * ```ts\n    * player.getDirection()\n    * ```\n    * \n    * @title Get Direction\n    * @method player.getDirection()\n    * @returns {Direction | number} direction\n    * @memberof Player\n    */\n    getDirection(direction?: Direction | number): string | number {\n        return direction || this.direction\n    }\n\n    /**\n    * Changes the player's direction\n    * \n    * ```ts\n    * import { Direction } from '@rpgjs/server'\n    * \n    * player.changeDirection(Direction.Left)\n    * ```\n    * \n    * @title Change direction\n    * @method player.changeDirection(direction)\n    * @param {Direction} direction\n    * @enum {string}\n    * \n    * Direction.Left | left\n    * Direction.Right | right\n    * Direction.Up | up\n    * Direction.Down | down\n    * @returns {boolean} the direction has changed\n    * @memberof Player\n    */\n    changeDirection(direction: Direction): boolean {\n        const dir = +this.getDirection(direction)\n        if (dir === undefined) return false\n        this.direction = dir\n        return true\n    }\n\n    /**\n     * Gets the necessary number of pixels to allow the player to cross a tile. \n     * This is the ratio between the height or width of the tile and the speed of the player.\n     */\n    get nbPixelInTile(): any {\n        const direction = this.getDirection()\n        switch (direction) {\n            case Direction.Down:\n            case Direction.Up:\n                return Math.floor(this.mapInstance.tileHeight / this.speed)\n            case Direction.Left:\n            case Direction.Right:\n                return Math.floor(this.mapInstance.tileWidth / this.speed)\n            default:\n                return NaN\n        }\n    }\n\n    getSizeMaxShape(x?: number, y?: number): Box {\n        const _x = x || this.position.x\n        const _y = y || this.position.y\n        let minX = _x\n        let minY = _y\n        let maxX = _x + this.wHitbox\n        let maxY = _y + this.hHitbox\n        const shapes = this.getShapes()\n        for (let shape of shapes) {\n            if (shape.x < minX) minX = shape.x\n            if (shape.y < minY) minY = shape.y\n            const shapeMaxX = shape.x + shape.width\n            const shapeMaxY = shape.y + shape.height\n            if (shapeMaxX > maxX) maxX = shapeMaxX\n            if (shapeMaxY > maxY) maxY = shapeMaxY\n        }\n        return {\n            minX,\n            minY,\n            maxX,\n            maxY\n        }\n    }\n\n    /** @internal */\n    async execMethod(methodName: string, methodData?, instance?) { }\n}\n\nexport interface AbstractObject {\n    readonly type: string\n    through: boolean\n    throughOtherPlayer: boolean\n    autoChangeMap?(nextPosition: Position): Promise<boolean>\n    execMethod(methodName: string, methodData?, instance?)\n    changeMap(mapName: string)\n    syncChanges()\n}", "export type Box = { minX: number, minY: number, maxX: number, maxY: number }\n\nexport class VirtualGrid {\n    private cells: Map<number, Set<string>> = new Map()\n    private inverseCells: Map<string, Set<number>> = new Map()\n\n    constructor(private nbCellWidth: number, private cellWidth: number, private cellHeight: number) {}\n\n    zoom(nbCell: number): VirtualGrid {\n        this.nbCellWidth = Math.ceil(this.nbCellWidth / nbCell)\n        this.cellWidth *= nbCell\n        this.cellHeight *= nbCell\n        return this\n    }\n\n    getCellIndex(x: number, y: number) {\n        return this.nbCellWidth * Math.floor(y / this.cellHeight) + Math.floor(x / this.cellWidth) \n    }\n\n    getCells(box: Box, cb: (index: number) => void) {\n        const {\n            minX,\n            minY,\n            maxX,\n            maxY\n        } = box\n        const topLeft = this.getCellIndex(minX, minY)\n        const topRight = this.getCellIndex(maxX, minY)\n        const bottomLeft = this.getCellIndex(minX, maxY)\n        const nbLines = (bottomLeft - topLeft) / this.nbCellWidth + 1\n        for (let j=0 ; j < nbLines ; j++) {\n            for (let i = topLeft ; i <= topRight ; i++) {\n                const index = i + (j * this.nbCellWidth)\n                cb(index)\n            }\n        }\n    }\n\n    getObjectsByBox(box: Box): Set<string> {\n        let objects: string[] = []\n        this.getCells(box, (index) => {\n            objects = [...objects, ...this.cells.get(index) || []]\n        })\n        return new Set(objects)\n    }\n\n    getObjectsById(id: string): Set<string> {\n        let objects: string[] = []\n        const cells = this.inverseCells.get(id)\n        cells?.forEach((index) => {\n            objects = [...objects, ...this.cells.get(index) || []]\n        })\n        return new Set(objects)\n    }\n\n    clearObjectInCells(id: string) {\n        if (this.inverseCells.has(id)) {\n            this.inverseCells.get(id)?.forEach((cellIndex: number) => {\n                this.cells.get(cellIndex)?.delete(id)\n            })\n            this.inverseCells.delete(id)\n        }\n    }\n\n    insertInCells(id: string, box: { minX: number, minY: number, maxX: number, maxY: number }) {\n        this.clearObjectInCells(id)\n        const cells: Set<number> = new Set()\n        this.getCells(box, (index) => {\n            cells.add(index)\n            const memoryCells = this.cells.get(index)\n            if (!memoryCells) {\n                this.cells.set(index, new Set())\n            }\n            this.cells.get(index)?.add(id)\n        })\n        this.inverseCells.set(id, cells)\n    }\n}", "import { HitObject } from './Hit'\nimport SAT from 'sat'\nimport Utils, { random, intersection, generateUID, isString } from './Utils'\nimport { RpgShape } from './Shape'\nimport { Hit } from './Hit'\nimport { VirtualGrid } from './VirtualGrid'\nimport { RpgCommonWorldMaps } from './WorldMaps'\nimport { TiledLayer, TiledLayerType, TiledMap, Layer, Tileset, Tile, TiledObject, TiledObjectClass, MapClass } from '@rpgjs/tiled'\nimport { Vector2d } from './Vector2d'\nimport { AbstractObject } from './AbstractObject'\nimport { RpgCommonGame } from './Game'\nimport { Observable, map, Subject, takeUntil, mergeMap, from, filter } from 'rxjs'\nimport { HitBox, MovingHitbox, Tick } from '@rpgjs/types'\n\nconst buffer = new Map()\nconst bufferClient = new Map()\n\nexport interface TileInfo {\n    tiles: Tile[]\n    hasCollision: boolean | undefined\n    isClimbable?: boolean | undefined\n    isOverlay: boolean | undefined\n    objectGroups: TiledObjectClass[],\n    tileIndex: number\n}\n\nexport interface LayerInfo {\n    type: string,\n    name: string,\n    opacity: number,\n    visible: boolean,\n    properties: any,\n    objects: HitObject[]\n    tiles: Tile[]\n}\n\n\nexport class RpgCommonMap extends MapClass {\n    /** \n     * @title map id\n     * @readonly\n     * @prop {string} [id]\n     * @memberof Map\n     * */\n     readonly id: string\n\n    grid: VirtualGrid\n    gridShapes: VirtualGrid\n    gridTiles: VirtualGrid\n\n    get tileWidth() {\n        return this.tilewidth\n    }\n\n    get tileHeight() {\n        return this.tileheight\n    }\n    \n    /** \n     * @title Layers of map\n     * @prop {object[]} [layers]\n     * @readonly\n     * @memberof Map\n     * @memberof RpgSceneMap\n     * */\n    \n    /** @internal */\n    shapes: {\n        [shapeName: string]: RpgShape\n    } = {}\n\n    private worldMapParent: RpgCommonWorldMaps | undefined\n\n    /** \n     * Retrieves the X position of the map in the world (0 if no world assigned)\n     * \n     * @title World X Position\n     * @prop {number} [worldX]\n     * @readonly\n     * @since 3.0.0-beta.8\n     * @memberof Map\n     * */\n    get worldX() {\n        return this.getInWorldMaps()?.getMapInfo(this.id)?.x || 0\n    }\n\n    /** \n     * Retrieves the Y position of the map in the world (0 if no world assigned)\n     * \n     * @title World Y Position\n     * @prop {number} [worldY]\n     * @readonly\n     * @since 3.0.0-beta.8\n     * @memberof Map\n     * */\n    get worldY() {\n        return this.getInWorldMaps()?.getMapInfo(this.id)?.y || 0\n    }\n\n    /**\n     * Memorize the maps so you don't have to make a new request or open a file each time you load a map\n     */\n    static get buffer() {\n        return buffer\n    }\n\n    /**\n     * In RPG mode, to avoid confusion with buffer, we have a new variable to memorize the maps\n     */\n    static get bufferClient() {\n        return bufferClient\n    }\n\n    load(data: TiledMap) {\n        super.load(data)\n        this.gridTiles = new VirtualGrid(this.width, this.tileWidth, this.tileHeight)\n        this.grid = new VirtualGrid(this.width, this.tileWidth, this.tileHeight).zoom(10)\n        this.gridShapes = new VirtualGrid(this.width, this.tileWidth, this.tileHeight).zoom(20)\n    }\n\n    /**\n     * Create a shape dynamically on the map\n     * \n     * Object:\n     *  - (number) x: Position X\n     *  - (number) y: Position Y\n     *  - (number) width: Width\n     *  - (number) height: Height\n     *  - (object) properties (optionnal): \n     *      - (number) z: Position Z\n     *      - (hexadecimal) color: Color (shared with client)\n     *      - (boolean) collision\n     *      - You can your own properties\n     * \n     * @title Create Shape\n     * @since 3.0.0-beta.3\n     * @method map.createShape(obj)\n     * @param {object} obj\n     * @returns {RpgShape}\n     * @memberof Map\n     */\n    createShape(obj: HitObject): RpgShape {\n        const id = obj.name = (obj.name || generateUID()) as string\n        const shape = new RpgShape(obj as TiledObjectClass)\n        this.shapes[id] = shape\n        if (!shape.isShapePosition()) {\n            this.gridShapes.insertInCells(id, shape.getSizeBox(this.tileWidth))\n        }\n        // trick to sync with client\n        return this.shapes[id]\n    }\n\n    /**\n     * Delete a shape\n     * \n     * @title Delete Shape\n     * @method map.removeShape(name)\n     * @param {string} name Name of shape\n     * @returns {void}\n     * @memberof Map\n     */\n    removeShape(name: string) {\n        // TODO: out players after delete shape\n        //this.shapes = this.shapes.filter(shape => shape.name != name)\n        delete this.shapes[name]\n    }\n\n    clearShapes() {\n        this.shapes = {}\n    }\n\n    /**\n     * Return all shapes on the map\n     * \n     * @title Get Shapes\n     * @method map.getShapes()\n     * @returns {RpgShape[]}\n     * @memberof Map\n     * @memberof RpgSceneMap\n     */\n    getShapes(): RpgShape[] {\n        return Object.values(this.shapes)\n    }\n\n    /**\n     * Returns a shape by its name. Returns undefined is nothing is found\n     * \n     * @title Get Shape by name\n     * @method map.getShape(name)\n     * @param {string} name Name of shape\n     * @returns {RpgShape[] | undefined}\n     * @memberof Map\n     * @memberof RpgSceneMap\n     */\n    getShape(name: string): RpgShape | undefined {\n        return this.getShapes().find(shape => shape.name == name)\n    }\n    \n    getPositionByShape(filter: (shape: RpgShape) => {}): { x: number, y: number, z: number } | null {\n        const startsFind = this.getShapes().filter(filter)\n        if (startsFind.length) {\n            const start = startsFind[random(0, startsFind.length-1)]\n            return { x: start.hitbox.x, y: start.hitbox.y, z: start.properties.z * this.zTileHeight || 0 }\n        }\n        return null\n    }\n\n    /**\n     * Get tile and verify collision with hitbox\n     * @param hitbox \n     * @param x \n     * @param y \n     * @param z \n     * @returns TileInfo\n     */\n    getTile(hitbox, x: number, y: number, z: [number, number] = [0, 0]): TileInfo {\n        const tile = {...this.getTileByPosition(x, y, z)}\n        const tilePos = this.getTileOriginPosition(x, y)\n        if (tile.objectGroups) {        \n            for (let object of tile.objectGroups) {\n                const hit = Hit.getHitbox(object, {\n                    x: tilePos.x,\n                    y: tilePos.y\n                })\n                if (hit.type) {\n                    const collided = Hit.testPolyCollision(hit.type, hit.hitbox, hitbox)\n                    if (collided) {\n                        tile.hasCollision = true\n                    }\n                }\n            }\n        }\n        return tile\n    }\n\n    /**\n     * Assign the map to a world\n\n     * @title Assign the map to a world\n     * @method map.setInWorldMaps(name)\n     * @param {RpgWorldMaps} worldMap world maps\n     * @since 3.0.0-beta.8\n     * @memberof Map\n     */\n    setInWorldMaps(worldMap: RpgCommonWorldMaps) {\n        this.worldMapParent = worldMap\n    }\n\n    /**\n     * Remove this map from the world\n     * @title Remove this map from the world\n     * @method map.removeFromWorldMaps()\n     * @returns {boolean | undefined}\n     * @since 3.0.0-beta.8\n     * @memberof Map\n     */\n    removeFromWorldMaps(): boolean | undefined {\n        return this.worldMapParent?.removeMap(this.id)\n    }\n\n     /**\n     * Recover the world attached to this map (`undefined` if no world attached)\n\n     * @title Get attached World\n     * @method map.getInWorldMaps()\n     * @return {RpgCommonWorldMaps | undefined}\n     * @since 3.0.0-beta.8\n     * @memberof Map\n     */\n    getInWorldMaps(): RpgCommonWorldMaps | undefined {\n        return this.worldMapParent\n    }\n\n    boundingMap(nextPosition: Vector2d, hitbox: SAT): { bounding: boolean, nextPosition: Vector2d } | null {\n        let bounding = false\n        if (nextPosition.x < 0) {\n            nextPosition.x = 0\n            bounding = true\n        }\n        else if (nextPosition.y < 0) {\n            nextPosition.y = 0\n            bounding = true\n        }\n        else if (nextPosition.x > this.widthPx - hitbox.w) {\n            nextPosition.x = this.widthPx - hitbox.w\n            bounding = true\n        }\n        else if (nextPosition.y > this.heightPx - hitbox.h) {\n            nextPosition.y = this.heightPx - hitbox.h\n            bounding = true\n        }\n        return {\n            bounding,\n            nextPosition\n        }\n    }\n\n    _createMovingHitbox<T extends RpgCommonGame>(\n        gameEngine: T,\n        tick$: Observable<Tick>,\n        mapId: string,\n        hitboxes: Pick<HitBox, 'width' | 'height' | 'x' | 'y'>[],\n        options: MovingHitbox = {}\n    ): Observable<AbstractObject> {\n        const object = new AbstractObject(gameEngine, Utils.generateUID())\n        object.disableVirtualGrid = true\n        object.map = mapId\n        object.speed = options.speed ?? 1\n        let i = 0\n        let frame = 0\n        const destroyHitbox$ = new Subject<AbstractObject>()\n        return tick$.pipe(\n            takeUntil(destroyHitbox$),\n            filter(() => {\n                frame++\n                return frame % object.speed == 0\n            }),\n            map(() => {\n                const hitbox = hitboxes[i]\n                if (!hitbox) {\n                    destroyHitbox$.next(object)\n                    destroyHitbox$.complete()\n                    return object\n                }\n                object.position.x = hitbox.x\n                object.position.y = hitbox.y\n                object.setHitbox(hitbox.width, hitbox.height)\n                i++\n                return object\n            }),\n            mergeMap((object) => from(object.isCollided(object.position, { allSearch: true }))),\n            map(() => object)\n        )\n    }\n}\n", "import workerpool from 'workerpool'\n\nexport class GameWorker {\n    pool: any\n\n    constructor(private options = {}) {\n        //this.pool = workerpool.pool(__dirname + '/workers/move.js', options)\n    }\n\n    load() {\n        return this\n    } \n\n    call(methodName: string, data: any) {\n       return this.pool.exec(methodName, [data])\n    }\n}", "import Utils, { generateUID, isClass } from './Utils'\nimport { EventEmitter } from './EventEmitter'\nimport { RpgCommonPlayer } from './Player'\nimport { constructor, Control, Controls, Direction } from '@rpgjs/types'\nimport { RpgPlugin } from './Plugin'\nimport { GameWorker } from './Worker'\nimport { HitObject } from './Hit'\nimport { RpgShape } from './Shape'\nimport { TiledObjectClass } from '@rpgjs/tiled'\nimport { InjectContext } from './Inject'\n\nexport enum GameSide {\n    Server = 'server',\n    Client = 'client',\n    Worker = 'worker'\n}\n\nexport class RpgCommonGame extends EventEmitter {\n    events: any\n    world: any\n    side: GameSide\n\n    initialize(side: GameSide) {\n        this.side = side\n        this.events = {} // events for all player in map\n    }\n\n    get isWorker() {\n        return this.side == 'worker'\n    }\n\n    start(world) {\n        this.world = world\n    }\n\n    createWorkers(options: any) {\n        return new GameWorker(options)\n    }\n\n    addObject(_class, playerId?: string) {\n        let event\n        if (!playerId) playerId = generateUID()\n        if (isClass(_class)) {\n            if (this.side == GameSide.Client) {\n                event = new _class(this, playerId)\n            }\n            else {\n                event = new _class(playerId)\n            }\n        }\n        else {\n            event = _class\n        }\n        return event\n    }\n\n    addPlayer(playerClass, playerId?: string) {\n        const player = this.addObject(playerClass, playerId)\n        return player\n    }\n\n    addEvent<T>(eventClass: constructor<T>, eventId?: string): T {\n        const event = this.addObject(eventClass, eventId)\n        return event\n    }\n\n    addShape(obj: HitObject): RpgShape {\n        const id = obj.name = (obj.name || generateUID()) as string\n        const shape = new RpgShape(obj as TiledObjectClass)\n        shape.name = id\n        return shape\n    }\n\n    async processInput<RpgPlayer extends RpgCommonPlayer>(playerId: string, controls?: Controls): Promise<{\n        player: RpgPlayer,\n        inputs: string[]\n    }> {\n        const player: RpgPlayer = this.world.getObject(playerId)\n        const inputs: string[] = []\n\n        if (!player) return {\n            player,\n            inputs\n        }\n\n        const routesMove: any = []\n\n        while (player.pendingMove.length > 0) {\n            const inputData = player.pendingMove.shift()\n            \n            let { input, deltaTimeInt } = inputData as any\n            let moving = false\n\n            if (controls && controls[input]) {\n                const control = controls[input]\n                const now = Date.now()\n                const inputTime = player.inputsTimestamp[input] || 0\n\n                if (inputTime >= now) {\n                    continue\n                }\n\n                if (control.delay) {\n                    let duration: number\n                    let otherControls: (string | Control)[] = []\n\n                    if (typeof control.delay == 'number') {\n                        duration = control.delay\n                    }\n                    else {\n                        duration  = control.delay.duration\n                        if (control.delay.otherControls) {\n                            otherControls = control.delay.otherControls\n                        }\n                    }\n\n                    player.inputsTimestamp[input] = now + duration\n\n                    for (let control of otherControls) {\n                        player.inputsTimestamp[control] = now + duration\n                    }\n                }                \n            }\n            \n            if (input == Control.Action) {\n                await player.triggerCollisionWith(RpgCommonPlayer.ACTIONS.ACTION)\n            }\n            else if (\n                input == Direction.Left ||\n                input == Direction.Right ||\n                input == Direction.Up ||\n                input == Direction.Down\n            ) {\n                player.moving = true\n                moving = true\n                const isMove = await player.moveByDirection(+input, deltaTimeInt || 1)\n                if (isMove) {\n                    routesMove.push(inputData)\n                }\n            }\n            // TODO, is Worker\n            // verify if is server because, rpg mode causes a bug (see #184)\n            if (this.side == GameSide.Server) {\n                await RpgPlugin.emit('Server.onInput', [player, {\n                    ...inputData,\n                    moving\n                }], true)\n            }\n\n            inputs.push(input)\n        }\n\n\n        return {\n            player,\n            inputs\n        }\n    }\n}\n", "import { PendingMove } from '@rpgjs/types'\nimport { AbstractObject } from './AbstractObject'\n\nexport const LiteralDirection = {\n    1: 'up',\n    2: 'right',\n    3: 'down',\n    4: 'left'\n}\n\nexport class RpgCommonPlayer extends AbstractObject {\n    events: any[] = []\n    layerName: string = ''\n    data: any = {}\n    pendingMove: PendingMove = []\n    inputsTimestamp: {\n        [inputName: string]: number\n    } = {}\n\n    /** \n    * Display/Hide the GUI attached to this sprite\n    * \n    * @prop {boolean} guiDisplay\n    * @since 3.0.0-beta.5\n    * @memberof RpgSprite\n    * */\n    guiDisplay: boolean\n}\n\nexport default AbstractObject", " /** \n * \n * Pre-made GUIs already exist. For example, the command `player.showText()` displays the rpg-dialog component. It is up to you to customize the component or take advantage of the `@rpgjs/default-gui` module which already contains ready-made components\n * \n * @title Prebuilt GUI\n * @enum {string}\n * \n * PrebuiltGui.Dialog | rpg-dialog\n * PrebuiltGui.MainMenu | rpg-main-menu\n * PrebuiltGui.Shop | rpg-shop\n * PrebuiltGui.Disconnect | rpg-disconnect\n * PrebuiltGui.Gameover | rpg-gameover\n * PrebuiltGui.Save | rpg-save\n * PrebuiltGui.Controls | rpg-controls\n * PrebuiltGui.Notification | rpg-notification\n * @memberof PrebuiltGui\n * */\nexport enum PrebuiltGui {\n    Dialog = 'rpg-dialog',\n    MainMenu = 'rpg-main-menu',\n    Shop = 'rpg-shop',\n    Disconnect = 'rpg-disconnect',\n    Gameover = 'rpg-gameover',\n    Save = 'rpg-save',\n    Controls = 'rpg-controls',\n    Notification = 'rpg-notification'\n}", "export function log(message) {\n    return new Error(`[RPGJS] - ${message}`)\n}\n\nexport function warning(...message) {\n    console.warn('[RPGJS Warning]', ...message)\n}", "import { RpgPlugin, HookServer, HookClient } from './Plugin'\nimport { isArray, isClass, isFunction, isPromise } from './Utils'\nimport { warning } from './Logger'\n\nenum Side {\n    Server = 'server',\n    Client = 'client'\n}\n\ntype ModuleSide = {\n    client?: any,\n    server?: any\n}\n\nexport type ModuleType = ModuleSide | [ModuleSide, {\n    client?: any,\n    server?: any\n}]\n\nexport function RpgModule<T>(options: T) {\n    return (target) => {\n        if ((options as any).hooks) {\n            target.hooks = (options as any).hooks\n        }\n        for (let key in options) {\n            target.prototype[key] = options[key]\n        }\n    }\n}\n\nexport async function loadModules(modules, obj, middleware?: Function): Promise<{ playerProps: any }> {\n    const { side, relations } = obj\n    let playerProps = {}\n    let hooks = {}\n\n    const getModuleClass = (module) => {\n        if (!module) return null\n        let plug: any = []\n        if (!isArray(module)) {\n            plug = [module]\n        }\n        else {\n            plug = module\n        }\n        const [moduleClassSides, options] = plug\n        const moduleClass = moduleClassSides[side]\n        if (!moduleClass) return null\n        return {\n            moduleClass,\n            options\n        }\n    }\n\n    for (let module of modules) {\n        const moduleObject = getModuleClass(module)\n        if (!moduleObject) continue\n        const { moduleClass } = moduleObject\n        if (moduleClass.hooks) {\n            for (let key in moduleClass.hooks) {\n                if (!hooks[key]) hooks[key] = []\n                hooks[key] = [\n                    ...hooks[key],\n                    ...moduleClass.hooks[key]\n                ]\n            }\n        }\n    }\n\n    for (let module of modules) {\n        const moduleObject = getModuleClass(module)\n        if (!moduleObject) continue\n        const { moduleClass, options } = moduleObject\n        let mod\n        if (options && side == Side.Client && options[Side.Server]) {\n            warning(`Data that may be sensitive (normally visible only on the server side) are made optional and visible on the client side.\\nInstead, import the configuration with the server! flag into an import. Example: \\n\\nimport config from 'server!./config\\n\\n'`, options[Side.Server])\n        }\n        if (options && !isClass(moduleClass) && isFunction(moduleClass)) {\n            mod = new (moduleClass(options[side]))()\n        }\n        else if (isClass(moduleClass)) {\n            mod = new moduleClass()\n        }\n        else {\n            mod = moduleClass\n        }\n        if (middleware) {\n            mod = middleware(mod)\n            if (isPromise(mod)) {\n                mod = await mod\n            }\n        }\n        const { imports, maps, spritesheets, sounds, gui, scenes, engine, database, worldMaps, scalability, events } = mod\n        if (imports) {\n            await loadModules(imports, obj)\n        }\n        if (maps) {\n            RpgPlugin.on(HookServer.AddMap, () => maps)\n        }\n        if (events) {\n            RpgPlugin.on(HookServer.AddEvent, () => events)\n        }\n        if (worldMaps) {\n            RpgPlugin.on(HookServer.AddWorldMaps, () => worldMaps)\n        }\n        if (database) {\n            RpgPlugin.on(HookServer.AddDatabase, () => database)\n        }\n        if (spritesheets) {\n            RpgPlugin.on(HookClient.AddSpriteSheet, () => spritesheets)\n        }\n        if (sounds) {\n            RpgPlugin.on(HookClient.AddSound, () => sounds)\n        }\n        if (gui) {\n            RpgPlugin.on(HookClient.AddGui, () => gui)\n        }\n        const player = side == Side.Server ? mod.player : mod.sprite\n        const loadRelations = (hook, relationName) => {\n            if (!hook) return\n            for (let method in relations[relationName]) {\n                const hookName = relations[relationName][method]\n                if (hook[method]) RpgPlugin.on(hookName, hook[method])\n            }\n            if (hooks[relationName]) {\n                for (let methodName of hooks[relationName]) {\n                    const hookName = side + '.' + relationName + '.' + methodName\n                    RpgPlugin.customHooks[hookName] = true\n                    if (hook[methodName]) RpgPlugin.on(hookName, hook[methodName])\n                }\n            }\n        }\n        loadRelations(player, 'player')\n        if (player && player.props) {\n            playerProps = Object.assign(playerProps, player.props)\n        }\n        loadRelations(engine, 'engine')\n        if (scalability) loadRelations(scalability._hooks, 'scalability')\n        if (scenes) loadRelations(scenes.map, 'sceneMap')\n    }\n\n    return {\n        playerProps\n    }\n}", "class MockIo {\n    events: Map<string, any> = new Map()\n\n    on(name: string, value) {\n        this.events.set(name, value)\n    }\n\n    off(name: string) {\n        this.events.delete(name)\n    }\n\n    once(name: string, value) {\n        this.on(name, value)\n    }\n\n    _trigger(name: string, data, client?) {\n        const fn = this.events.get(name)\n        if (fn) fn(data, client)\n    }\n}\n\nclass MockSocket {\n    id: string\n\n    constructor(private io: any, public handshake) {\n        this.id = ''+Math.random()\n    }\n    \n    on(name: string, value) {\n        this.io.on(name, value, this.id)\n        return this\n    }\n\n    once(name: string, value) {\n        this.io.once(name, value, this.id)\n        return this\n    }\n\n    emit(name: string, data) {\n        this.io.emit(name, data, this.id)\n    }\n\n    removeAllListeners(name: string) {\n        return this.off(name)\n    }\n\n    off(name: string) {\n        this.io.off(name, this.id)\n    }\n}\n\nclass MockClientIo extends MockIo {\n    id: string = ''\n\n    connection(handshake: any) {\n        serverIo.connection(this, handshake)\n        this._trigger('connect', undefined)\n        return this\n    }\n\n    emit(name: string, data) {\n        serverIo._trigger(name, data, this)\n        return this\n    }\n\n    disconnect() {\n        this.emit('disconnect', undefined)\n    }\n}\n\nclass MockServerIo extends MockIo {\n    private clients: Map<string, MockClientIo> = new Map()\n\n    connection(client, handshake) {\n        const socket = new MockSocket(this, handshake)\n        this.clients.set(socket.id, client)\n        client.id = socket.id\n        this._trigger('connection', socket)\n    }\n\n    emit(name: string, data, id) {\n        this.clients.get(id)?._trigger(name, data)\n    }\n\n    clear() {\n        this.clients.clear()\n    }\n}\n\nexport const serverIo = new MockServerIo()\nexport const ClientIo = MockClientIo", "import { Tick } from '@rpgjs/types';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { EventEmitter } from './EventEmitter';\nimport Utils from './Utils';\n\nexport class Scheduler extends EventEmitter {\n    private maxFps?: number\n    private fps: number = 60\n    private deltaTime: number = 0\n    public frame: number = 0\n    private timestamp: number = 0\n    private requestedDelay: number = 0\n    private lastTimestamp: number = 0\n    private _tick: BehaviorSubject<Tick> = new BehaviorSubject({\n        timestamp: 0,\n        deltaTime: 0,\n        frame: 0,\n        deltaRatio: 0\n    })\n    private _stop: boolean = false\n\n    get tick(): Observable<Tick> {\n        return this._tick.asObservable()\n    }\n\n    nextTick(timestamp: number) {\n        this.lastTimestamp = this.lastTimestamp || this.timestamp // first\n        this.deltaTime =  Utils.preciseNow() - this.timestamp\n        this.timestamp = timestamp\n        this._tick.next({\n            timestamp: this.timestamp,\n            deltaTime: this.deltaTime,\n            frame: this.frame,\n            deltaRatio: ~~this.deltaTime / ~~Utils.fps2ms(this.fps)\n        })\n        this.lastTimestamp = this.timestamp\n        this.frame++\n    }\n\n    /**\n     * start the schedule\n     * @return {Scheduler} returns this scheduler instance\n     */\n    start(options: {\n        maxFps?: number\n        fps?: number,\n        delay?: number\n    }) {\n        if (options.maxFps) this.maxFps = options.maxFps\n        if (options.fps) this.fps = options.fps\n        if (options.delay) this.requestedDelay = options.delay\n        const requestAnimationFrame = (fn: (timestamp: number) => void) => {\n            if (Utils.isBrowser()) {\n                window.requestAnimationFrame(fn.bind(this))\n            }\n            else {\n                setTimeout(() => {\n                    this.requestedDelay = 0\n                    fn(Utils.preciseNow())\n                }, Utils.fps2ms(this.fps) + this.requestedDelay)\n            }\n        }\n\n        if (!this.maxFps) {\n            const loop = (timestamp: number) => {\n                requestAnimationFrame(loop)\n                this.nextTick(timestamp)\n            }\n            requestAnimationFrame(loop)\n        }\n        else {\n            const msInterval = Utils.fps2ms(this.maxFps)\n            let now = Utils.preciseNow()\n            let then = Utils.preciseNow()\n            const loop = (timestamp: number) => {\n                if (this._stop) return\n                requestAnimationFrame(loop)\n                now = Utils.preciseNow()\n                const elapsed = now - then\n                if (elapsed > msInterval) {\n                    then = now - (elapsed % msInterval)\n                    this.nextTick(timestamp)\n                }\n            }\n            requestAnimationFrame(loop)\n        }\n\n        return this;\n    }\n\n    stop() {\n        this._stop = true\n        this._tick.complete()\n    }\n}\n", "\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n", "import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n", "import RBush from 'rbush'\nimport { TiledWorldMap } from '@rpgjs/tiled'\nimport { RpgCommonMap } from './Map'\nimport { Direction } from '@rpgjs/types'\n\nexport interface RpgClassMap<T> {\n    id?: string\n    new (server: any): T,\n}\n\nexport interface RpgTiledWorldMap extends TiledWorldMap{\n    properties?: {\n        [key: string]: any\n    }\n}\n\ntype PositionBox = { minX: number, minY: number, maxX: number, maxY: number }\ntype MapTree = { map: RpgClassMap<RpgCommonMap> } & PositionBox\n\nexport class RpgCommonWorldMaps {\n    private mapsTree: RBush = new RBush(500)\n    private maps: Map<string, RpgTiledWorldMap> = new Map()\n\n    constructor(public id: string) {}\n\n    /**\n     * Adding information from the map to the world\n     *\n     * > Maximum maps in world: 500\n     * \n     * @title Add Map in world\n     * @method world.addMap(wordMapInfo,map)\n     * @param {object} wordMapInfo \n     * Object file:\n     * ```ts\n     * {\n     *  fileName: string;\n        height: number;\n        width: number;\n        x: number;\n        y: number;\n     * }\n        ```\n        `fileName` represents a file to the JSON file (TMX transformed) or directly the Tiled Map Editor object\n     * \n     * @param {class of RpgMap} map \n     * @since 3.0.0-beta.8\n     * @memberof RpgWorldMaps\n     */\n    addMap(wordMapInfo: RpgTiledWorldMap, map: RpgClassMap<RpgCommonMap>) {\n        const { x, y, height, width } = wordMapInfo\n        map.prototype.worldMapParent = this\n        this.maps.set(map.id as string, wordMapInfo)\n        this.mapsTree.insert<MapTree>({\n            minX: x,\n            minY: y,\n            maxX: x + width,\n            maxY: y + height,\n            map\n        })\n    }\n\n    updateMap(mapId: string, wordMapInfo: RpgTiledWorldMap): boolean {\n        const map = this.maps.get(mapId)\n        if (map) {\n            const item = (this.mapsTree.all() as MapTree[]).find(item => item.map.id == mapId)\n            if (!item) return false\n            this.maps.set(mapId, wordMapInfo)\n            item.map.prototype.worldMapParent = this\n            item.minX = wordMapInfo.x\n            item.minY = wordMapInfo.y\n            item.maxX = wordMapInfo.x + wordMapInfo.width\n            item.maxY = wordMapInfo.y + wordMapInfo.height\n            return true\n        }\n        return false\n    }\n\n    /**\n     * Remove map of the world\n     * @title Remove map of the world\n     * @method world.removeMap(mapId)\n     * @param {string} mapId \n     * @returns {boolean}\n     * @since 3.0.0-beta.8\n     * @memberof RpgWorldMaps\n     */\n    removeMap(mapId: string): boolean {\n        const map = this.maps.get(mapId)\n        if (map) {\n            const item = (this.mapsTree.all() as MapTree[]).find(item => item.map.id == mapId)\n            if (!item) return false\n            this.maps.delete(mapId)\n            item.map.prototype.worldMapParent = undefined\n            this.mapsTree.remove(item)\n            return true\n        }\n        return false\n    }\n\n    removeAllMaps() {\n        this.maps.forEach((map, id) => {\n            this.removeMap(id)\n        })\n    }\n\n    /**\n     * Retrieve information from the world\n     * \n     * @title Retrieve information from the world\n     * @method world.getMapInfo(id)\n     * @param {string} id map id\n     * @return {RpgTiledWorldMap | undefined}\n     * {\n     *  id?: string\n     *  properties?: object\n     *  fileName: string;\n        height: number;\n        width: number;\n        x: number;\n        y: number;\n     * }\n     * @since 3.0.0-beta.8\n     * @memberof RpgWorldMaps\n     */\n    getMapInfo(id: string): RpgTiledWorldMap | undefined {\n        return this.maps.get(id)\n    }\n\n    /**\n     * Retrieves neighboring maps according to positions or direction\n     * \n     * @title Retrieves neighboring maps\n     * @method world.getAdjacentMaps(map,search)\n     * @param {RpgMap} map The source map. We want to find the neighboring maps of the source map\n     * @param { PositionBox | Direction | { x: number, y: number } } search Research method\n     *  * PositionBox. An object of the following form:\n     *  `{ minX: number, minY: number, maxX: number, maxY: number }`\n     *  * Direction. Collect all the maps in the given direction (e.g. the maps at the top)\n     *  * Point: { x: number, y: number }\n     * @return { {class of RpgMap}[] }\n     * @since 3.0.0-beta.8\n     * @example\n     * ```ts\n     * world.getAdjacentMaps(mymap, Direction.Up) // returns [class of RpgMap]\n     * ```\n     * @memberof RpgWorldMaps\n     */\n    getAdjacentMaps(map: RpgCommonMap, search: PositionBox | Direction | { x: number, y: number }): RpgClassMap<RpgCommonMap>[] {\n        let position: PositionBox = {} as PositionBox\n        const point = search as { x: number, y: number }\n        if (typeof search == 'number') {\n            const padding = 1\n            switch (search) {\n                case Direction.Up:\n                    position = {\n                        minX: map.worldX + padding,\n                        maxX: map.worldX + map.widthPx - padding,\n                        minY: map.worldY - padding - 1,\n                        maxY: map.worldY - padding \n                    }\n                    break;\n                case Direction.Right:\n                    position = {\n                        minX: map.worldX + map.widthPx + padding,\n                        maxX: map.worldX + map.widthPx + padding + 1,\n                        minY: map.worldY + padding,\n                        maxY: map.worldY + map.heightPx - padding\n                    }\n                    break;\n                case Direction.Down:\n                    position = {\n                        minX: map.worldX + padding,\n                        maxX: map.worldX + map.widthPx - padding,\n                        minY: map.worldY + map.heightPx + padding,\n                        maxY: map.worldY + map.heightPx + padding + 1\n                    }\n                    break;\n                case Direction.Left:\n                    position = {\n                        minX: map.worldX - padding,\n                        maxX: map.worldX - padding - 1,\n                        minY: map.worldY + padding,\n                        maxY: map.worldY + map.heightPx - padding\n                    }\n                    break;\n            }\n            \n        }\n        else if (point.x) {\n            position = {\n                minX: point.x,\n                maxX: point.x,\n                minY: point.y,\n                maxY: point.y\n            }\n        }\n        else {\n            position = search as PositionBox\n        }\n        const result = this.mapsTree.search(position)\n        return result.map(ret => ret.map)\n    }\n}", "type RGB = [number, number, number];\n\nfunction hexToRGB(hex: string): RGB {\n    let r = parseInt(hex.substring(0, 2), 16);\n    let g = parseInt(hex.substring(2, 4), 16);\n    let b = parseInt(hex.substring(4, 6), 16);\n    return [r, g, b];\n}\n\nfunction RGBToHex(rgb: RGB): string {\n    let r = rgb[0].toString(16).padStart(2, '0');\n    let g = rgb[1].toString(16).padStart(2, '0');\n    let b = rgb[2].toString(16).padStart(2, '0');\n    return r + g + b;\n}\n\nexport function transitionColor(startColor: string, endColor: string, steps: number): string[] {\n    let startRGB = hexToRGB(startColor.replace('#', ''));\n    let endRGB = hexToRGB(endColor.replace('#', ''));\n    let deltaRGB = [(endRGB[0] - startRGB[0]) / steps, (endRGB[1] - startRGB[1]) / steps, (endRGB[2] - startRGB[2]) / steps];\n\n    let colors: string[] = [];\n    for (let i = 0; i < steps; i++) {\n        let color = [startRGB[0] + deltaRGB[0] * i, startRGB[1] + deltaRGB[1] * i, startRGB[2] + deltaRGB[2] * i];\n        colors.push(RGBToHex(color as any));\n    }\n    colors.push(endColor.replace('#', ''));\n    return colors;\n}", "import { Controls, Input, Control } from '@rpgjs/types'\n\nexport const DefaultInput: Controls = {\n    [Control.Up]: {\n        repeat: true,\n        bind: Input.Up\n    },\n    [Control.Down]: {\n        repeat: true,\n        bind: Input.Down\n    },\n    [Control.Right]: {\n        repeat: true,\n        bind: Input.Right\n    },\n    [Control.Left]: {\n        repeat: true,\n        bind: Input.Left\n    },\n    [Control.Action]: {\n        bind: [Input.Space, Input.Enter]\n    },\n    [Control.Back]: {\n        bind: Input.Escape\n    }\n} ", "type Constructor<T> = new (...args: any[]) => T;\ntype ServiceIdentifier<T> = string;\n\nexport class InjectContext {\n    private instances = new Map<ServiceIdentifier<any>, any>();\n\n    inject<T>(constructor: Constructor<T>, args: any[] = []): T {\n        const serviceName = constructor.name;\n        if (!this.instances.has(serviceName)) {\n            const instance = new constructor(this, ...args);\n            if (instance['initialize']) {\n                instance['initialize'](...args);\n            }\n            this.instances.set(serviceName, instance);\n        }\n        return this.instances.get(serviceName);\n    }\n}\n\nexport interface InjectInit {\n    initialize(...args: any[]): any\n}"],
  "mappings": "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",
  "names": ["SAT", "i", "min", "max", "listeners", "copy", "domain", "keys", "e", "timeout", "performance", "addListener", "once", "removeListener", "removeAllListeners", "emit", "inherits", "isString", "x", "isObject", "set", "isFunction", "keys", "isArray", "buffer", "Buffer", "fill", "isArray", "read", "i", "max", "min", "toString", "inspect", "compare", "write", "byteLength", "Buffer", "Buffer", "buffer", "prependListener", "listenerCount", "indexOf", "onend", "Buffer", "last", "buffer", "count", "onend", "emit", "write", "Stream", "s", "buffer", "isArray", "copy", "isArray", "xml2js", "isArray", "xml2js", "toString", "alloc", "from", "Buffer", "alloc", "from", "alloc", "from", "byteLength", "copy", "toString", "write", "buffer", "copy", "slice", "toString", "Buffer", "buffer", "Buffer", "isArray", "isBuffer", "alloc", "concat", "from", "fromString", "buffer", "buffer", "Buffer", "exports", "isArray", "toString", "toArray", "buffer", "init", "fromString", "buffer", "Buffer", "writeFloatBE", "writeDoubleBE", "write2", "buffer", "isBuffer", "map", "buffer", "keys", "filter", "join", "iterator", "init", "write", "read", "fetch", "pull", "buffer", "Buffer", "read", "readFloatBE", "readDoubleBE", "buffer", "format", "init", "buffer", "EventLite", "on", "once", "off", "emit", "listeners", "min", "max", "buffer", "MoveClientMode", "Behavior", "Direction", "PlayerType", "Control", "Input", "HitType", "SocketMethods", "SocketEvents", "SAT", "TiledLayerType", "last", "from", "basename", "attr", "buffer", "Buffer", "group", "tileset", "ret", "isString", "fs", "basename", "map", "err", "resolve", "map", "tile", "buffer", "ShapePositioning", "d", "b", "__assign", "resolve", "from", "resume", "resolve", "v", "isFunction", "Subscription", "isFunction", "empty", "isFunction", "config", "timeout", "config", "noop", "config", "Subscriber", "ConsumerObserver", "SafeSubscriber", "isFunction", "config", "config", "noop", "Observable", "observable", "resolve", "config", "isFunction", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "isFunction", "init", "OperatorSubscriber", "err", "isFunction", "_a", "ConnectableObservable", "timestamp", "timestamp", "ReplaySubject", "copy", "last", "AsyncSubject", "Action", "delay", "timeout", "AsyncAction", "delay", "AsapAction", "delay", "Scheduler", "delay", "AsyncScheduler", "AsapScheduler", "QueueAction", "delay", "QueueScheduler", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "delay", "isFunction", "isFunction", "isPromise", "isFunction", "isFunction", "isFunction", "isFunction", "done", "isFunction", "fromArrayLike", "isPromise", "isFunction", "process", "delay", "repeat", "delay", "delay", "iterator", "done", "isFunction", "iterator", "isPromise", "from", "from", "isFunction", "init", "NotificationKind", "Notification", "isFunction", "config", "resolve", "isArray", "isArray", "keys", "keys", "keys", "from", "i", "expand", "buffer", "isFunction", "keys", "sourceIndex", "noop", "isArray", "filter", "first", "noop", "TimeInterval", "interval", "EventEmitter", "HookServer", "HookClient", "EventEmitter", "import_sat", "_a", "buffer", "filter", "object", "from", "GameSide", "EventEmitter", "control", "SAT", "map", "hitbox", "count", "from", "filter", "PrebuiltGui", "Side", "Scheduler", "EventEmitter", "timestamp", "requestAnimationFrame", "compare", "defaultCompare", "swap", "compare", "map", "item"]
}
