import { constructor } from "@rpgjs/types";
export declare function random(min: number, max: number): number;
export declare function isBrowser(): boolean;
export declare function isFunction(val: unknown): boolean;
export declare function isClass(func: unknown): boolean;
export declare function isPromise(val: unknown): boolean;
export declare function isArray(val: unknown): boolean;
export declare function isObject(val: unknown): boolean;
export declare function isString(val: unknown): boolean;
export declare function isInstanceOf<T = any>(val: unknown, _class: any): boolean;
export declare function arrayUniq(array: any[]): any[];
export declare function arrayFlat(array: any[]): any[];
export declare function intersection([start1, end1]: [number, number], [start2, end2]: [number, number]): boolean;
export declare function capitalize(s: unknown): string;
export declare function camelToKebab(str: string): string;
export declare function arrayEquals(a: any[], b: any[]): boolean;
export declare function applyMixins(derivedCtor: constructor<any>, baseCtors: constructor<any>[]): void;
export declare function generateUID(): string;
export declare function createConstructor<T>(...propNames: any[]): T;
export declare function sharedArrayBuffer(): any;
export declare function toRadians(angle: number): number;
export declare function hexaToNumber(hexa: string): {
    value: number;
    alpha: number;
};
export declare function extractId(path: string): string | null;
export declare function basename(path: string): string;
export declare function fps2ms(fps: number): number;
export declare function preciseNow(): number;
export declare function round(num: number, decimals?: number): number;
export declare function set(obj: any, path: any, value: any, onlyPlainObject?: boolean): any;
export declare function elementToPositionAbsolute(element: HTMLElement): void;
declare const _default: {
    random: typeof random;
    isBrowser: typeof isBrowser;
    isPromise: typeof isPromise;
    isArray: typeof isArray;
    isObject: typeof isObject;
    isString: typeof isString;
    isFunction: typeof isFunction;
    isClass: typeof isClass;
    isInstanceOf: typeof isInstanceOf;
    arrayUniq: typeof arrayUniq;
    arrayFlat: typeof arrayFlat;
    arrayEquals: typeof arrayEquals;
    intersection: typeof intersection;
    applyMixins: typeof applyMixins;
    capitalize: typeof capitalize;
    sharedArrayBuffer: typeof sharedArrayBuffer;
    generateUID: typeof generateUID;
    createConstructor: typeof createConstructor;
    toRadians: typeof toRadians;
    extractId: typeof extractId;
    basename: typeof basename;
    fps2ms: typeof fps2ms;
    preciseNow: typeof preciseNow;
    hexaToNumber: typeof hexaToNumber;
    set: typeof set;
    round: typeof round;
    camelToKebab: typeof camelToKebab;
    elementToPositionAbsolute: typeof elementToPositionAbsolute;
};
export default _default;
