import { EventEmitter } from '@rpgjs/common';
export class Gui extends EventEmitter {
    constructor(id, player) {
        super();
        this.id = id;
        this.player = player;
        this._close = () => { };
        this._blockPlayerInput = false;
    }
    open(data, { waitingAction = false, blockPlayerInput = false } = {}) {
        return new Promise((resolve) => {
            this.player.moving = false;
            this.player.emit('gui.open', {
                guiId: this.id,
                data
            });
            this._blockPlayerInput = blockPlayerInput;
            if (blockPlayerInput) {
                this.player.canMove = false;
            }
            if (!waitingAction) {
                resolve(null);
            }
            else {
                this._close = resolve;
            }
        });
    }
    close(data) {
        this.player.emit('gui.exit', this.id);
        if (this._blockPlayerInput) {
            this.player.canMove = true;
        }
        this._close(data);
    }
}
//# sourceMappingURL=Gui.js.map