import axios from 'axios';
import { Utils } from '@rpgjs/common';
import { inject } from './inject.js';
import { RpgServerEngine } from './server.js';
export class RpgMatchMaker {
    constructor(options) {
        this.options = options;
        this.endpoint = options.endpoint;
        this.headers = options.headers;
        this.callback = options.callback;
    }
    async getServer(player) {
        const currentServerId = inject(RpgServerEngine).serverId;
        const payload = {
            playerId: player.id,
            mapName: player.map
        };
        let res = {};
        if (this.callback) {
            res = this.callback(payload);
            if (Utils.isPromise(res)) {
                res = await res;
            }
        }
        if (this.endpoint) {
            try {
                res = await axios.post(this.endpoint, payload, {
                    headers: this.headers
                }).then(res => res.data);
            }
            catch (err) {
                console.log('There is a problem with the MatchMaker webservice.');
                throw err;
            }
        }
        if (currentServerId == res.serverId) {
            return null;
        }
        return res;
    }
}
//# sourceMappingURL=MatchMaker.js.map