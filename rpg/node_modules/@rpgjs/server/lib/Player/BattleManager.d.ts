import { ParameterManager } from './ParameterManager';
import { RpgPlayer } from './Player';
import { ElementManager } from './ElementManager';
import { EffectManager } from './EffectManager';
import { RpgServerEngine } from '../server';
export declare class BattleManager {
    /**
     * Apply damage. Player will lose HP. the `attackerPlayer` parameter is the other player, the one who attacks.
     *
     * If you don't set the skill parameter, it will be a physical attack.
     * The attack formula is already defined but you can customize it in the server options
     *
     * ```ts
     * player.applyDamage(attackerPlayer) // returns { damage: number }
     * ```
     *
     * @title Apply Damage
     * @method player.applyDamage(attackerPlayer,skill)
     * @param {RpgPlayer} attackerPlayer The attacking player
     * @param {any} [skill]
     * @returns {object}
     * @memberof BattleManager
     * */
    applyDamage(attackerPlayer: RpgPlayer, skill?: any): {
        damage: number;
        critical: boolean;
        elementVulnerable: boolean;
        guard: boolean;
        superGuard: boolean;
    };
    getFormulas(name: string): any;
}
export interface BattleManager extends ParameterManager, ElementManager, EffectManager {
    name: string;
    server: RpgServerEngine;
}
