import { ParameterManager } from './ParameterManager';
import { ItemManager } from './ItemManager';
type ClassClass = {
    new (...args: any[]): any;
};
type ActorClass = {
    new (...args: any[]): any;
};
export declare class ClassManager {
    _class: any;
    /**
     * Assign a class to the player
     *
     * ```ts
     * import { Fighter } from 'my-database/classes/fighter'
     *
     * player.setClass(Fighter)
     * ```
     *
     * @title Set Class
     * @method player.setClass(ClassClass)
     * @param {ClassClass | string} class class or id
     * @returns {instance of ClassClass}
     * @memberof ClassManager
     * */
    setClass(_class: ClassClass | string): any;
    /**
     * Allows to give a set of already defined properties to the player (default equipment, or a list of skills to learn according to the level)
     *
     * ```ts
     * import { Hero } from 'my-database/classes/hero'
     *
     * player.setActor(Hero)
     * ```
     *
     * @title Set Actor
     * @method player.setActor(ActorClass)
     * @param {ActorClass | string} actorClass actor class or id
     * @returns {instance of ActorClass}
     * @memberof ClassManager
     * */
    setActor(actorClass: ActorClass | string): any;
}
export interface ClassManager extends ParameterManager, ItemManager {
    name: string;
}
export {};
