import { Effect } from '@rpgjs/database';
import { ParameterManager } from './ParameterManager';
export declare class EffectManager {
    _effects: Effect[];
    applyEffect(item: any): void;
    /**
     * ```ts
     * import { Effect } from '@rpgjs/database'
     *
     * const bool = player.hasEffect(Effect.CAN_NOT_SKILL)
     * ```
     *
     * @title Has Effect
     * @method player.hasEffect(effect)
     * @param {Effect} effect
     * @returns {boolean}
     * @memberof EffectManager
     * */
    hasEffect(effect: Effect): boolean;
    /**
     * Retrieves a array of effects assigned to the player, state effects and effects of weapons and armors equipped with the player's own weapons.
     *
     * ```ts
     * console.log(player.effects)
     * ```
     * @title Get Effects
     * @prop {Array<Effect>} player.effects
     * @memberof EffectManager
     * */
    get effects(): any[];
    /**
     * Assigns effects to the player. If you give a array, it does not change the effects of the player's states and armor/weapons equipped.
     *
     * ```ts
     * import { Effect } from '@rpgjs/database'
     *
     * player.effects = [Effect.CAN_NOT_SKILL]
     * ```
     * @title Set Effects
     * @prop {Array<Effect>} player.effects
     * @memberof EffectManager
     * */
    set effects(val: any[]);
}
export interface EffectManager extends ParameterManager {
}
