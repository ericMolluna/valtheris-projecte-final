export class Collection {
    constructor(collectionClass) {
        this.collectionClass = collectionClass;
        this.collection = new Map();
        this.removeCb = (key) => { };
        this.addCb = (key, data) => { };
    }
    registerRemoveCallback(cb) {
        this.removeCb = cb;
    }
    registerAddCallback(cb) {
        this.addCb = cb;
    }
    detectChanges(data) {
        let newObj = {};
        for (let key in data) {
            const obj = data[key];
            if (obj == null) {
                this.collection.delete(key);
                this.removeCb(key);
                continue;
            }
            const instance = this.collectionClass ? new this.collectionClass(obj, key) : obj;
            if (!this.collection.has(key)) {
                this.addCb(key, instance);
            }
            this.collection.set(key, instance);
            newObj[key] = instance;
        }
        return newObj;
    }
}
//# sourceMappingURL=collection.js.map