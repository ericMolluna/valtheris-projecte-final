declare class MockIo {
    events: Map<string, any>;
    on(name: string, value: any): void;
    off(name: string): void;
    once(name: string, value: any): void;
    _trigger(name: string, data: any, client?: any): void;
}
declare class MockClientIo extends MockIo {
    id: string;
    connection(handshake: any): this;
    emit(name: string, data: any): this;
    disconnect(): void;
}
declare class MockServerIo extends MockIo {
    private clients;
    connection(client: any, handshake: any): void;
    emit(name: string, data: any, id: any): void;
    clear(): void;
}
export declare const serverIo: MockServerIo;
export declare const ClientIo: typeof MockClientIo;
export {};
