import { Packet } from './packet';
import { RoomClass } from './interfaces/room.interface';
import { User } from './rooms/default';
import { CustomError } from './errors/error';
declare class TransmitterClass {
    encode: boolean;
    private packets;
    addPacket(room: RoomClass, obj: Object): void;
    forEach(cb: (packet: Packet[], roomId: string) => void): void;
    getPackets(room: RoomClass): Packet[] | undefined;
    clear(room?: RoomClass): void;
    error(user: User, error: CustomError | string): void;
    emit(user: User, packet: Packet, room: RoomClass): Promise<void>;
}
export declare const Transmitter: TransmitterClass;
export {};
